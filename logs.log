2024-09-23 19:10:41,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:10:41,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:10:41,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:10:41,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:10:53,773:INFO:PyCaret ClassificationExperiment
2024-09-23 19:10:53,773:INFO:Logging name: clf-default-name
2024-09-23 19:10:53,773:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-23 19:10:53,773:INFO:version 3.3.2
2024-09-23 19:10:53,773:INFO:Initializing setup()
2024-09-23 19:10:53,773:INFO:self.USI: f51e
2024-09-23 19:10:53,773:INFO:self._variable_keys: {'X_test', 'fold_shuffle_param', 'y_train', 'X', 'n_jobs_param', 'fold_generator', 'logging_param', '_available_plots', 'pipeline', 'fold_groups_param', 'seed', 'X_train', 'y', 'is_multiclass', 'memory', 'gpu_param', 'log_plots_param', '_ml_usecase', 'y_test', 'data', 'html_param', 'fix_imbalance', 'idx', 'USI', 'gpu_n_jobs_param', 'target_param', 'exp_id', 'exp_name_log'}
2024-09-23 19:10:53,773:INFO:Checking environment
2024-09-23 19:10:53,773:INFO:python_version: 3.10.12
2024-09-23 19:10:53,773:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-23 19:10:53,773:INFO:machine: arm64
2024-09-23 19:10:53,803:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:10:53,803:INFO:Memory: svmem(total=17179869184, available=3631890432, percent=78.9, used=6250004480, free=67485696, active=3575005184, inactive=3530768384, wired=2674999296)
2024-09-23 19:10:53,803:INFO:Physical Core: 10
2024-09-23 19:10:53,803:INFO:Logical Core: 10
2024-09-23 19:10:53,803:INFO:Checking libraries
2024-09-23 19:10:53,803:INFO:System:
2024-09-23 19:10:53,803:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-23 19:10:53,803:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-23 19:10:53,803:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:10:53,804:INFO:PyCaret required dependencies:
2024-09-23 19:21:28,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:28,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:28,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:28,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:29,481:INFO:PyCaret ClassificationExperiment
2024-09-23 19:21:29,481:INFO:Logging name: clf-default-name
2024-09-23 19:21:29,481:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-23 19:21:29,481:INFO:version 3.3.2
2024-09-23 19:21:29,481:INFO:Initializing setup()
2024-09-23 19:21:29,482:INFO:self.USI: 0e42
2024-09-23 19:21:29,482:INFO:self._variable_keys: {'pipeline', 'y_train', 'target_param', 'gpu_param', 'idx', 'gpu_n_jobs_param', 'memory', 'fix_imbalance', 'exp_id', '_ml_usecase', 'y_test', 'seed', 'USI', 'log_plots_param', 'data', 'exp_name_log', 'html_param', 'logging_param', '_available_plots', 'fold_groups_param', 'y', 'is_multiclass', 'n_jobs_param', 'fold_shuffle_param', 'X_test', 'fold_generator', 'X_train', 'X'}
2024-09-23 19:21:29,482:INFO:Checking environment
2024-09-23 19:21:29,482:INFO:python_version: 3.10.12
2024-09-23 19:21:29,482:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-23 19:21:29,482:INFO:machine: arm64
2024-09-23 19:21:29,513:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:21:29,514:INFO:Memory: svmem(total=17179869184, available=6429392896, percent=62.6, used=6341591040, free=2897444864, active=3538255872, inactive=3422011392, wired=2803335168)
2024-09-23 19:21:29,514:INFO:Physical Core: 10
2024-09-23 19:21:29,514:INFO:Logical Core: 10
2024-09-23 19:21:29,514:INFO:Checking libraries
2024-09-23 19:21:29,514:INFO:System:
2024-09-23 19:21:29,514:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-23 19:21:29,514:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-23 19:21:29,514:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:21:29,515:INFO:PyCaret required dependencies:
2024-09-23 19:21:30,427:INFO:                 pip: 23.0.1
2024-09-23 19:21:30,427:INFO:          setuptools: 65.5.0
2024-09-23 19:21:30,427:INFO:             pycaret: 3.3.2
2024-09-23 19:21:30,427:INFO:             IPython: 8.27.0
2024-09-23 19:21:30,427:INFO:          ipywidgets: 8.1.5
2024-09-23 19:21:30,427:INFO:                tqdm: 4.66.5
2024-09-23 19:21:30,427:INFO:               numpy: 1.26.4
2024-09-23 19:21:30,427:INFO:              pandas: 2.1.4
2024-09-23 19:21:30,427:INFO:              jinja2: 3.1.4
2024-09-23 19:21:30,427:INFO:               scipy: 1.11.4
2024-09-23 19:21:30,427:INFO:              joblib: 1.3.2
2024-09-23 19:21:30,427:INFO:             sklearn: 1.4.2
2024-09-23 19:21:30,427:INFO:                pyod: 2.0.2
2024-09-23 19:21:30,427:INFO:            imblearn: 0.12.3
2024-09-23 19:21:30,427:INFO:   category_encoders: 2.6.3
2024-09-23 19:21:30,427:INFO:            lightgbm: 4.5.0
2024-09-23 19:21:30,427:INFO:               numba: 0.60.0
2024-09-23 19:21:30,427:INFO:            requests: 2.32.3
2024-09-23 19:21:30,427:INFO:          matplotlib: 3.7.5
2024-09-23 19:21:30,427:INFO:          scikitplot: 0.3.7
2024-09-23 19:21:30,427:INFO:         yellowbrick: 1.5
2024-09-23 19:21:30,427:INFO:              plotly: 5.24.1
2024-09-23 19:21:30,427:INFO:    plotly-resampler: Not installed
2024-09-23 19:21:30,427:INFO:             kaleido: 0.2.1
2024-09-23 19:21:30,427:INFO:           schemdraw: 0.15
2024-09-23 19:21:30,427:INFO:         statsmodels: 0.14.3
2024-09-23 19:21:30,427:INFO:              sktime: 0.26.0
2024-09-23 19:21:30,427:INFO:               tbats: 1.1.3
2024-09-23 19:21:30,427:INFO:            pmdarima: 2.0.4
2024-09-23 19:21:30,427:INFO:              psutil: 6.0.0
2024-09-23 19:21:30,427:INFO:          markupsafe: 2.1.5
2024-09-23 19:21:30,427:INFO:             pickle5: Not installed
2024-09-23 19:21:30,428:INFO:         cloudpickle: 3.0.0
2024-09-23 19:21:30,428:INFO:         deprecation: 2.1.0
2024-09-23 19:21:30,428:INFO:              xxhash: 3.5.0
2024-09-23 19:21:30,428:INFO:           wurlitzer: 3.1.1
2024-09-23 19:21:30,428:INFO:PyCaret optional dependencies:
2024-09-23 19:21:30,437:INFO:                shap: 0.46.0
2024-09-23 19:21:30,437:INFO:           interpret: Not installed
2024-09-23 19:21:30,437:INFO:                umap: Not installed
2024-09-23 19:21:30,437:INFO:     ydata_profiling: Not installed
2024-09-23 19:21:30,437:INFO:  explainerdashboard: Not installed
2024-09-23 19:21:30,437:INFO:             autoviz: Not installed
2024-09-23 19:21:30,437:INFO:           fairlearn: Not installed
2024-09-23 19:21:30,437:INFO:          deepchecks: Not installed
2024-09-23 19:21:30,437:INFO:             xgboost: Not installed
2024-09-23 19:21:30,437:INFO:            catboost: Not installed
2024-09-23 19:21:30,437:INFO:              kmodes: Not installed
2024-09-23 19:21:30,437:INFO:             mlxtend: Not installed
2024-09-23 19:21:30,437:INFO:       statsforecast: Not installed
2024-09-23 19:21:30,437:INFO:        tune_sklearn: Not installed
2024-09-23 19:21:30,438:INFO:                 ray: Not installed
2024-09-23 19:21:30,438:INFO:            hyperopt: Not installed
2024-09-23 19:21:30,438:INFO:              optuna: Not installed
2024-09-23 19:21:30,438:INFO:               skopt: Not installed
2024-09-23 19:21:30,438:INFO:              mlflow: Not installed
2024-09-23 19:21:30,438:INFO:              gradio: Not installed
2024-09-23 19:21:30,438:INFO:             fastapi: Not installed
2024-09-23 19:21:30,438:INFO:             uvicorn: Not installed
2024-09-23 19:21:30,438:INFO:              m2cgen: Not installed
2024-09-23 19:21:30,438:INFO:           evidently: Not installed
2024-09-23 19:21:30,438:INFO:               fugue: Not installed
2024-09-23 19:21:30,438:INFO:           streamlit: Not installed
2024-09-23 19:21:30,438:INFO:             prophet: Not installed
2024-09-23 19:21:30,438:INFO:None
2024-09-23 19:21:30,438:INFO:Set up data.
2024-09-23 19:21:30,445:INFO:Set up folding strategy.
2024-09-23 19:21:30,445:INFO:Set up train/test split.
2024-09-23 19:21:30,752:INFO:Set up index.
2024-09-23 19:21:30,752:INFO:Assigning column types.
2024-09-23 19:21:30,755:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-23 19:21:30,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,790:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,831:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,831:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,844:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-23 19:21:30,863:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,895:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,908:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,908:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-23 19:21:30,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,973:INFO:Preparing preprocessing pipeline...
2024-09-23 19:21:30,974:INFO:Set up simple imputation.
2024-09-23 19:21:30,975:INFO:Set up encoding of ordinal features.
2024-09-23 19:21:30,975:INFO:Set up encoding of categorical features.
2024-09-23 19:21:30,976:INFO:Set up feature normalization.
2024-09-23 19:21:31,010:INFO:Finished creating preprocessing pipeline.
2024-09-23 19:21:31,018:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-23 19:21:31,018:INFO:Creating final display dataframe.
2024-09-23 19:21:31,103:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              0e42
2024-09-23 19:21:31,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:31,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:31,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:31,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:31,169:INFO:setup() successfully completed in 1.69s...............
2024-09-23 19:21:43,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:43,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:43,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:43,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:23:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:23:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:23:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:23:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:23:05,519:INFO:PyCaret ClassificationExperiment
2024-09-23 19:23:05,519:INFO:Logging name: clf-default-name
2024-09-23 19:23:05,519:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-23 19:23:05,519:INFO:version 3.3.2
2024-09-23 19:23:05,519:INFO:Initializing setup()
2024-09-23 19:23:05,519:INFO:self.USI: 4e73
2024-09-23 19:23:05,520:INFO:self._variable_keys: {'data', 'pipeline', 'gpu_param', 'X_train', 'fold_generator', 'exp_id', 'fold_groups_param', 'fold_shuffle_param', 'n_jobs_param', 'gpu_n_jobs_param', 'target_param', 'y_test', 'logging_param', 'USI', 'idx', '_available_plots', 'is_multiclass', '_ml_usecase', 'memory', 'X', 'exp_name_log', 'log_plots_param', 'y', 'fix_imbalance', 'html_param', 'y_train', 'X_test', 'seed'}
2024-09-23 19:23:05,520:INFO:Checking environment
2024-09-23 19:23:05,520:INFO:python_version: 3.10.12
2024-09-23 19:23:05,520:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-23 19:23:05,520:INFO:machine: arm64
2024-09-23 19:23:05,543:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:23:05,543:INFO:Memory: svmem(total=17179869184, available=6030802944, percent=64.9, used=7346225152, free=1542406144, active=4463673344, inactive=4338237440, wired=2882551808)
2024-09-23 19:23:05,544:INFO:Physical Core: 10
2024-09-23 19:23:05,544:INFO:Logical Core: 10
2024-09-23 19:23:05,544:INFO:Checking libraries
2024-09-23 19:23:05,544:INFO:System:
2024-09-23 19:23:05,544:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-23 19:23:05,544:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-23 19:23:05,544:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:23:05,544:INFO:PyCaret required dependencies:
2024-09-23 19:23:05,562:INFO:                 pip: 23.0.1
2024-09-23 19:23:05,562:INFO:          setuptools: 65.5.0
2024-09-23 19:23:05,562:INFO:             pycaret: 3.3.2
2024-09-23 19:23:05,562:INFO:             IPython: 8.27.0
2024-09-23 19:23:05,562:INFO:          ipywidgets: 8.1.5
2024-09-23 19:23:05,562:INFO:                tqdm: 4.66.5
2024-09-23 19:23:05,562:INFO:               numpy: 1.26.4
2024-09-23 19:23:05,562:INFO:              pandas: 2.1.4
2024-09-23 19:23:05,562:INFO:              jinja2: 3.1.4
2024-09-23 19:23:05,562:INFO:               scipy: 1.11.4
2024-09-23 19:23:05,562:INFO:              joblib: 1.3.2
2024-09-23 19:23:05,562:INFO:             sklearn: 1.4.2
2024-09-23 19:23:05,562:INFO:                pyod: 2.0.2
2024-09-23 19:23:05,562:INFO:            imblearn: 0.12.3
2024-09-23 19:23:05,562:INFO:   category_encoders: 2.6.3
2024-09-23 19:23:05,562:INFO:            lightgbm: 4.5.0
2024-09-23 19:23:05,562:INFO:               numba: 0.60.0
2024-09-23 19:23:05,562:INFO:            requests: 2.32.3
2024-09-23 19:23:05,562:INFO:          matplotlib: 3.7.5
2024-09-23 19:23:05,562:INFO:          scikitplot: 0.3.7
2024-09-23 19:23:05,562:INFO:         yellowbrick: 1.5
2024-09-23 19:23:05,562:INFO:              plotly: 5.24.1
2024-09-23 19:23:05,562:INFO:    plotly-resampler: Not installed
2024-09-23 19:23:05,562:INFO:             kaleido: 0.2.1
2024-09-23 19:23:05,562:INFO:           schemdraw: 0.15
2024-09-23 19:23:05,562:INFO:         statsmodels: 0.14.3
2024-09-23 19:23:05,562:INFO:              sktime: 0.26.0
2024-09-23 19:23:05,562:INFO:               tbats: 1.1.3
2024-09-23 19:23:05,562:INFO:            pmdarima: 2.0.4
2024-09-23 19:23:05,562:INFO:              psutil: 6.0.0
2024-09-23 19:23:05,562:INFO:          markupsafe: 2.1.5
2024-09-23 19:23:05,562:INFO:             pickle5: Not installed
2024-09-23 19:23:05,562:INFO:         cloudpickle: 3.0.0
2024-09-23 19:23:05,562:INFO:         deprecation: 2.1.0
2024-09-23 19:23:05,562:INFO:              xxhash: 3.5.0
2024-09-23 19:23:05,562:INFO:           wurlitzer: 3.1.1
2024-09-23 19:23:05,562:INFO:PyCaret optional dependencies:
2024-09-23 19:23:05,569:INFO:                shap: 0.46.0
2024-09-23 19:23:05,569:INFO:           interpret: Not installed
2024-09-23 19:23:05,569:INFO:                umap: Not installed
2024-09-23 19:23:05,569:INFO:     ydata_profiling: Not installed
2024-09-23 19:23:05,569:INFO:  explainerdashboard: Not installed
2024-09-23 19:23:05,569:INFO:             autoviz: Not installed
2024-09-23 19:23:05,569:INFO:           fairlearn: Not installed
2024-09-23 19:23:05,569:INFO:          deepchecks: Not installed
2024-09-23 19:23:05,569:INFO:             xgboost: Not installed
2024-09-23 19:23:05,569:INFO:            catboost: Not installed
2024-09-23 19:23:05,569:INFO:              kmodes: Not installed
2024-09-23 19:23:05,569:INFO:             mlxtend: Not installed
2024-09-23 19:23:05,569:INFO:       statsforecast: Not installed
2024-09-23 19:23:05,569:INFO:        tune_sklearn: Not installed
2024-09-23 19:23:05,569:INFO:                 ray: Not installed
2024-09-23 19:23:05,569:INFO:            hyperopt: Not installed
2024-09-23 19:23:05,569:INFO:              optuna: Not installed
2024-09-23 19:23:05,569:INFO:               skopt: Not installed
2024-09-23 19:23:05,569:INFO:              mlflow: Not installed
2024-09-23 19:23:05,569:INFO:              gradio: Not installed
2024-09-23 19:23:05,569:INFO:             fastapi: Not installed
2024-09-23 19:23:05,569:INFO:             uvicorn: Not installed
2024-09-23 19:23:05,569:INFO:              m2cgen: Not installed
2024-09-23 19:23:05,569:INFO:           evidently: Not installed
2024-09-23 19:23:05,569:INFO:               fugue: Not installed
2024-09-23 19:23:05,569:INFO:           streamlit: Not installed
2024-09-23 19:23:05,569:INFO:             prophet: Not installed
2024-09-23 19:23:05,569:INFO:None
2024-09-23 19:23:05,569:INFO:Set up data.
2024-09-23 19:23:05,574:INFO:Set up folding strategy.
2024-09-23 19:23:05,574:INFO:Set up train/test split.
2024-09-23 19:23:05,577:INFO:Set up index.
2024-09-23 19:23:05,577:INFO:Assigning column types.
2024-09-23 19:23:05,579:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-23 19:23:05,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,599:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,634:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,646:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-23 19:23:05,665:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,697:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,710:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-23 19:23:05,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,774:INFO:Preparing preprocessing pipeline...
2024-09-23 19:23:05,774:INFO:Set up simple imputation.
2024-09-23 19:23:05,775:INFO:Set up encoding of ordinal features.
2024-09-23 19:23:05,776:INFO:Set up encoding of categorical features.
2024-09-23 19:23:05,776:INFO:Set up feature normalization.
2024-09-23 19:23:05,810:INFO:Finished creating preprocessing pipeline.
2024-09-23 19:23:05,817:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-23 19:23:05,817:INFO:Creating final display dataframe.
2024-09-23 19:23:05,902:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              4e73
2024-09-23 19:23:05,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,968:INFO:setup() successfully completed in 0.45s...............
2024-09-23 19:23:05,968:INFO:Initializing compare_models()
2024-09-23 19:23:05,968:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-09-23 19:23:05,968:INFO:Checking exceptions
2024-09-23 19:23:05,970:INFO:Preparing display monitor
2024-09-23 19:23:05,987:INFO:Initializing Logistic Regression
2024-09-23 19:23:05,987:INFO:Total runtime is 3.3815701802571615e-06 minutes
2024-09-23 19:23:05,987:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:05,988:INFO:Initializing create_model()
2024-09-23 19:23:05,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:05,988:INFO:Checking exceptions
2024-09-23 19:23:05,988:INFO:Importing libraries
2024-09-23 19:23:05,988:INFO:Copying training dataset
2024-09-23 19:23:05,990:INFO:Defining folds
2024-09-23 19:23:05,990:INFO:Declaring metric variables
2024-09-23 19:23:05,990:INFO:Importing untrained model
2024-09-23 19:23:05,990:INFO:Logistic Regression Imported successfully
2024-09-23 19:23:05,990:INFO:Starting cross validation
2024-09-23 19:23:05,991:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:07,685:INFO:Calculating mean and std
2024-09-23 19:23:07,688:INFO:Creating metrics dataframe
2024-09-23 19:23:07,691:INFO:Uploading results into container
2024-09-23 19:23:07,691:INFO:Uploading model into container now
2024-09-23 19:23:07,692:INFO:_master_model_container: 1
2024-09-23 19:23:07,692:INFO:_display_container: 2
2024-09-23 19:23:07,692:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-09-23 19:23:07,692:INFO:create_model() successfully completed......................................
2024-09-23 19:23:07,747:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:07,747:INFO:Creating metrics dataframe
2024-09-23 19:23:07,749:INFO:Initializing K Neighbors Classifier
2024-09-23 19:23:07,749:INFO:Total runtime is 0.029363898436228435 minutes
2024-09-23 19:23:07,749:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:07,749:INFO:Initializing create_model()
2024-09-23 19:23:07,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:07,749:INFO:Checking exceptions
2024-09-23 19:23:07,749:INFO:Importing libraries
2024-09-23 19:23:07,749:INFO:Copying training dataset
2024-09-23 19:23:07,751:INFO:Defining folds
2024-09-23 19:23:07,751:INFO:Declaring metric variables
2024-09-23 19:23:07,751:INFO:Importing untrained model
2024-09-23 19:23:07,751:INFO:K Neighbors Classifier Imported successfully
2024-09-23 19:23:07,751:INFO:Starting cross validation
2024-09-23 19:23:07,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:07,866:INFO:Calculating mean and std
2024-09-23 19:23:07,866:INFO:Creating metrics dataframe
2024-09-23 19:23:07,867:INFO:Uploading results into container
2024-09-23 19:23:07,867:INFO:Uploading model into container now
2024-09-23 19:23:07,867:INFO:_master_model_container: 2
2024-09-23 19:23:07,867:INFO:_display_container: 2
2024-09-23 19:23:07,867:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-09-23 19:23:07,867:INFO:create_model() successfully completed......................................
2024-09-23 19:23:07,906:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:07,906:INFO:Creating metrics dataframe
2024-09-23 19:23:07,907:INFO:Initializing Naive Bayes
2024-09-23 19:23:07,908:INFO:Total runtime is 0.03200804392496745 minutes
2024-09-23 19:23:07,908:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:07,908:INFO:Initializing create_model()
2024-09-23 19:23:07,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:07,908:INFO:Checking exceptions
2024-09-23 19:23:07,908:INFO:Importing libraries
2024-09-23 19:23:07,908:INFO:Copying training dataset
2024-09-23 19:23:07,909:INFO:Defining folds
2024-09-23 19:23:07,909:INFO:Declaring metric variables
2024-09-23 19:23:07,909:INFO:Importing untrained model
2024-09-23 19:23:07,909:INFO:Naive Bayes Imported successfully
2024-09-23 19:23:07,910:INFO:Starting cross validation
2024-09-23 19:23:07,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:07,989:INFO:Calculating mean and std
2024-09-23 19:23:07,989:INFO:Creating metrics dataframe
2024-09-23 19:23:07,990:INFO:Uploading results into container
2024-09-23 19:23:07,991:INFO:Uploading model into container now
2024-09-23 19:23:07,991:INFO:_master_model_container: 3
2024-09-23 19:23:07,991:INFO:_display_container: 2
2024-09-23 19:23:07,991:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-09-23 19:23:07,991:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,031:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,031:INFO:Creating metrics dataframe
2024-09-23 19:23:08,032:INFO:Initializing Decision Tree Classifier
2024-09-23 19:23:08,032:INFO:Total runtime is 0.03408131202061971 minutes
2024-09-23 19:23:08,032:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,032:INFO:Initializing create_model()
2024-09-23 19:23:08,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,032:INFO:Checking exceptions
2024-09-23 19:23:08,032:INFO:Importing libraries
2024-09-23 19:23:08,032:INFO:Copying training dataset
2024-09-23 19:23:08,034:INFO:Defining folds
2024-09-23 19:23:08,034:INFO:Declaring metric variables
2024-09-23 19:23:08,034:INFO:Importing untrained model
2024-09-23 19:23:08,034:INFO:Decision Tree Classifier Imported successfully
2024-09-23 19:23:08,035:INFO:Starting cross validation
2024-09-23 19:23:08,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,118:INFO:Calculating mean and std
2024-09-23 19:23:08,118:INFO:Creating metrics dataframe
2024-09-23 19:23:08,119:INFO:Uploading results into container
2024-09-23 19:23:08,119:INFO:Uploading model into container now
2024-09-23 19:23:08,120:INFO:_master_model_container: 4
2024-09-23 19:23:08,120:INFO:_display_container: 2
2024-09-23 19:23:08,120:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-09-23 19:23:08,120:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,160:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,160:INFO:Creating metrics dataframe
2024-09-23 19:23:08,161:INFO:Initializing SVM - Linear Kernel
2024-09-23 19:23:08,161:INFO:Total runtime is 0.03623222907384237 minutes
2024-09-23 19:23:08,161:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,161:INFO:Initializing create_model()
2024-09-23 19:23:08,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,161:INFO:Checking exceptions
2024-09-23 19:23:08,161:INFO:Importing libraries
2024-09-23 19:23:08,161:INFO:Copying training dataset
2024-09-23 19:23:08,163:INFO:Defining folds
2024-09-23 19:23:08,163:INFO:Declaring metric variables
2024-09-23 19:23:08,163:INFO:Importing untrained model
2024-09-23 19:23:08,163:INFO:SVM - Linear Kernel Imported successfully
2024-09-23 19:23:08,163:INFO:Starting cross validation
2024-09-23 19:23:08,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,241:INFO:Calculating mean and std
2024-09-23 19:23:08,241:INFO:Creating metrics dataframe
2024-09-23 19:23:08,242:INFO:Uploading results into container
2024-09-23 19:23:08,243:INFO:Uploading model into container now
2024-09-23 19:23:08,243:INFO:_master_model_container: 5
2024-09-23 19:23:08,243:INFO:_display_container: 2
2024-09-23 19:23:08,243:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-09-23 19:23:08,243:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,281:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,281:INFO:Creating metrics dataframe
2024-09-23 19:23:08,282:INFO:Initializing Ridge Classifier
2024-09-23 19:23:08,282:INFO:Total runtime is 0.038252294063568115 minutes
2024-09-23 19:23:08,282:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,282:INFO:Initializing create_model()
2024-09-23 19:23:08,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,282:INFO:Checking exceptions
2024-09-23 19:23:08,282:INFO:Importing libraries
2024-09-23 19:23:08,282:INFO:Copying training dataset
2024-09-23 19:23:08,284:INFO:Defining folds
2024-09-23 19:23:08,284:INFO:Declaring metric variables
2024-09-23 19:23:08,284:INFO:Importing untrained model
2024-09-23 19:23:08,284:INFO:Ridge Classifier Imported successfully
2024-09-23 19:23:08,284:INFO:Starting cross validation
2024-09-23 19:23:08,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,364:INFO:Calculating mean and std
2024-09-23 19:23:08,364:INFO:Creating metrics dataframe
2024-09-23 19:23:08,365:INFO:Uploading results into container
2024-09-23 19:23:08,365:INFO:Uploading model into container now
2024-09-23 19:23:08,365:INFO:_master_model_container: 6
2024-09-23 19:23:08,365:INFO:_display_container: 2
2024-09-23 19:23:08,365:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-09-23 19:23:08,365:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,403:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,403:INFO:Creating metrics dataframe
2024-09-23 19:23:08,404:INFO:Initializing Random Forest Classifier
2024-09-23 19:23:08,404:INFO:Total runtime is 0.04028374354044596 minutes
2024-09-23 19:23:08,404:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,404:INFO:Initializing create_model()
2024-09-23 19:23:08,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,404:INFO:Checking exceptions
2024-09-23 19:23:08,404:INFO:Importing libraries
2024-09-23 19:23:08,404:INFO:Copying training dataset
2024-09-23 19:23:08,406:INFO:Defining folds
2024-09-23 19:23:08,406:INFO:Declaring metric variables
2024-09-23 19:23:08,406:INFO:Importing untrained model
2024-09-23 19:23:08,406:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:23:08,406:INFO:Starting cross validation
2024-09-23 19:23:08,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,636:INFO:Calculating mean and std
2024-09-23 19:23:08,636:INFO:Creating metrics dataframe
2024-09-23 19:23:08,637:INFO:Uploading results into container
2024-09-23 19:23:08,637:INFO:Uploading model into container now
2024-09-23 19:23:08,637:INFO:_master_model_container: 7
2024-09-23 19:23:08,637:INFO:_display_container: 2
2024-09-23 19:23:08,638:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:08,638:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,676:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,677:INFO:Creating metrics dataframe
2024-09-23 19:23:08,678:INFO:Initializing Quadratic Discriminant Analysis
2024-09-23 19:23:08,678:INFO:Total runtime is 0.04484454790751139 minutes
2024-09-23 19:23:08,678:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,678:INFO:Initializing create_model()
2024-09-23 19:23:08,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,678:INFO:Checking exceptions
2024-09-23 19:23:08,678:INFO:Importing libraries
2024-09-23 19:23:08,678:INFO:Copying training dataset
2024-09-23 19:23:08,679:INFO:Defining folds
2024-09-23 19:23:08,679:INFO:Declaring metric variables
2024-09-23 19:23:08,679:INFO:Importing untrained model
2024-09-23 19:23:08,680:INFO:Quadratic Discriminant Analysis Imported successfully
2024-09-23 19:23:08,680:INFO:Starting cross validation
2024-09-23 19:23:08,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,709:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,709:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,709:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,711:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,711:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,713:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,720:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,729:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,732:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,740:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,760:INFO:Calculating mean and std
2024-09-23 19:23:08,761:INFO:Creating metrics dataframe
2024-09-23 19:23:08,761:INFO:Uploading results into container
2024-09-23 19:23:08,762:INFO:Uploading model into container now
2024-09-23 19:23:08,762:INFO:_master_model_container: 8
2024-09-23 19:23:08,762:INFO:_display_container: 2
2024-09-23 19:23:08,762:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-09-23 19:23:08,762:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,800:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,801:INFO:Creating metrics dataframe
2024-09-23 19:23:08,802:INFO:Initializing Ada Boost Classifier
2024-09-23 19:23:08,802:INFO:Total runtime is 0.04691042900085449 minutes
2024-09-23 19:23:08,802:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,802:INFO:Initializing create_model()
2024-09-23 19:23:08,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,802:INFO:Checking exceptions
2024-09-23 19:23:08,802:INFO:Importing libraries
2024-09-23 19:23:08,802:INFO:Copying training dataset
2024-09-23 19:23:08,803:INFO:Defining folds
2024-09-23 19:23:08,803:INFO:Declaring metric variables
2024-09-23 19:23:08,803:INFO:Importing untrained model
2024-09-23 19:23:08,804:INFO:Ada Boost Classifier Imported successfully
2024-09-23 19:23:08,804:INFO:Starting cross validation
2024-09-23 19:23:08,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,832:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,833:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,836:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,840:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,840:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,842:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,843:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,859:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,871:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,883:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,940:INFO:Calculating mean and std
2024-09-23 19:23:08,940:INFO:Creating metrics dataframe
2024-09-23 19:23:08,941:INFO:Uploading results into container
2024-09-23 19:23:08,942:INFO:Uploading model into container now
2024-09-23 19:23:08,942:INFO:_master_model_container: 9
2024-09-23 19:23:08,942:INFO:_display_container: 2
2024-09-23 19:23:08,942:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-09-23 19:23:08,942:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,980:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,980:INFO:Creating metrics dataframe
2024-09-23 19:23:08,981:INFO:Initializing Gradient Boosting Classifier
2024-09-23 19:23:08,981:INFO:Total runtime is 0.04990418354670206 minutes
2024-09-23 19:23:08,981:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,982:INFO:Initializing create_model()
2024-09-23 19:23:08,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,982:INFO:Checking exceptions
2024-09-23 19:23:08,982:INFO:Importing libraries
2024-09-23 19:23:08,982:INFO:Copying training dataset
2024-09-23 19:23:08,984:INFO:Defining folds
2024-09-23 19:23:08,984:INFO:Declaring metric variables
2024-09-23 19:23:08,984:INFO:Importing untrained model
2024-09-23 19:23:08,984:INFO:Gradient Boosting Classifier Imported successfully
2024-09-23 19:23:08,984:INFO:Starting cross validation
2024-09-23 19:23:08,985:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:09,148:INFO:Calculating mean and std
2024-09-23 19:23:09,148:INFO:Creating metrics dataframe
2024-09-23 19:23:09,149:INFO:Uploading results into container
2024-09-23 19:23:09,149:INFO:Uploading model into container now
2024-09-23 19:23:09,149:INFO:_master_model_container: 10
2024-09-23 19:23:09,150:INFO:_display_container: 2
2024-09-23 19:23:09,150:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-09-23 19:23:09,150:INFO:create_model() successfully completed......................................
2024-09-23 19:23:09,188:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:09,189:INFO:Creating metrics dataframe
2024-09-23 19:23:09,190:INFO:Initializing Linear Discriminant Analysis
2024-09-23 19:23:09,190:INFO:Total runtime is 0.053383179505666095 minutes
2024-09-23 19:23:09,190:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:09,190:INFO:Initializing create_model()
2024-09-23 19:23:09,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:09,190:INFO:Checking exceptions
2024-09-23 19:23:09,190:INFO:Importing libraries
2024-09-23 19:23:09,190:INFO:Copying training dataset
2024-09-23 19:23:09,192:INFO:Defining folds
2024-09-23 19:23:09,192:INFO:Declaring metric variables
2024-09-23 19:23:09,192:INFO:Importing untrained model
2024-09-23 19:23:09,192:INFO:Linear Discriminant Analysis Imported successfully
2024-09-23 19:23:09,192:INFO:Starting cross validation
2024-09-23 19:23:09,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:09,273:INFO:Calculating mean and std
2024-09-23 19:23:09,273:INFO:Creating metrics dataframe
2024-09-23 19:23:09,274:INFO:Uploading results into container
2024-09-23 19:23:09,275:INFO:Uploading model into container now
2024-09-23 19:23:09,275:INFO:_master_model_container: 11
2024-09-23 19:23:09,275:INFO:_display_container: 2
2024-09-23 19:23:09,275:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-09-23 19:23:09,275:INFO:create_model() successfully completed......................................
2024-09-23 19:23:09,314:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:09,314:INFO:Creating metrics dataframe
2024-09-23 19:23:09,315:INFO:Initializing Extra Trees Classifier
2024-09-23 19:23:09,315:INFO:Total runtime is 0.05547253290812174 minutes
2024-09-23 19:23:09,315:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:09,316:INFO:Initializing create_model()
2024-09-23 19:23:09,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:09,316:INFO:Checking exceptions
2024-09-23 19:23:09,316:INFO:Importing libraries
2024-09-23 19:23:09,316:INFO:Copying training dataset
2024-09-23 19:23:09,317:INFO:Defining folds
2024-09-23 19:23:09,317:INFO:Declaring metric variables
2024-09-23 19:23:09,317:INFO:Importing untrained model
2024-09-23 19:23:09,318:INFO:Extra Trees Classifier Imported successfully
2024-09-23 19:23:09,318:INFO:Starting cross validation
2024-09-23 19:23:09,318:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:09,537:INFO:Calculating mean and std
2024-09-23 19:23:09,537:INFO:Creating metrics dataframe
2024-09-23 19:23:09,538:INFO:Uploading results into container
2024-09-23 19:23:09,538:INFO:Uploading model into container now
2024-09-23 19:23:09,539:INFO:_master_model_container: 12
2024-09-23 19:23:09,539:INFO:_display_container: 2
2024-09-23 19:23:09,539:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-09-23 19:23:09,539:INFO:create_model() successfully completed......................................
2024-09-23 19:23:09,577:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:09,577:INFO:Creating metrics dataframe
2024-09-23 19:23:09,578:INFO:Initializing Light Gradient Boosting Machine
2024-09-23 19:23:09,578:INFO:Total runtime is 0.059853712717692055 minutes
2024-09-23 19:23:09,578:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:09,578:INFO:Initializing create_model()
2024-09-23 19:23:09,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:09,578:INFO:Checking exceptions
2024-09-23 19:23:09,578:INFO:Importing libraries
2024-09-23 19:23:09,579:INFO:Copying training dataset
2024-09-23 19:23:09,580:INFO:Defining folds
2024-09-23 19:23:09,580:INFO:Declaring metric variables
2024-09-23 19:23:09,580:INFO:Importing untrained model
2024-09-23 19:23:09,580:INFO:Light Gradient Boosting Machine Imported successfully
2024-09-23 19:23:09,580:INFO:Starting cross validation
2024-09-23 19:23:09,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:12,583:INFO:Calculating mean and std
2024-09-23 19:23:12,583:INFO:Creating metrics dataframe
2024-09-23 19:23:12,584:INFO:Uploading results into container
2024-09-23 19:23:12,584:INFO:Uploading model into container now
2024-09-23 19:23:12,585:INFO:_master_model_container: 13
2024-09-23 19:23:12,585:INFO:_display_container: 2
2024-09-23 19:23:12,585:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-09-23 19:23:12,585:INFO:create_model() successfully completed......................................
2024-09-23 19:23:12,623:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:12,624:INFO:Creating metrics dataframe
2024-09-23 19:23:12,625:INFO:Initializing Dummy Classifier
2024-09-23 19:23:12,625:INFO:Total runtime is 0.11062908172607422 minutes
2024-09-23 19:23:12,625:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:12,625:INFO:Initializing create_model()
2024-09-23 19:23:12,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:12,625:INFO:Checking exceptions
2024-09-23 19:23:12,625:INFO:Importing libraries
2024-09-23 19:23:12,625:INFO:Copying training dataset
2024-09-23 19:23:12,626:INFO:Defining folds
2024-09-23 19:23:12,626:INFO:Declaring metric variables
2024-09-23 19:23:12,626:INFO:Importing untrained model
2024-09-23 19:23:12,627:INFO:Dummy Classifier Imported successfully
2024-09-23 19:23:12,627:INFO:Starting cross validation
2024-09-23 19:23:12,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:12,668:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,669:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,670:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,670:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,670:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,676:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,678:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,679:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,685:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,699:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,705:INFO:Calculating mean and std
2024-09-23 19:23:12,705:INFO:Creating metrics dataframe
2024-09-23 19:23:12,706:INFO:Uploading results into container
2024-09-23 19:23:12,706:INFO:Uploading model into container now
2024-09-23 19:23:12,707:INFO:_master_model_container: 14
2024-09-23 19:23:12,707:INFO:_display_container: 2
2024-09-23 19:23:12,707:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-09-23 19:23:12,707:INFO:create_model() successfully completed......................................
2024-09-23 19:23:12,745:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:12,745:INFO:Creating metrics dataframe
2024-09-23 19:23:12,747:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-09-23 19:23:12,747:INFO:Initializing create_model()
2024-09-23 19:23:12,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:12,747:INFO:Checking exceptions
2024-09-23 19:23:12,748:INFO:Importing libraries
2024-09-23 19:23:12,748:INFO:Copying training dataset
2024-09-23 19:23:12,750:INFO:Defining folds
2024-09-23 19:23:12,750:INFO:Declaring metric variables
2024-09-23 19:23:12,750:INFO:Importing untrained model
2024-09-23 19:23:12,750:INFO:Declaring custom model
2024-09-23 19:23:12,750:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:23:12,751:INFO:Cross validation set to False
2024-09-23 19:23:12,751:INFO:Fitting Model
2024-09-23 19:23:12,855:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:12,855:INFO:create_model() successfully completed......................................
2024-09-23 19:23:12,897:INFO:_master_model_container: 14
2024-09-23 19:23:12,898:INFO:_display_container: 2
2024-09-23 19:23:12,898:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:12,898:INFO:compare_models() successfully completed......................................
2024-09-23 19:23:12,898:INFO:Initializing tune_model()
2024-09-23 19:23:12,898:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>)
2024-09-23 19:23:12,898:INFO:Checking exceptions
2024-09-23 19:23:12,899:INFO:Copying training dataset
2024-09-23 19:23:12,900:INFO:Checking base model
2024-09-23 19:23:12,900:INFO:Base model : Random Forest Classifier
2024-09-23 19:23:12,900:INFO:Declaring metric variables
2024-09-23 19:23:12,900:INFO:Defining Hyperparameters
2024-09-23 19:23:12,940:INFO:Tuning with n_jobs=-1
2024-09-23 19:23:12,940:INFO:Initializing RandomizedSearchCV
2024-09-23 19:23:15,559:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2024-09-23 19:23:15,559:INFO:Hyperparameter search completed
2024-09-23 19:23:15,559:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:15,559:INFO:Initializing create_model()
2024-09-23 19:23:15,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4a6500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2024-09-23 19:23:15,559:INFO:Checking exceptions
2024-09-23 19:23:15,559:INFO:Importing libraries
2024-09-23 19:23:15,559:INFO:Copying training dataset
2024-09-23 19:23:15,561:INFO:Defining folds
2024-09-23 19:23:15,561:INFO:Declaring metric variables
2024-09-23 19:23:15,561:INFO:Importing untrained model
2024-09-23 19:23:15,561:INFO:Declaring custom model
2024-09-23 19:23:15,561:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:23:15,561:INFO:Starting cross validation
2024-09-23 19:23:15,562:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:16,038:INFO:Calculating mean and std
2024-09-23 19:23:16,039:INFO:Creating metrics dataframe
2024-09-23 19:23:16,040:INFO:Finalizing model
2024-09-23 19:23:16,230:INFO:Uploading results into container
2024-09-23 19:23:16,230:INFO:Uploading model into container now
2024-09-23 19:23:16,231:INFO:_master_model_container: 15
2024-09-23 19:23:16,231:INFO:_display_container: 3
2024-09-23 19:23:16,231:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:16,231:INFO:create_model() successfully completed......................................
2024-09-23 19:23:16,270:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:16,270:INFO:choose_better activated
2024-09-23 19:23:16,270:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:16,270:INFO:Initializing create_model()
2024-09-23 19:23:16,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:16,270:INFO:Checking exceptions
2024-09-23 19:23:16,271:INFO:Importing libraries
2024-09-23 19:23:16,271:INFO:Copying training dataset
2024-09-23 19:23:16,272:INFO:Defining folds
2024-09-23 19:23:16,272:INFO:Declaring metric variables
2024-09-23 19:23:16,272:INFO:Importing untrained model
2024-09-23 19:23:16,272:INFO:Declaring custom model
2024-09-23 19:23:16,272:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:23:16,273:INFO:Starting cross validation
2024-09-23 19:23:16,273:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:16,509:INFO:Calculating mean and std
2024-09-23 19:23:16,510:INFO:Creating metrics dataframe
2024-09-23 19:23:16,511:INFO:Finalizing model
2024-09-23 19:23:16,613:INFO:Uploading results into container
2024-09-23 19:23:16,614:INFO:Uploading model into container now
2024-09-23 19:23:16,614:INFO:_master_model_container: 16
2024-09-23 19:23:16,614:INFO:_display_container: 4
2024-09-23 19:23:16,614:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:16,614:INFO:create_model() successfully completed......................................
2024-09-23 19:23:16,652:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:16,652:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8202
2024-09-23 19:23:16,652:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8235
2024-09-23 19:23:16,652:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2024-09-23 19:23:16,652:INFO:choose_better completed
2024-09-23 19:23:16,656:INFO:_master_model_container: 16
2024-09-23 19:23:16,656:INFO:_display_container: 3
2024-09-23 19:23:16,656:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:16,656:INFO:tune_model() successfully completed......................................
2024-09-23 19:23:16,696:INFO:Initializing finalize_model()
2024-09-23 19:23:16,696:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-09-23 19:23:16,697:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:16,698:INFO:Initializing create_model()
2024-09-23 19:23:16,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:16,698:INFO:Checking exceptions
2024-09-23 19:23:16,698:INFO:Importing libraries
2024-09-23 19:23:16,698:INFO:Copying training dataset
2024-09-23 19:23:16,698:INFO:Defining folds
2024-09-23 19:23:16,698:INFO:Declaring metric variables
2024-09-23 19:23:16,698:INFO:Importing untrained model
2024-09-23 19:23:16,698:INFO:Declaring custom model
2024-09-23 19:23:16,699:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:23:16,699:INFO:Cross validation set to False
2024-09-23 19:23:16,700:INFO:Fitting Model
2024-09-23 19:23:16,909:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:23:16,909:INFO:create_model() successfully completed......................................
2024-09-23 19:23:16,946:INFO:_master_model_container: 16
2024-09-23 19:23:16,946:INFO:_display_container: 3
2024-09-23 19:23:16,953:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:23:16,953:INFO:finalize_model() successfully completed......................................
2024-09-23 19:23:16,989:INFO:Initializing get_config()
2024-09-23 19:23:16,989:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, variable=X_train)
2024-09-23 19:23:16,989:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2024-09-23 19:23:16,990:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2024-09-23 19:23:16,994:INFO:Variable:  returned as      PassengerId  Pclass     Sex   Age  SibSp  Parch       Fare Embarked
748          749       1    male  19.0      1      0  53.099998        S
45            46       3    male   NaN      0      0   8.050000        S
28            29       3  female   NaN      0      0   7.879200        Q
633          634       1    male   NaN      0      0   0.000000        S
403          404       3    male  28.0      1      0  15.850000        S
..           ...     ...     ...   ...    ...    ...        ...      ...
476          477       2    male  34.0      1      0  21.000000        S
190          191       2  female  32.0      0      0  13.000000        S
736          737       3  female  48.0      1      3  34.375000        S
462          463       1    male  47.0      0      0  38.500000        S
136          137       1  female  19.0      0      2  26.283300        S

[623 rows x 8 columns]
2024-09-23 19:23:16,994:INFO:get_config() successfully completed......................................
2024-09-23 19:23:16,994:INFO:Initializing get_config()
2024-09-23 19:23:16,994:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, variable=X_test)
2024-09-23 19:23:16,995:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2024-09-23 19:23:16,995:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2024-09-23 19:23:16,999:INFO:Variable:  returned as      PassengerId  Pclass     Sex   Age  SibSp  Parch       Fare Embarked
625          626       1    male  61.0      0      0  32.320801        S
566          567       3    male  19.0      0      0   7.895800        S
459          460       3    male   NaN      0      0   7.750000        Q
804          805       3    male  27.0      0      0   6.975000        S
338          339       3    male  45.0      0      0   8.050000        S
..           ...     ...     ...   ...    ...    ...        ...      ...
184          185       3  female   4.0      0      2  22.025000        S
607          608       1    male  27.0      0      0  30.500000        S
624          625       3    male  21.0      0      0  16.100000        S
103          104       3    male  33.0      0      0   8.654200        S
387          388       2  female  36.0      0      0  13.000000        S

[268 rows x 8 columns]
2024-09-23 19:23:16,999:INFO:get_config() successfully completed......................................
2024-09-23 19:23:17,006:INFO:Initializing predict_model()
2024-09-23 19:23:17,006:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16ca9b520>)
2024-09-23 19:23:17,006:INFO:Checking exceptions
2024-09-23 19:23:17,006:INFO:Preloading libraries
2024-09-23 19:23:17,006:INFO:Set up data.
2024-09-23 19:23:17,007:INFO:Set up index.
2024-09-23 19:23:17,116:INFO:Initializing evaluate_model()
2024-09-23 19:23:17,117:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-09-23 19:23:17,126:INFO:Initializing plot_model()
2024-09-23 19:23:17,126:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, system=True)
2024-09-23 19:23:17,127:INFO:Checking exceptions
2024-09-23 19:23:17,142:INFO:Preloading libraries
2024-09-23 19:23:17,150:INFO:Copying training dataset
2024-09-23 19:23:17,150:INFO:Plot type: pipeline
2024-09-23 19:23:23,450:INFO:Visual Rendered Successfully
2024-09-23 19:23:23,506:INFO:plot_model() successfully completed......................................
2024-09-23 19:23:23,522:INFO:Initializing save_model()
2024-09-23 19:23:23,522:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=best_titanic_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-23 19:23:23,522:INFO:Adding model into prep_pipe
2024-09-23 19:23:23,522:WARNING:Only Model saved as it was a pipeline.
2024-09-23 19:23:23,569:INFO:best_titanic_model.pkl saved in current working directory
2024-09-23 19:23:23,576:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:23:23,576:INFO:save_model() successfully completed......................................
2024-09-23 19:26:58,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:26:58,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:26:58,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:26:58,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:26:59,246:INFO:PyCaret ClassificationExperiment
2024-09-23 19:26:59,246:INFO:Logging name: clf-default-name
2024-09-23 19:26:59,246:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-23 19:26:59,246:INFO:version 3.3.2
2024-09-23 19:26:59,246:INFO:Initializing setup()
2024-09-23 19:26:59,246:INFO:self.USI: 7529
2024-09-23 19:26:59,246:INFO:self._variable_keys: {'is_multiclass', 'gpu_param', 'fold_shuffle_param', 'seed', 'y_test', 'X', 'X_train', 'X_test', 'data', 'gpu_n_jobs_param', 'target_param', 'logging_param', 'n_jobs_param', 'idx', 'pipeline', 'y_train', 'memory', 'fold_groups_param', 'log_plots_param', 'fold_generator', '_available_plots', 'fix_imbalance', '_ml_usecase', 'exp_name_log', 'y', 'USI', 'exp_id', 'html_param'}
2024-09-23 19:26:59,247:INFO:Checking environment
2024-09-23 19:26:59,247:INFO:python_version: 3.10.12
2024-09-23 19:26:59,247:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-23 19:26:59,247:INFO:machine: arm64
2024-09-23 19:26:59,272:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:26:59,273:INFO:Memory: svmem(total=17179869184, available=5951340544, percent=65.4, used=7998324736, free=807550976, active=5149048832, inactive=4963909632, wired=2849275904)
2024-09-23 19:26:59,273:INFO:Physical Core: 10
2024-09-23 19:26:59,273:INFO:Logical Core: 10
2024-09-23 19:26:59,273:INFO:Checking libraries
2024-09-23 19:26:59,273:INFO:System:
2024-09-23 19:26:59,273:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-23 19:26:59,273:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-23 19:26:59,273:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:26:59,273:INFO:PyCaret required dependencies:
2024-09-23 19:26:59,295:INFO:                 pip: 23.0.1
2024-09-23 19:26:59,296:INFO:          setuptools: 65.5.0
2024-09-23 19:26:59,296:INFO:             pycaret: 3.3.2
2024-09-23 19:26:59,296:INFO:             IPython: 8.27.0
2024-09-23 19:26:59,296:INFO:          ipywidgets: 8.1.5
2024-09-23 19:26:59,296:INFO:                tqdm: 4.66.5
2024-09-23 19:26:59,296:INFO:               numpy: 1.26.4
2024-09-23 19:26:59,296:INFO:              pandas: 2.1.4
2024-09-23 19:26:59,296:INFO:              jinja2: 3.1.4
2024-09-23 19:26:59,296:INFO:               scipy: 1.11.4
2024-09-23 19:26:59,296:INFO:              joblib: 1.3.2
2024-09-23 19:26:59,296:INFO:             sklearn: 1.4.2
2024-09-23 19:26:59,296:INFO:                pyod: 2.0.2
2024-09-23 19:26:59,296:INFO:            imblearn: 0.12.3
2024-09-23 19:26:59,296:INFO:   category_encoders: 2.6.3
2024-09-23 19:26:59,296:INFO:            lightgbm: 4.5.0
2024-09-23 19:26:59,296:INFO:               numba: 0.60.0
2024-09-23 19:26:59,296:INFO:            requests: 2.32.3
2024-09-23 19:26:59,296:INFO:          matplotlib: 3.7.5
2024-09-23 19:26:59,296:INFO:          scikitplot: 0.3.7
2024-09-23 19:26:59,296:INFO:         yellowbrick: 1.5
2024-09-23 19:26:59,296:INFO:              plotly: 5.24.1
2024-09-23 19:26:59,296:INFO:    plotly-resampler: Not installed
2024-09-23 19:26:59,296:INFO:             kaleido: 0.2.1
2024-09-23 19:26:59,296:INFO:           schemdraw: 0.15
2024-09-23 19:26:59,296:INFO:         statsmodels: 0.14.3
2024-09-23 19:26:59,296:INFO:              sktime: 0.26.0
2024-09-23 19:26:59,296:INFO:               tbats: 1.1.3
2024-09-23 19:26:59,296:INFO:            pmdarima: 2.0.4
2024-09-23 19:26:59,296:INFO:              psutil: 6.0.0
2024-09-23 19:26:59,296:INFO:          markupsafe: 2.1.5
2024-09-23 19:26:59,296:INFO:             pickle5: Not installed
2024-09-23 19:26:59,296:INFO:         cloudpickle: 3.0.0
2024-09-23 19:26:59,296:INFO:         deprecation: 2.1.0
2024-09-23 19:26:59,296:INFO:              xxhash: 3.5.0
2024-09-23 19:26:59,296:INFO:           wurlitzer: 3.1.1
2024-09-23 19:26:59,296:INFO:PyCaret optional dependencies:
2024-09-23 19:26:59,303:INFO:                shap: 0.46.0
2024-09-23 19:26:59,303:INFO:           interpret: Not installed
2024-09-23 19:26:59,303:INFO:                umap: Not installed
2024-09-23 19:26:59,303:INFO:     ydata_profiling: Not installed
2024-09-23 19:26:59,303:INFO:  explainerdashboard: Not installed
2024-09-23 19:26:59,303:INFO:             autoviz: Not installed
2024-09-23 19:26:59,303:INFO:           fairlearn: Not installed
2024-09-23 19:26:59,303:INFO:          deepchecks: Not installed
2024-09-23 19:26:59,303:INFO:             xgboost: Not installed
2024-09-23 19:26:59,303:INFO:            catboost: Not installed
2024-09-23 19:26:59,303:INFO:              kmodes: Not installed
2024-09-23 19:26:59,303:INFO:             mlxtend: Not installed
2024-09-23 19:26:59,303:INFO:       statsforecast: Not installed
2024-09-23 19:26:59,303:INFO:        tune_sklearn: Not installed
2024-09-23 19:26:59,303:INFO:                 ray: Not installed
2024-09-23 19:26:59,303:INFO:            hyperopt: Not installed
2024-09-23 19:26:59,303:INFO:              optuna: Not installed
2024-09-23 19:26:59,303:INFO:               skopt: Not installed
2024-09-23 19:26:59,303:INFO:              mlflow: Not installed
2024-09-23 19:26:59,303:INFO:              gradio: Not installed
2024-09-23 19:26:59,303:INFO:             fastapi: Not installed
2024-09-23 19:26:59,303:INFO:             uvicorn: Not installed
2024-09-23 19:26:59,303:INFO:              m2cgen: Not installed
2024-09-23 19:26:59,303:INFO:           evidently: Not installed
2024-09-23 19:26:59,303:INFO:               fugue: Not installed
2024-09-23 19:26:59,303:INFO:           streamlit: Not installed
2024-09-23 19:26:59,303:INFO:             prophet: Not installed
2024-09-23 19:26:59,303:INFO:None
2024-09-23 19:26:59,303:INFO:Set up data.
2024-09-23 19:26:59,308:INFO:Set up folding strategy.
2024-09-23 19:26:59,308:INFO:Set up train/test split.
2024-09-23 19:26:59,312:INFO:Set up index.
2024-09-23 19:26:59,312:INFO:Assigning column types.
2024-09-23 19:26:59,314:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-23 19:26:59,334:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,336:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,371:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,371:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,383:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-23 19:26:59,402:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,433:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,446:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-23 19:26:59,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,511:INFO:Preparing preprocessing pipeline...
2024-09-23 19:26:59,511:INFO:Set up simple imputation.
2024-09-23 19:26:59,512:INFO:Set up encoding of ordinal features.
2024-09-23 19:26:59,513:INFO:Set up encoding of categorical features.
2024-09-23 19:26:59,513:INFO:Set up feature normalization.
2024-09-23 19:26:59,548:INFO:Finished creating preprocessing pipeline.
2024-09-23 19:26:59,555:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-23 19:26:59,555:INFO:Creating final display dataframe.
2024-09-23 19:26:59,641:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              7529
2024-09-23 19:26:59,675:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,707:INFO:setup() successfully completed in 0.46s...............
2024-09-23 19:26:59,707:INFO:Initializing compare_models()
2024-09-23 19:26:59,707:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-09-23 19:26:59,707:INFO:Checking exceptions
2024-09-23 19:26:59,709:INFO:Preparing display monitor
2024-09-23 19:26:59,718:INFO:Initializing Logistic Regression
2024-09-23 19:26:59,718:INFO:Total runtime is 3.151098887125651e-06 minutes
2024-09-23 19:26:59,718:INFO:SubProcess create_model() called ==================================
2024-09-23 19:26:59,718:INFO:Initializing create_model()
2024-09-23 19:26:59,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:26:59,718:INFO:Checking exceptions
2024-09-23 19:26:59,718:INFO:Importing libraries
2024-09-23 19:26:59,718:INFO:Copying training dataset
2024-09-23 19:26:59,720:INFO:Defining folds
2024-09-23 19:26:59,720:INFO:Declaring metric variables
2024-09-23 19:26:59,720:INFO:Importing untrained model
2024-09-23 19:26:59,721:INFO:Logistic Regression Imported successfully
2024-09-23 19:26:59,721:INFO:Starting cross validation
2024-09-23 19:26:59,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:01,429:INFO:Calculating mean and std
2024-09-23 19:27:01,432:INFO:Creating metrics dataframe
2024-09-23 19:27:01,435:INFO:Uploading results into container
2024-09-23 19:27:01,435:INFO:Uploading model into container now
2024-09-23 19:27:01,436:INFO:_master_model_container: 1
2024-09-23 19:27:01,436:INFO:_display_container: 2
2024-09-23 19:27:01,437:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-09-23 19:27:01,437:INFO:create_model() successfully completed......................................
2024-09-23 19:27:01,497:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:01,498:INFO:Creating metrics dataframe
2024-09-23 19:27:01,499:INFO:Initializing K Neighbors Classifier
2024-09-23 19:27:01,499:INFO:Total runtime is 0.02968689997990926 minutes
2024-09-23 19:27:01,499:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:01,499:INFO:Initializing create_model()
2024-09-23 19:27:01,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:01,499:INFO:Checking exceptions
2024-09-23 19:27:01,499:INFO:Importing libraries
2024-09-23 19:27:01,499:INFO:Copying training dataset
2024-09-23 19:27:01,501:INFO:Defining folds
2024-09-23 19:27:01,501:INFO:Declaring metric variables
2024-09-23 19:27:01,501:INFO:Importing untrained model
2024-09-23 19:27:01,501:INFO:K Neighbors Classifier Imported successfully
2024-09-23 19:27:01,501:INFO:Starting cross validation
2024-09-23 19:27:01,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:01,607:INFO:Calculating mean and std
2024-09-23 19:27:01,607:INFO:Creating metrics dataframe
2024-09-23 19:27:01,608:INFO:Uploading results into container
2024-09-23 19:27:01,608:INFO:Uploading model into container now
2024-09-23 19:27:01,608:INFO:_master_model_container: 2
2024-09-23 19:27:01,608:INFO:_display_container: 2
2024-09-23 19:27:01,608:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-09-23 19:27:01,608:INFO:create_model() successfully completed......................................
2024-09-23 19:27:01,646:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:01,646:INFO:Creating metrics dataframe
2024-09-23 19:27:01,648:INFO:Initializing Naive Bayes
2024-09-23 19:27:01,648:INFO:Total runtime is 0.03217028379440308 minutes
2024-09-23 19:27:01,648:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:01,648:INFO:Initializing create_model()
2024-09-23 19:27:01,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:01,648:INFO:Checking exceptions
2024-09-23 19:27:01,648:INFO:Importing libraries
2024-09-23 19:27:01,648:INFO:Copying training dataset
2024-09-23 19:27:01,650:INFO:Defining folds
2024-09-23 19:27:01,650:INFO:Declaring metric variables
2024-09-23 19:27:01,650:INFO:Importing untrained model
2024-09-23 19:27:01,650:INFO:Naive Bayes Imported successfully
2024-09-23 19:27:01,650:INFO:Starting cross validation
2024-09-23 19:27:01,651:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:01,737:INFO:Calculating mean and std
2024-09-23 19:27:01,738:INFO:Creating metrics dataframe
2024-09-23 19:27:01,739:INFO:Uploading results into container
2024-09-23 19:27:01,739:INFO:Uploading model into container now
2024-09-23 19:27:01,739:INFO:_master_model_container: 3
2024-09-23 19:27:01,739:INFO:_display_container: 2
2024-09-23 19:27:01,739:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-09-23 19:27:01,739:INFO:create_model() successfully completed......................................
2024-09-23 19:27:01,777:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:01,777:INFO:Creating metrics dataframe
2024-09-23 19:27:01,778:INFO:Initializing Decision Tree Classifier
2024-09-23 19:27:01,778:INFO:Total runtime is 0.03433923721313477 minutes
2024-09-23 19:27:01,778:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:01,778:INFO:Initializing create_model()
2024-09-23 19:27:01,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:01,778:INFO:Checking exceptions
2024-09-23 19:27:01,778:INFO:Importing libraries
2024-09-23 19:27:01,778:INFO:Copying training dataset
2024-09-23 19:27:01,780:INFO:Defining folds
2024-09-23 19:27:01,780:INFO:Declaring metric variables
2024-09-23 19:27:01,780:INFO:Importing untrained model
2024-09-23 19:27:01,780:INFO:Decision Tree Classifier Imported successfully
2024-09-23 19:27:01,780:INFO:Starting cross validation
2024-09-23 19:27:01,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:01,861:INFO:Calculating mean and std
2024-09-23 19:27:01,861:INFO:Creating metrics dataframe
2024-09-23 19:27:01,862:INFO:Uploading results into container
2024-09-23 19:27:01,862:INFO:Uploading model into container now
2024-09-23 19:27:01,862:INFO:_master_model_container: 4
2024-09-23 19:27:01,862:INFO:_display_container: 2
2024-09-23 19:27:01,862:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-09-23 19:27:01,863:INFO:create_model() successfully completed......................................
2024-09-23 19:27:01,904:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:01,904:INFO:Creating metrics dataframe
2024-09-23 19:27:01,906:INFO:Initializing SVM - Linear Kernel
2024-09-23 19:27:01,906:INFO:Total runtime is 0.03647066752115886 minutes
2024-09-23 19:27:01,906:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:01,906:INFO:Initializing create_model()
2024-09-23 19:27:01,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:01,906:INFO:Checking exceptions
2024-09-23 19:27:01,906:INFO:Importing libraries
2024-09-23 19:27:01,906:INFO:Copying training dataset
2024-09-23 19:27:01,908:INFO:Defining folds
2024-09-23 19:27:01,908:INFO:Declaring metric variables
2024-09-23 19:27:01,908:INFO:Importing untrained model
2024-09-23 19:27:01,908:INFO:SVM - Linear Kernel Imported successfully
2024-09-23 19:27:01,908:INFO:Starting cross validation
2024-09-23 19:27:01,909:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:01,988:INFO:Calculating mean and std
2024-09-23 19:27:01,988:INFO:Creating metrics dataframe
2024-09-23 19:27:01,989:INFO:Uploading results into container
2024-09-23 19:27:01,989:INFO:Uploading model into container now
2024-09-23 19:27:01,989:INFO:_master_model_container: 5
2024-09-23 19:27:01,989:INFO:_display_container: 2
2024-09-23 19:27:01,990:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-09-23 19:27:01,990:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,029:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,029:INFO:Creating metrics dataframe
2024-09-23 19:27:02,030:INFO:Initializing Ridge Classifier
2024-09-23 19:27:02,030:INFO:Total runtime is 0.038537283738454185 minutes
2024-09-23 19:27:02,030:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,030:INFO:Initializing create_model()
2024-09-23 19:27:02,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,030:INFO:Checking exceptions
2024-09-23 19:27:02,030:INFO:Importing libraries
2024-09-23 19:27:02,030:INFO:Copying training dataset
2024-09-23 19:27:02,031:INFO:Defining folds
2024-09-23 19:27:02,032:INFO:Declaring metric variables
2024-09-23 19:27:02,032:INFO:Importing untrained model
2024-09-23 19:27:02,032:INFO:Ridge Classifier Imported successfully
2024-09-23 19:27:02,032:INFO:Starting cross validation
2024-09-23 19:27:02,032:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:02,111:INFO:Calculating mean and std
2024-09-23 19:27:02,112:INFO:Creating metrics dataframe
2024-09-23 19:27:02,112:INFO:Uploading results into container
2024-09-23 19:27:02,113:INFO:Uploading model into container now
2024-09-23 19:27:02,113:INFO:_master_model_container: 6
2024-09-23 19:27:02,113:INFO:_display_container: 2
2024-09-23 19:27:02,113:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-09-23 19:27:02,113:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,151:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,151:INFO:Creating metrics dataframe
2024-09-23 19:27:02,152:INFO:Initializing Random Forest Classifier
2024-09-23 19:27:02,152:INFO:Total runtime is 0.04056959946950277 minutes
2024-09-23 19:27:02,152:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,152:INFO:Initializing create_model()
2024-09-23 19:27:02,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,152:INFO:Checking exceptions
2024-09-23 19:27:02,152:INFO:Importing libraries
2024-09-23 19:27:02,152:INFO:Copying training dataset
2024-09-23 19:27:02,153:INFO:Defining folds
2024-09-23 19:27:02,153:INFO:Declaring metric variables
2024-09-23 19:27:02,153:INFO:Importing untrained model
2024-09-23 19:27:02,154:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:27:02,154:INFO:Starting cross validation
2024-09-23 19:27:02,154:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:02,385:INFO:Calculating mean and std
2024-09-23 19:27:02,386:INFO:Creating metrics dataframe
2024-09-23 19:27:02,387:INFO:Uploading results into container
2024-09-23 19:27:02,387:INFO:Uploading model into container now
2024-09-23 19:27:02,387:INFO:_master_model_container: 7
2024-09-23 19:27:02,387:INFO:_display_container: 2
2024-09-23 19:27:02,387:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:02,387:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,426:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,426:INFO:Creating metrics dataframe
2024-09-23 19:27:02,427:INFO:Initializing Quadratic Discriminant Analysis
2024-09-23 19:27:02,427:INFO:Total runtime is 0.045163567860921225 minutes
2024-09-23 19:27:02,427:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,428:INFO:Initializing create_model()
2024-09-23 19:27:02,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,428:INFO:Checking exceptions
2024-09-23 19:27:02,428:INFO:Importing libraries
2024-09-23 19:27:02,428:INFO:Copying training dataset
2024-09-23 19:27:02,429:INFO:Defining folds
2024-09-23 19:27:02,429:INFO:Declaring metric variables
2024-09-23 19:27:02,429:INFO:Importing untrained model
2024-09-23 19:27:02,429:INFO:Quadratic Discriminant Analysis Imported successfully
2024-09-23 19:27:02,429:INFO:Starting cross validation
2024-09-23 19:27:02,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:02,457:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,458:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,461:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,463:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,463:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,466:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,468:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,473:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,479:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,486:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,506:INFO:Calculating mean and std
2024-09-23 19:27:02,506:INFO:Creating metrics dataframe
2024-09-23 19:27:02,507:INFO:Uploading results into container
2024-09-23 19:27:02,507:INFO:Uploading model into container now
2024-09-23 19:27:02,508:INFO:_master_model_container: 8
2024-09-23 19:27:02,508:INFO:_display_container: 2
2024-09-23 19:27:02,508:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-09-23 19:27:02,508:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,545:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,545:INFO:Creating metrics dataframe
2024-09-23 19:27:02,546:INFO:Initializing Ada Boost Classifier
2024-09-23 19:27:02,546:INFO:Total runtime is 0.04714210430781047 minutes
2024-09-23 19:27:02,546:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,546:INFO:Initializing create_model()
2024-09-23 19:27:02,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,546:INFO:Checking exceptions
2024-09-23 19:27:02,546:INFO:Importing libraries
2024-09-23 19:27:02,546:INFO:Copying training dataset
2024-09-23 19:27:02,548:INFO:Defining folds
2024-09-23 19:27:02,548:INFO:Declaring metric variables
2024-09-23 19:27:02,548:INFO:Importing untrained model
2024-09-23 19:27:02,548:INFO:Ada Boost Classifier Imported successfully
2024-09-23 19:27:02,548:INFO:Starting cross validation
2024-09-23 19:27:02,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:02,575:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,576:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,577:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,580:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,581:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,585:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,592:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,596:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,600:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,612:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,678:INFO:Calculating mean and std
2024-09-23 19:27:02,678:INFO:Creating metrics dataframe
2024-09-23 19:27:02,679:INFO:Uploading results into container
2024-09-23 19:27:02,680:INFO:Uploading model into container now
2024-09-23 19:27:02,680:INFO:_master_model_container: 9
2024-09-23 19:27:02,680:INFO:_display_container: 2
2024-09-23 19:27:02,680:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-09-23 19:27:02,680:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,718:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,718:INFO:Creating metrics dataframe
2024-09-23 19:27:02,719:INFO:Initializing Gradient Boosting Classifier
2024-09-23 19:27:02,719:INFO:Total runtime is 0.05002406835556031 minutes
2024-09-23 19:27:02,719:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,719:INFO:Initializing create_model()
2024-09-23 19:27:02,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,719:INFO:Checking exceptions
2024-09-23 19:27:02,719:INFO:Importing libraries
2024-09-23 19:27:02,719:INFO:Copying training dataset
2024-09-23 19:27:02,721:INFO:Defining folds
2024-09-23 19:27:02,721:INFO:Declaring metric variables
2024-09-23 19:27:02,721:INFO:Importing untrained model
2024-09-23 19:27:02,721:INFO:Gradient Boosting Classifier Imported successfully
2024-09-23 19:27:02,721:INFO:Starting cross validation
2024-09-23 19:27:02,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:02,871:INFO:Calculating mean and std
2024-09-23 19:27:02,871:INFO:Creating metrics dataframe
2024-09-23 19:27:02,872:INFO:Uploading results into container
2024-09-23 19:27:02,873:INFO:Uploading model into container now
2024-09-23 19:27:02,873:INFO:_master_model_container: 10
2024-09-23 19:27:02,873:INFO:_display_container: 2
2024-09-23 19:27:02,873:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-09-23 19:27:02,873:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,917:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,917:INFO:Creating metrics dataframe
2024-09-23 19:27:02,918:INFO:Initializing Linear Discriminant Analysis
2024-09-23 19:27:02,918:INFO:Total runtime is 0.05334151983261109 minutes
2024-09-23 19:27:02,918:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,918:INFO:Initializing create_model()
2024-09-23 19:27:02,918:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,918:INFO:Checking exceptions
2024-09-23 19:27:02,918:INFO:Importing libraries
2024-09-23 19:27:02,918:INFO:Copying training dataset
2024-09-23 19:27:02,920:INFO:Defining folds
2024-09-23 19:27:02,920:INFO:Declaring metric variables
2024-09-23 19:27:02,920:INFO:Importing untrained model
2024-09-23 19:27:02,920:INFO:Linear Discriminant Analysis Imported successfully
2024-09-23 19:27:02,920:INFO:Starting cross validation
2024-09-23 19:27:02,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:03,000:INFO:Calculating mean and std
2024-09-23 19:27:03,001:INFO:Creating metrics dataframe
2024-09-23 19:27:03,002:INFO:Uploading results into container
2024-09-23 19:27:03,002:INFO:Uploading model into container now
2024-09-23 19:27:03,002:INFO:_master_model_container: 11
2024-09-23 19:27:03,002:INFO:_display_container: 2
2024-09-23 19:27:03,002:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-09-23 19:27:03,002:INFO:create_model() successfully completed......................................
2024-09-23 19:27:03,039:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:03,039:INFO:Creating metrics dataframe
2024-09-23 19:27:03,041:INFO:Initializing Extra Trees Classifier
2024-09-23 19:27:03,041:INFO:Total runtime is 0.05538828372955323 minutes
2024-09-23 19:27:03,041:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:03,041:INFO:Initializing create_model()
2024-09-23 19:27:03,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:03,041:INFO:Checking exceptions
2024-09-23 19:27:03,041:INFO:Importing libraries
2024-09-23 19:27:03,041:INFO:Copying training dataset
2024-09-23 19:27:03,043:INFO:Defining folds
2024-09-23 19:27:03,043:INFO:Declaring metric variables
2024-09-23 19:27:03,043:INFO:Importing untrained model
2024-09-23 19:27:03,043:INFO:Extra Trees Classifier Imported successfully
2024-09-23 19:27:03,043:INFO:Starting cross validation
2024-09-23 19:27:03,044:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:03,243:INFO:Calculating mean and std
2024-09-23 19:27:03,244:INFO:Creating metrics dataframe
2024-09-23 19:27:03,245:INFO:Uploading results into container
2024-09-23 19:27:03,245:INFO:Uploading model into container now
2024-09-23 19:27:03,245:INFO:_master_model_container: 12
2024-09-23 19:27:03,245:INFO:_display_container: 2
2024-09-23 19:27:03,245:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-09-23 19:27:03,245:INFO:create_model() successfully completed......................................
2024-09-23 19:27:03,283:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:03,283:INFO:Creating metrics dataframe
2024-09-23 19:27:03,284:INFO:Initializing Light Gradient Boosting Machine
2024-09-23 19:27:03,284:INFO:Total runtime is 0.05944240093231202 minutes
2024-09-23 19:27:03,284:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:03,284:INFO:Initializing create_model()
2024-09-23 19:27:03,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:03,284:INFO:Checking exceptions
2024-09-23 19:27:03,284:INFO:Importing libraries
2024-09-23 19:27:03,284:INFO:Copying training dataset
2024-09-23 19:27:03,286:INFO:Defining folds
2024-09-23 19:27:03,286:INFO:Declaring metric variables
2024-09-23 19:27:03,286:INFO:Importing untrained model
2024-09-23 19:27:03,286:INFO:Light Gradient Boosting Machine Imported successfully
2024-09-23 19:27:03,286:INFO:Starting cross validation
2024-09-23 19:27:03,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:06,072:INFO:Calculating mean and std
2024-09-23 19:27:06,073:INFO:Creating metrics dataframe
2024-09-23 19:27:06,074:INFO:Uploading results into container
2024-09-23 19:27:06,074:INFO:Uploading model into container now
2024-09-23 19:27:06,074:INFO:_master_model_container: 13
2024-09-23 19:27:06,074:INFO:_display_container: 2
2024-09-23 19:27:06,074:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-09-23 19:27:06,074:INFO:create_model() successfully completed......................................
2024-09-23 19:27:06,113:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:06,113:INFO:Creating metrics dataframe
2024-09-23 19:27:06,114:INFO:Initializing Dummy Classifier
2024-09-23 19:27:06,114:INFO:Total runtime is 0.10661309957504272 minutes
2024-09-23 19:27:06,114:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:06,115:INFO:Initializing create_model()
2024-09-23 19:27:06,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:06,115:INFO:Checking exceptions
2024-09-23 19:27:06,115:INFO:Importing libraries
2024-09-23 19:27:06,115:INFO:Copying training dataset
2024-09-23 19:27:06,116:INFO:Defining folds
2024-09-23 19:27:06,116:INFO:Declaring metric variables
2024-09-23 19:27:06,116:INFO:Importing untrained model
2024-09-23 19:27:06,116:INFO:Dummy Classifier Imported successfully
2024-09-23 19:27:06,116:INFO:Starting cross validation
2024-09-23 19:27:06,117:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:06,155:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,156:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,162:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,164:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,170:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,170:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,172:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,174:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,183:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,187:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,197:INFO:Calculating mean and std
2024-09-23 19:27:06,197:INFO:Creating metrics dataframe
2024-09-23 19:27:06,198:INFO:Uploading results into container
2024-09-23 19:27:06,198:INFO:Uploading model into container now
2024-09-23 19:27:06,199:INFO:_master_model_container: 14
2024-09-23 19:27:06,199:INFO:_display_container: 2
2024-09-23 19:27:06,199:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-09-23 19:27:06,199:INFO:create_model() successfully completed......................................
2024-09-23 19:27:06,239:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:06,239:INFO:Creating metrics dataframe
2024-09-23 19:27:06,241:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-09-23 19:27:06,242:INFO:Initializing create_model()
2024-09-23 19:27:06,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:06,242:INFO:Checking exceptions
2024-09-23 19:27:06,242:INFO:Importing libraries
2024-09-23 19:27:06,243:INFO:Copying training dataset
2024-09-23 19:27:06,244:INFO:Defining folds
2024-09-23 19:27:06,244:INFO:Declaring metric variables
2024-09-23 19:27:06,244:INFO:Importing untrained model
2024-09-23 19:27:06,244:INFO:Declaring custom model
2024-09-23 19:27:06,244:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:27:06,245:INFO:Cross validation set to False
2024-09-23 19:27:06,245:INFO:Fitting Model
2024-09-23 19:27:06,343:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:06,343:INFO:create_model() successfully completed......................................
2024-09-23 19:27:06,385:INFO:_master_model_container: 14
2024-09-23 19:27:06,386:INFO:_display_container: 2
2024-09-23 19:27:06,386:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:06,386:INFO:compare_models() successfully completed......................................
2024-09-23 19:27:06,386:INFO:Initializing tune_model()
2024-09-23 19:27:06,386:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>)
2024-09-23 19:27:06,386:INFO:Checking exceptions
2024-09-23 19:27:06,387:INFO:Copying training dataset
2024-09-23 19:27:06,388:INFO:Checking base model
2024-09-23 19:27:06,388:INFO:Base model : Random Forest Classifier
2024-09-23 19:27:06,388:INFO:Declaring metric variables
2024-09-23 19:27:06,388:INFO:Defining Hyperparameters
2024-09-23 19:27:06,429:INFO:Tuning with n_jobs=-1
2024-09-23 19:27:06,429:INFO:Initializing RandomizedSearchCV
2024-09-23 19:27:09,228:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2024-09-23 19:27:09,229:INFO:Hyperparameter search completed
2024-09-23 19:27:09,229:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:09,229:INFO:Initializing create_model()
2024-09-23 19:27:09,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285e87f70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2024-09-23 19:27:09,229:INFO:Checking exceptions
2024-09-23 19:27:09,229:INFO:Importing libraries
2024-09-23 19:27:09,229:INFO:Copying training dataset
2024-09-23 19:27:09,231:INFO:Defining folds
2024-09-23 19:27:09,231:INFO:Declaring metric variables
2024-09-23 19:27:09,231:INFO:Importing untrained model
2024-09-23 19:27:09,231:INFO:Declaring custom model
2024-09-23 19:27:09,232:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:27:09,232:INFO:Starting cross validation
2024-09-23 19:27:09,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:09,654:INFO:Calculating mean and std
2024-09-23 19:27:09,654:INFO:Creating metrics dataframe
2024-09-23 19:27:09,655:INFO:Finalizing model
2024-09-23 19:27:09,854:INFO:Uploading results into container
2024-09-23 19:27:09,854:INFO:Uploading model into container now
2024-09-23 19:27:09,854:INFO:_master_model_container: 15
2024-09-23 19:27:09,854:INFO:_display_container: 3
2024-09-23 19:27:09,854:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:09,854:INFO:create_model() successfully completed......................................
2024-09-23 19:27:09,893:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:09,893:INFO:choose_better activated
2024-09-23 19:27:09,893:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:09,893:INFO:Initializing create_model()
2024-09-23 19:27:09,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:09,893:INFO:Checking exceptions
2024-09-23 19:27:09,894:INFO:Importing libraries
2024-09-23 19:27:09,894:INFO:Copying training dataset
2024-09-23 19:27:09,895:INFO:Defining folds
2024-09-23 19:27:09,895:INFO:Declaring metric variables
2024-09-23 19:27:09,895:INFO:Importing untrained model
2024-09-23 19:27:09,895:INFO:Declaring custom model
2024-09-23 19:27:09,896:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:27:09,896:INFO:Starting cross validation
2024-09-23 19:27:09,896:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:10,129:INFO:Calculating mean and std
2024-09-23 19:27:10,129:INFO:Creating metrics dataframe
2024-09-23 19:27:10,130:INFO:Finalizing model
2024-09-23 19:27:10,227:INFO:Uploading results into container
2024-09-23 19:27:10,228:INFO:Uploading model into container now
2024-09-23 19:27:10,228:INFO:_master_model_container: 16
2024-09-23 19:27:10,228:INFO:_display_container: 4
2024-09-23 19:27:10,228:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:10,228:INFO:create_model() successfully completed......................................
2024-09-23 19:27:10,265:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:10,265:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8202
2024-09-23 19:27:10,265:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8235
2024-09-23 19:27:10,266:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2024-09-23 19:27:10,266:INFO:choose_better completed
2024-09-23 19:27:10,269:INFO:_master_model_container: 16
2024-09-23 19:27:10,269:INFO:_display_container: 3
2024-09-23 19:27:10,270:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:10,270:INFO:tune_model() successfully completed......................................
2024-09-23 19:27:10,308:INFO:Initializing finalize_model()
2024-09-23 19:27:10,308:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-09-23 19:27:10,308:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:10,309:INFO:Initializing create_model()
2024-09-23 19:27:10,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:10,309:INFO:Checking exceptions
2024-09-23 19:27:10,310:INFO:Importing libraries
2024-09-23 19:27:10,310:INFO:Copying training dataset
2024-09-23 19:27:10,310:INFO:Defining folds
2024-09-23 19:27:10,310:INFO:Declaring metric variables
2024-09-23 19:27:10,310:INFO:Importing untrained model
2024-09-23 19:27:10,310:INFO:Declaring custom model
2024-09-23 19:27:10,310:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:27:10,311:INFO:Cross validation set to False
2024-09-23 19:27:10,311:INFO:Fitting Model
2024-09-23 19:27:10,512:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:27:10,512:INFO:create_model() successfully completed......................................
2024-09-23 19:27:10,548:INFO:_master_model_container: 16
2024-09-23 19:27:10,549:INFO:_display_container: 3
2024-09-23 19:27:10,556:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:27:10,556:INFO:finalize_model() successfully completed......................................
2024-09-23 19:27:10,606:INFO:Initializing save_model()
2024-09-23 19:27:10,606:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-23 19:27:10,606:INFO:Adding model into prep_pipe
2024-09-23 19:27:10,606:WARNING:Only Model saved as it was a pipeline.
2024-09-23 19:27:10,651:INFO:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model.pkl saved in current working directory
2024-09-23 19:27:10,658:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:27:10,658:INFO:save_model() successfully completed......................................
2024-09-24 15:41:10,772:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:41:10,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:41:10,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:41:10,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:41:13,112:INFO:PyCaret ClassificationExperiment
2024-09-24 15:41:13,112:INFO:Logging name: clf-default-name
2024-09-24 15:41:13,112:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-24 15:41:13,113:INFO:version 3.3.2
2024-09-24 15:41:13,113:INFO:Initializing setup()
2024-09-24 15:41:13,113:INFO:self.USI: 26de
2024-09-24 15:41:13,113:INFO:self._variable_keys: {'seed', 'y_train', 'fold_groups_param', 'exp_name_log', 'data', 'X_test', 'gpu_param', 'X_train', 'X', 'is_multiclass', 'fold_shuffle_param', 'memory', '_ml_usecase', 'target_param', 'fold_generator', 'exp_id', '_available_plots', 'gpu_n_jobs_param', 'y', 'log_plots_param', 'pipeline', 'idx', 'html_param', 'y_test', 'logging_param', 'fix_imbalance', 'USI', 'n_jobs_param'}
2024-09-24 15:41:13,113:INFO:Checking environment
2024-09-24 15:41:13,113:INFO:python_version: 3.10.12
2024-09-24 15:41:13,113:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-24 15:41:13,113:INFO:machine: arm64
2024-09-24 15:41:13,146:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-24 15:41:13,147:INFO:Memory: svmem(total=17179869184, available=3345874944, percent=80.5, used=5910544384, free=97976320, active=3253682176, inactive=3151577088, wired=2656862208)
2024-09-24 15:41:13,147:INFO:Physical Core: 10
2024-09-24 15:41:13,147:INFO:Logical Core: 10
2024-09-24 15:41:13,147:INFO:Checking libraries
2024-09-24 15:41:13,147:INFO:System:
2024-09-24 15:41:13,147:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-24 15:41:13,147:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-24 15:41:13,147:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-24 15:41:13,147:INFO:PyCaret required dependencies:
2024-09-24 15:41:13,173:INFO:                 pip: 23.0.1
2024-09-24 15:41:13,173:INFO:          setuptools: 65.5.0
2024-09-24 15:41:13,173:INFO:             pycaret: 3.3.2
2024-09-24 15:41:13,173:INFO:             IPython: 8.27.0
2024-09-24 15:41:13,173:INFO:          ipywidgets: 8.1.5
2024-09-24 15:41:13,173:INFO:                tqdm: 4.66.5
2024-09-24 15:41:13,173:INFO:               numpy: 1.26.4
2024-09-24 15:41:13,173:INFO:              pandas: 2.1.4
2024-09-24 15:41:13,173:INFO:              jinja2: 3.1.4
2024-09-24 15:41:13,173:INFO:               scipy: 1.11.4
2024-09-24 15:41:13,173:INFO:              joblib: 1.3.2
2024-09-24 15:41:13,173:INFO:             sklearn: 1.4.2
2024-09-24 15:41:13,173:INFO:                pyod: 2.0.2
2024-09-24 15:41:13,173:INFO:            imblearn: 0.12.3
2024-09-24 15:41:13,173:INFO:   category_encoders: 2.6.3
2024-09-24 15:41:13,173:INFO:            lightgbm: 4.5.0
2024-09-24 15:41:13,173:INFO:               numba: 0.60.0
2024-09-24 15:41:13,173:INFO:            requests: 2.32.3
2024-09-24 15:41:13,174:INFO:          matplotlib: 3.7.5
2024-09-24 15:41:13,174:INFO:          scikitplot: 0.3.7
2024-09-24 15:41:13,174:INFO:         yellowbrick: 1.5
2024-09-24 15:41:13,174:INFO:              plotly: 5.24.1
2024-09-24 15:41:13,174:INFO:    plotly-resampler: Not installed
2024-09-24 15:41:13,174:INFO:             kaleido: 0.2.1
2024-09-24 15:41:13,174:INFO:           schemdraw: 0.15
2024-09-24 15:41:13,174:INFO:         statsmodels: 0.14.3
2024-09-24 15:41:13,174:INFO:              sktime: 0.26.0
2024-09-24 15:41:13,174:INFO:               tbats: 1.1.3
2024-09-24 15:41:13,174:INFO:            pmdarima: 2.0.4
2024-09-24 15:41:13,174:INFO:              psutil: 6.0.0
2024-09-24 15:41:13,174:INFO:          markupsafe: 2.1.5
2024-09-24 15:41:13,174:INFO:             pickle5: Not installed
2024-09-24 15:41:13,174:INFO:         cloudpickle: 3.0.0
2024-09-24 15:41:13,174:INFO:         deprecation: 2.1.0
2024-09-24 15:41:13,174:INFO:              xxhash: 3.5.0
2024-09-24 15:41:13,174:INFO:           wurlitzer: 3.1.1
2024-09-24 15:41:13,174:INFO:PyCaret optional dependencies:
2024-09-24 15:41:13,180:INFO:                shap: 0.46.0
2024-09-24 15:41:13,180:INFO:           interpret: Not installed
2024-09-24 15:41:13,180:INFO:                umap: Not installed
2024-09-24 15:41:13,180:INFO:     ydata_profiling: Not installed
2024-09-24 15:41:13,181:INFO:  explainerdashboard: Not installed
2024-09-24 15:41:13,181:INFO:             autoviz: Not installed
2024-09-24 15:41:13,181:INFO:           fairlearn: Not installed
2024-09-24 15:41:13,181:INFO:          deepchecks: Not installed
2024-09-24 15:41:13,181:INFO:             xgboost: Not installed
2024-09-24 15:41:13,181:INFO:            catboost: Not installed
2024-09-24 15:41:13,181:INFO:              kmodes: Not installed
2024-09-24 15:41:13,181:INFO:             mlxtend: Not installed
2024-09-24 15:41:13,181:INFO:       statsforecast: Not installed
2024-09-24 15:41:13,181:INFO:        tune_sklearn: Not installed
2024-09-24 15:41:13,181:INFO:                 ray: Not installed
2024-09-24 15:41:13,181:INFO:            hyperopt: Not installed
2024-09-24 15:41:13,181:INFO:              optuna: Not installed
2024-09-24 15:41:13,181:INFO:               skopt: Not installed
2024-09-24 15:41:13,181:INFO:              mlflow: Not installed
2024-09-24 15:41:13,181:INFO:              gradio: Not installed
2024-09-24 15:41:13,181:INFO:             fastapi: Not installed
2024-09-24 15:41:13,181:INFO:             uvicorn: Not installed
2024-09-24 15:41:13,181:INFO:              m2cgen: Not installed
2024-09-24 15:41:13,181:INFO:           evidently: Not installed
2024-09-24 15:41:13,181:INFO:               fugue: Not installed
2024-09-24 15:41:13,181:INFO:           streamlit: Not installed
2024-09-24 15:41:13,181:INFO:             prophet: Not installed
2024-09-24 15:41:13,181:INFO:None
2024-09-24 15:41:13,181:INFO:Set up data.
2024-09-24 15:41:13,187:INFO:Set up folding strategy.
2024-09-24 15:41:13,187:INFO:Set up train/test split.
2024-09-24 15:41:13,197:INFO:Set up index.
2024-09-24 15:41:13,197:INFO:Assigning column types.
2024-09-24 15:41:13,199:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-24 15:41:13,219:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-24 15:41:13,222:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-24 15:41:13,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-24 15:41:13,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-24 15:41:13,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,270:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-24 15:41:13,290:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-24 15:41:13,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,321:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-24 15:41:13,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,334:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-24 15:41:13,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,400:INFO:Preparing preprocessing pipeline...
2024-09-24 15:41:13,401:INFO:Set up simple imputation.
2024-09-24 15:41:13,402:INFO:Set up encoding of ordinal features.
2024-09-24 15:41:13,402:INFO:Set up encoding of categorical features.
2024-09-24 15:41:13,403:INFO:Set up feature normalization.
2024-09-24 15:41:13,440:INFO:Finished creating preprocessing pipeline.
2024-09-24 15:41:13,447:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-24 15:41:13,447:INFO:Creating final display dataframe.
2024-09-24 15:41:13,534:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              26de
2024-09-24 15:41:13,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-24 15:41:13,600:INFO:setup() successfully completed in 0.49s...............
2024-09-24 15:43:20,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:43:20,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:43:20,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:43:20,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:44:23,334:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:44:23,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:44:23,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:44:23,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:45:16,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:45:16,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:45:16,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:45:16,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:46:49,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:46:49,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:46:49,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-24 15:46:49,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:03:13,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:03:13,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:03:13,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:03:13,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:04:14,750:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:04:14,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:04:14,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:04:14,751:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:04:16,581:INFO:PyCaret ClassificationExperiment
2024-09-25 07:04:16,581:INFO:Logging name: clf-default-name
2024-09-25 07:04:16,581:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-25 07:04:16,581:INFO:version 3.3.2
2024-09-25 07:04:16,581:INFO:Initializing setup()
2024-09-25 07:04:16,581:INFO:self.USI: abf9
2024-09-25 07:04:16,581:INFO:self._variable_keys: {'data', 'gpu_param', 'fold_generator', 'X_test', 'exp_name_log', 'log_plots_param', 'USI', 'target_param', 'fold_groups_param', 'y', '_ml_usecase', 'is_multiclass', 'X', 'memory', 'fix_imbalance', 'y_test', 'y_train', 'idx', 'html_param', '_available_plots', 'fold_shuffle_param', 'seed', 'logging_param', 'pipeline', 'gpu_n_jobs_param', 'exp_id', 'n_jobs_param', 'X_train'}
2024-09-25 07:04:16,581:INFO:Checking environment
2024-09-25 07:04:16,581:INFO:python_version: 3.10.12
2024-09-25 07:04:16,581:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-25 07:04:16,581:INFO:machine: arm64
2024-09-25 07:04:16,616:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:04:16,617:INFO:Memory: svmem(total=17179869184, available=3886514176, percent=77.4, used=6577487872, free=108838912, active=3782934528, inactive=3706093568, wired=2794553344)
2024-09-25 07:04:16,617:INFO:Physical Core: 10
2024-09-25 07:04:16,617:INFO:Logical Core: 10
2024-09-25 07:04:16,617:INFO:Checking libraries
2024-09-25 07:04:16,617:INFO:System:
2024-09-25 07:04:16,617:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-25 07:04:16,617:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-25 07:04:16,617:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:04:16,617:INFO:PyCaret required dependencies:
2024-09-25 07:04:16,638:INFO:                 pip: 23.0.1
2024-09-25 07:04:16,638:INFO:          setuptools: 65.5.0
2024-09-25 07:04:16,638:INFO:             pycaret: 3.3.2
2024-09-25 07:04:16,638:INFO:             IPython: 8.27.0
2024-09-25 07:04:16,638:INFO:          ipywidgets: 8.1.5
2024-09-25 07:04:16,638:INFO:                tqdm: 4.66.5
2024-09-25 07:04:16,638:INFO:               numpy: 1.26.4
2024-09-25 07:04:16,638:INFO:              pandas: 2.1.4
2024-09-25 07:04:16,638:INFO:              jinja2: 3.1.4
2024-09-25 07:04:16,638:INFO:               scipy: 1.11.4
2024-09-25 07:04:16,638:INFO:              joblib: 1.3.2
2024-09-25 07:04:16,638:INFO:             sklearn: 1.4.2
2024-09-25 07:04:16,638:INFO:                pyod: 2.0.2
2024-09-25 07:04:16,638:INFO:            imblearn: 0.12.3
2024-09-25 07:04:16,638:INFO:   category_encoders: 2.6.3
2024-09-25 07:04:16,638:INFO:            lightgbm: 4.5.0
2024-09-25 07:04:16,638:INFO:               numba: 0.60.0
2024-09-25 07:04:16,638:INFO:            requests: 2.32.3
2024-09-25 07:04:16,638:INFO:          matplotlib: 3.7.5
2024-09-25 07:04:16,638:INFO:          scikitplot: 0.3.7
2024-09-25 07:04:16,639:INFO:         yellowbrick: 1.5
2024-09-25 07:04:16,639:INFO:              plotly: 5.24.1
2024-09-25 07:04:16,639:INFO:    plotly-resampler: Not installed
2024-09-25 07:04:16,639:INFO:             kaleido: 0.2.1
2024-09-25 07:04:16,639:INFO:           schemdraw: 0.15
2024-09-25 07:04:16,639:INFO:         statsmodels: 0.14.3
2024-09-25 07:04:16,639:INFO:              sktime: 0.26.0
2024-09-25 07:04:16,639:INFO:               tbats: 1.1.3
2024-09-25 07:04:16,639:INFO:            pmdarima: 2.0.4
2024-09-25 07:04:16,639:INFO:              psutil: 6.0.0
2024-09-25 07:04:16,639:INFO:          markupsafe: 2.1.5
2024-09-25 07:04:16,639:INFO:             pickle5: Not installed
2024-09-25 07:04:16,639:INFO:         cloudpickle: 3.0.0
2024-09-25 07:04:16,639:INFO:         deprecation: 2.1.0
2024-09-25 07:04:16,639:INFO:              xxhash: 3.5.0
2024-09-25 07:04:16,639:INFO:           wurlitzer: 3.1.1
2024-09-25 07:04:16,639:INFO:PyCaret optional dependencies:
2024-09-25 07:04:16,644:INFO:                shap: 0.46.0
2024-09-25 07:04:16,644:INFO:           interpret: Not installed
2024-09-25 07:04:16,644:INFO:                umap: Not installed
2024-09-25 07:04:16,644:INFO:     ydata_profiling: 4.10.0
2024-09-25 07:04:16,645:INFO:  explainerdashboard: Not installed
2024-09-25 07:04:16,645:INFO:             autoviz: Not installed
2024-09-25 07:04:16,645:INFO:           fairlearn: Not installed
2024-09-25 07:04:16,645:INFO:          deepchecks: Not installed
2024-09-25 07:04:16,645:INFO:             xgboost: Not installed
2024-09-25 07:04:16,645:INFO:            catboost: Not installed
2024-09-25 07:04:16,645:INFO:              kmodes: Not installed
2024-09-25 07:04:16,645:INFO:             mlxtend: Not installed
2024-09-25 07:04:16,645:INFO:       statsforecast: Not installed
2024-09-25 07:04:16,645:INFO:        tune_sklearn: Not installed
2024-09-25 07:04:16,645:INFO:                 ray: Not installed
2024-09-25 07:04:16,645:INFO:            hyperopt: Not installed
2024-09-25 07:04:16,645:INFO:              optuna: Not installed
2024-09-25 07:04:16,645:INFO:               skopt: Not installed
2024-09-25 07:04:16,645:INFO:              mlflow: Not installed
2024-09-25 07:04:16,645:INFO:              gradio: Not installed
2024-09-25 07:04:16,645:INFO:             fastapi: Not installed
2024-09-25 07:04:16,645:INFO:             uvicorn: Not installed
2024-09-25 07:04:16,645:INFO:              m2cgen: Not installed
2024-09-25 07:04:16,645:INFO:           evidently: Not installed
2024-09-25 07:04:16,645:INFO:               fugue: Not installed
2024-09-25 07:04:16,645:INFO:           streamlit: Not installed
2024-09-25 07:04:16,645:INFO:             prophet: Not installed
2024-09-25 07:04:16,645:INFO:None
2024-09-25 07:04:16,645:INFO:Set up data.
2024-09-25 07:04:16,651:INFO:Set up folding strategy.
2024-09-25 07:04:16,651:INFO:Set up train/test split.
2024-09-25 07:04:16,657:INFO:Set up index.
2024-09-25 07:04:16,658:INFO:Assigning column types.
2024-09-25 07:04:16,659:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-25 07:04:16,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:04:16,681:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:04:16,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,715:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:04:16,716:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:04:16,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,728:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-25 07:04:16,748:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:04:16,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,780:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:04:16,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,792:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,792:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-25 07:04:16,824:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,858:INFO:Preparing preprocessing pipeline...
2024-09-25 07:04:16,859:INFO:Set up simple imputation.
2024-09-25 07:04:16,860:INFO:Set up encoding of categorical features.
2024-09-25 07:04:16,860:INFO:Set up feature normalization.
2024-09-25 07:04:16,888:INFO:Finished creating preprocessing pipeline.
2024-09-25 07:04:16,892:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Sex',
                                             'Age', 'SibSp', 'Parch', 'Fare',
                                             'FamilySize'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-25 07:04:16,892:INFO:Creating final display dataframe.
2024-09-25 07:04:16,960:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 13)
4        Transformed data shape         (891, 12)
5   Transformed train set shape         (623, 12)
6    Transformed test set shape         (268, 12)
7               Ignore features                 3
8              Numeric features                 8
9          Categorical features                 1
10     Rows with missing values             77.1%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              abf9
2024-09-25 07:04:16,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:16,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:17,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:17,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:04:17,026:INFO:setup() successfully completed in 0.45s...............
2024-09-25 07:12:14,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:12:14,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:12:14,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:12:14,913:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:12:16,923:INFO:PyCaret ClassificationExperiment
2024-09-25 07:12:16,923:INFO:Logging name: clf-default-name
2024-09-25 07:12:16,923:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-25 07:12:16,923:INFO:version 3.3.2
2024-09-25 07:12:16,923:INFO:Initializing setup()
2024-09-25 07:12:16,923:INFO:self.USI: 0be2
2024-09-25 07:12:16,923:INFO:self._variable_keys: {'pipeline', '_ml_usecase', 'X_train', 'memory', 'target_param', 'idx', 'y_test', 'fold_shuffle_param', 'gpu_param', 'fix_imbalance', 'seed', 'y_train', 'data', '_available_plots', 'X', 'exp_id', 'n_jobs_param', 'html_param', 'USI', 'logging_param', 'is_multiclass', 'exp_name_log', 'X_test', 'fold_generator', 'y', 'gpu_n_jobs_param', 'log_plots_param', 'fold_groups_param'}
2024-09-25 07:12:16,923:INFO:Checking environment
2024-09-25 07:12:16,923:INFO:python_version: 3.10.12
2024-09-25 07:12:16,924:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-25 07:12:16,924:INFO:machine: arm64
2024-09-25 07:12:16,958:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:12:16,959:INFO:Memory: svmem(total=17179869184, available=3715530752, percent=78.4, used=6449217536, free=100057088, active=3622060032, inactive=3542630400, wired=2827157504)
2024-09-25 07:12:16,959:INFO:Physical Core: 10
2024-09-25 07:12:16,959:INFO:Logical Core: 10
2024-09-25 07:12:16,959:INFO:Checking libraries
2024-09-25 07:12:16,959:INFO:System:
2024-09-25 07:12:16,959:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-25 07:12:16,959:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-25 07:12:16,959:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:12:16,959:INFO:PyCaret required dependencies:
2024-09-25 07:12:16,979:INFO:                 pip: 23.0.1
2024-09-25 07:12:16,979:INFO:          setuptools: 65.5.0
2024-09-25 07:12:16,979:INFO:             pycaret: 3.3.2
2024-09-25 07:12:16,979:INFO:             IPython: 8.27.0
2024-09-25 07:12:16,979:INFO:          ipywidgets: 8.1.5
2024-09-25 07:12:16,979:INFO:                tqdm: 4.66.5
2024-09-25 07:12:16,979:INFO:               numpy: 1.26.4
2024-09-25 07:12:16,979:INFO:              pandas: 2.1.4
2024-09-25 07:12:16,979:INFO:              jinja2: 3.1.4
2024-09-25 07:12:16,979:INFO:               scipy: 1.11.4
2024-09-25 07:12:16,979:INFO:              joblib: 1.3.2
2024-09-25 07:12:16,979:INFO:             sklearn: 1.4.2
2024-09-25 07:12:16,979:INFO:                pyod: 2.0.2
2024-09-25 07:12:16,979:INFO:            imblearn: 0.12.3
2024-09-25 07:12:16,979:INFO:   category_encoders: 2.6.3
2024-09-25 07:12:16,979:INFO:            lightgbm: 4.5.0
2024-09-25 07:12:16,979:INFO:               numba: 0.60.0
2024-09-25 07:12:16,979:INFO:            requests: 2.32.3
2024-09-25 07:12:16,979:INFO:          matplotlib: 3.7.5
2024-09-25 07:12:16,979:INFO:          scikitplot: 0.3.7
2024-09-25 07:12:16,979:INFO:         yellowbrick: 1.5
2024-09-25 07:12:16,979:INFO:              plotly: 5.24.1
2024-09-25 07:12:16,979:INFO:    plotly-resampler: Not installed
2024-09-25 07:12:16,980:INFO:             kaleido: 0.2.1
2024-09-25 07:12:16,980:INFO:           schemdraw: 0.15
2024-09-25 07:12:16,980:INFO:         statsmodels: 0.14.3
2024-09-25 07:12:16,980:INFO:              sktime: 0.26.0
2024-09-25 07:12:16,980:INFO:               tbats: 1.1.3
2024-09-25 07:12:16,980:INFO:            pmdarima: 2.0.4
2024-09-25 07:12:16,980:INFO:              psutil: 6.0.0
2024-09-25 07:12:16,980:INFO:          markupsafe: 2.1.5
2024-09-25 07:12:16,980:INFO:             pickle5: Not installed
2024-09-25 07:12:16,980:INFO:         cloudpickle: 3.0.0
2024-09-25 07:12:16,980:INFO:         deprecation: 2.1.0
2024-09-25 07:12:16,980:INFO:              xxhash: 3.5.0
2024-09-25 07:12:16,980:INFO:           wurlitzer: 3.1.1
2024-09-25 07:12:16,980:INFO:PyCaret optional dependencies:
2024-09-25 07:12:16,986:INFO:                shap: 0.46.0
2024-09-25 07:12:16,986:INFO:           interpret: Not installed
2024-09-25 07:12:16,986:INFO:                umap: Not installed
2024-09-25 07:12:16,986:INFO:     ydata_profiling: 4.10.0
2024-09-25 07:12:16,986:INFO:  explainerdashboard: Not installed
2024-09-25 07:12:16,986:INFO:             autoviz: Not installed
2024-09-25 07:12:16,986:INFO:           fairlearn: Not installed
2024-09-25 07:12:16,986:INFO:          deepchecks: Not installed
2024-09-25 07:12:16,986:INFO:             xgboost: Not installed
2024-09-25 07:12:16,986:INFO:            catboost: Not installed
2024-09-25 07:12:16,986:INFO:              kmodes: Not installed
2024-09-25 07:12:16,986:INFO:             mlxtend: Not installed
2024-09-25 07:12:16,986:INFO:       statsforecast: Not installed
2024-09-25 07:12:16,986:INFO:        tune_sklearn: Not installed
2024-09-25 07:12:16,986:INFO:                 ray: Not installed
2024-09-25 07:12:16,986:INFO:            hyperopt: Not installed
2024-09-25 07:12:16,986:INFO:              optuna: Not installed
2024-09-25 07:12:16,986:INFO:               skopt: Not installed
2024-09-25 07:12:16,986:INFO:              mlflow: Not installed
2024-09-25 07:12:16,986:INFO:              gradio: Not installed
2024-09-25 07:12:16,986:INFO:             fastapi: Not installed
2024-09-25 07:12:16,986:INFO:             uvicorn: Not installed
2024-09-25 07:12:16,986:INFO:              m2cgen: Not installed
2024-09-25 07:12:16,986:INFO:           evidently: Not installed
2024-09-25 07:12:16,986:INFO:               fugue: Not installed
2024-09-25 07:12:16,986:INFO:           streamlit: Not installed
2024-09-25 07:12:16,986:INFO:             prophet: Not installed
2024-09-25 07:12:16,986:INFO:None
2024-09-25 07:12:16,986:INFO:Set up data.
2024-09-25 07:12:16,991:INFO:Set up folding strategy.
2024-09-25 07:12:16,991:INFO:Set up train/test split.
2024-09-25 07:12:16,995:INFO:Set up index.
2024-09-25 07:12:16,996:INFO:Assigning column types.
2024-09-25 07:12:16,997:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-25 07:12:17,017:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:12:17,019:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:12:17,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,053:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:12:17,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:12:17,066:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,067:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-25 07:12:17,086:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:12:17,097:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,117:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:12:17,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,130:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-25 07:12:17,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,194:INFO:Preparing preprocessing pipeline...
2024-09-25 07:12:17,194:INFO:Set up simple imputation.
2024-09-25 07:12:17,196:INFO:Set up encoding of ordinal features.
2024-09-25 07:12:17,196:INFO:Set up encoding of categorical features.
2024-09-25 07:12:17,196:INFO:Set up feature normalization.
2024-09-25 07:12:17,230:INFO:Finished creating preprocessing pipeline.
2024-09-25 07:12:17,238:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-25 07:12:17,238:INFO:Creating final display dataframe.
2024-09-25 07:12:17,324:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              0be2
2024-09-25 07:12:17,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:12:17,390:INFO:setup() successfully completed in 0.47s...............
2024-09-25 07:12:17,390:INFO:Initializing compare_models()
2024-09-25 07:12:17,391:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-09-25 07:12:17,391:INFO:Checking exceptions
2024-09-25 07:12:17,394:INFO:Preparing display monitor
2024-09-25 07:12:17,409:INFO:Initializing Logistic Regression
2024-09-25 07:12:17,409:INFO:Total runtime is 3.135204315185547e-06 minutes
2024-09-25 07:12:17,409:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:17,409:INFO:Initializing create_model()
2024-09-25 07:12:17,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:17,409:INFO:Checking exceptions
2024-09-25 07:12:17,409:INFO:Importing libraries
2024-09-25 07:12:17,409:INFO:Copying training dataset
2024-09-25 07:12:17,411:INFO:Defining folds
2024-09-25 07:12:17,411:INFO:Declaring metric variables
2024-09-25 07:12:17,411:INFO:Importing untrained model
2024-09-25 07:12:17,412:INFO:Logistic Regression Imported successfully
2024-09-25 07:12:17,412:INFO:Starting cross validation
2024-09-25 07:12:17,413:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:19,404:INFO:Calculating mean and std
2024-09-25 07:12:19,405:INFO:Creating metrics dataframe
2024-09-25 07:12:19,408:INFO:Uploading results into container
2024-09-25 07:12:19,408:INFO:Uploading model into container now
2024-09-25 07:12:19,408:INFO:_master_model_container: 1
2024-09-25 07:12:19,409:INFO:_display_container: 2
2024-09-25 07:12:19,409:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-09-25 07:12:19,409:INFO:create_model() successfully completed......................................
2024-09-25 07:12:19,483:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:19,483:INFO:Creating metrics dataframe
2024-09-25 07:12:19,484:INFO:Initializing K Neighbors Classifier
2024-09-25 07:12:19,484:INFO:Total runtime is 0.034593669573465984 minutes
2024-09-25 07:12:19,484:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:19,484:INFO:Initializing create_model()
2024-09-25 07:12:19,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:19,484:INFO:Checking exceptions
2024-09-25 07:12:19,484:INFO:Importing libraries
2024-09-25 07:12:19,485:INFO:Copying training dataset
2024-09-25 07:12:19,487:INFO:Defining folds
2024-09-25 07:12:19,487:INFO:Declaring metric variables
2024-09-25 07:12:19,487:INFO:Importing untrained model
2024-09-25 07:12:19,487:INFO:K Neighbors Classifier Imported successfully
2024-09-25 07:12:19,487:INFO:Starting cross validation
2024-09-25 07:12:19,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:19,609:INFO:Calculating mean and std
2024-09-25 07:12:19,609:INFO:Creating metrics dataframe
2024-09-25 07:12:19,610:INFO:Uploading results into container
2024-09-25 07:12:19,610:INFO:Uploading model into container now
2024-09-25 07:12:19,610:INFO:_master_model_container: 2
2024-09-25 07:12:19,610:INFO:_display_container: 2
2024-09-25 07:12:19,611:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-09-25 07:12:19,611:INFO:create_model() successfully completed......................................
2024-09-25 07:12:19,658:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:19,658:INFO:Creating metrics dataframe
2024-09-25 07:12:19,660:INFO:Initializing Naive Bayes
2024-09-25 07:12:19,660:INFO:Total runtime is 0.03751819928487142 minutes
2024-09-25 07:12:19,660:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:19,660:INFO:Initializing create_model()
2024-09-25 07:12:19,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:19,660:INFO:Checking exceptions
2024-09-25 07:12:19,660:INFO:Importing libraries
2024-09-25 07:12:19,660:INFO:Copying training dataset
2024-09-25 07:12:19,662:INFO:Defining folds
2024-09-25 07:12:19,662:INFO:Declaring metric variables
2024-09-25 07:12:19,662:INFO:Importing untrained model
2024-09-25 07:12:19,662:INFO:Naive Bayes Imported successfully
2024-09-25 07:12:19,662:INFO:Starting cross validation
2024-09-25 07:12:19,663:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:19,737:INFO:Calculating mean and std
2024-09-25 07:12:19,737:INFO:Creating metrics dataframe
2024-09-25 07:12:19,738:INFO:Uploading results into container
2024-09-25 07:12:19,738:INFO:Uploading model into container now
2024-09-25 07:12:19,738:INFO:_master_model_container: 3
2024-09-25 07:12:19,738:INFO:_display_container: 2
2024-09-25 07:12:19,738:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-09-25 07:12:19,738:INFO:create_model() successfully completed......................................
2024-09-25 07:12:19,778:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:19,778:INFO:Creating metrics dataframe
2024-09-25 07:12:19,779:INFO:Initializing Decision Tree Classifier
2024-09-25 07:12:19,779:INFO:Total runtime is 0.039513564109802245 minutes
2024-09-25 07:12:19,779:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:19,780:INFO:Initializing create_model()
2024-09-25 07:12:19,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:19,780:INFO:Checking exceptions
2024-09-25 07:12:19,780:INFO:Importing libraries
2024-09-25 07:12:19,780:INFO:Copying training dataset
2024-09-25 07:12:19,781:INFO:Defining folds
2024-09-25 07:12:19,781:INFO:Declaring metric variables
2024-09-25 07:12:19,781:INFO:Importing untrained model
2024-09-25 07:12:19,781:INFO:Decision Tree Classifier Imported successfully
2024-09-25 07:12:19,781:INFO:Starting cross validation
2024-09-25 07:12:19,782:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:19,869:INFO:Calculating mean and std
2024-09-25 07:12:19,870:INFO:Creating metrics dataframe
2024-09-25 07:12:19,870:INFO:Uploading results into container
2024-09-25 07:12:19,871:INFO:Uploading model into container now
2024-09-25 07:12:19,871:INFO:_master_model_container: 4
2024-09-25 07:12:19,871:INFO:_display_container: 2
2024-09-25 07:12:19,871:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-09-25 07:12:19,871:INFO:create_model() successfully completed......................................
2024-09-25 07:12:19,914:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:19,914:INFO:Creating metrics dataframe
2024-09-25 07:12:19,916:INFO:Initializing SVM - Linear Kernel
2024-09-25 07:12:19,916:INFO:Total runtime is 0.04178241888682047 minutes
2024-09-25 07:12:19,916:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:19,916:INFO:Initializing create_model()
2024-09-25 07:12:19,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:19,916:INFO:Checking exceptions
2024-09-25 07:12:19,916:INFO:Importing libraries
2024-09-25 07:12:19,916:INFO:Copying training dataset
2024-09-25 07:12:19,917:INFO:Defining folds
2024-09-25 07:12:19,917:INFO:Declaring metric variables
2024-09-25 07:12:19,917:INFO:Importing untrained model
2024-09-25 07:12:19,918:INFO:SVM - Linear Kernel Imported successfully
2024-09-25 07:12:19,918:INFO:Starting cross validation
2024-09-25 07:12:19,918:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:19,990:INFO:Calculating mean and std
2024-09-25 07:12:19,990:INFO:Creating metrics dataframe
2024-09-25 07:12:19,991:INFO:Uploading results into container
2024-09-25 07:12:19,993:INFO:Uploading model into container now
2024-09-25 07:12:19,993:INFO:_master_model_container: 5
2024-09-25 07:12:19,993:INFO:_display_container: 2
2024-09-25 07:12:19,993:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-09-25 07:12:19,994:INFO:create_model() successfully completed......................................
2024-09-25 07:12:20,033:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:20,033:INFO:Creating metrics dataframe
2024-09-25 07:12:20,034:INFO:Initializing Ridge Classifier
2024-09-25 07:12:20,034:INFO:Total runtime is 0.04375821749369303 minutes
2024-09-25 07:12:20,034:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:20,034:INFO:Initializing create_model()
2024-09-25 07:12:20,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:20,034:INFO:Checking exceptions
2024-09-25 07:12:20,034:INFO:Importing libraries
2024-09-25 07:12:20,034:INFO:Copying training dataset
2024-09-25 07:12:20,036:INFO:Defining folds
2024-09-25 07:12:20,036:INFO:Declaring metric variables
2024-09-25 07:12:20,036:INFO:Importing untrained model
2024-09-25 07:12:20,036:INFO:Ridge Classifier Imported successfully
2024-09-25 07:12:20,036:INFO:Starting cross validation
2024-09-25 07:12:20,037:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:20,103:INFO:Calculating mean and std
2024-09-25 07:12:20,104:INFO:Creating metrics dataframe
2024-09-25 07:12:20,105:INFO:Uploading results into container
2024-09-25 07:12:20,105:INFO:Uploading model into container now
2024-09-25 07:12:20,105:INFO:_master_model_container: 6
2024-09-25 07:12:20,105:INFO:_display_container: 2
2024-09-25 07:12:20,105:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-09-25 07:12:20,105:INFO:create_model() successfully completed......................................
2024-09-25 07:12:20,144:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:20,144:INFO:Creating metrics dataframe
2024-09-25 07:12:20,145:INFO:Initializing Random Forest Classifier
2024-09-25 07:12:20,145:INFO:Total runtime is 0.045612398783365884 minutes
2024-09-25 07:12:20,145:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:20,146:INFO:Initializing create_model()
2024-09-25 07:12:20,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:20,146:INFO:Checking exceptions
2024-09-25 07:12:20,146:INFO:Importing libraries
2024-09-25 07:12:20,146:INFO:Copying training dataset
2024-09-25 07:12:20,147:INFO:Defining folds
2024-09-25 07:12:20,147:INFO:Declaring metric variables
2024-09-25 07:12:20,147:INFO:Importing untrained model
2024-09-25 07:12:20,147:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:12:20,147:INFO:Starting cross validation
2024-09-25 07:12:20,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:20,402:INFO:Calculating mean and std
2024-09-25 07:12:20,402:INFO:Creating metrics dataframe
2024-09-25 07:12:20,403:INFO:Uploading results into container
2024-09-25 07:12:20,403:INFO:Uploading model into container now
2024-09-25 07:12:20,403:INFO:_master_model_container: 7
2024-09-25 07:12:20,403:INFO:_display_container: 2
2024-09-25 07:12:20,404:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:12:20,404:INFO:create_model() successfully completed......................................
2024-09-25 07:12:20,443:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:20,443:INFO:Creating metrics dataframe
2024-09-25 07:12:20,444:INFO:Initializing Quadratic Discriminant Analysis
2024-09-25 07:12:20,444:INFO:Total runtime is 0.05059563716252645 minutes
2024-09-25 07:12:20,444:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:20,445:INFO:Initializing create_model()
2024-09-25 07:12:20,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:20,445:INFO:Checking exceptions
2024-09-25 07:12:20,445:INFO:Importing libraries
2024-09-25 07:12:20,445:INFO:Copying training dataset
2024-09-25 07:12:20,446:INFO:Defining folds
2024-09-25 07:12:20,446:INFO:Declaring metric variables
2024-09-25 07:12:20,447:INFO:Importing untrained model
2024-09-25 07:12:20,447:INFO:Quadratic Discriminant Analysis Imported successfully
2024-09-25 07:12:20,447:INFO:Starting cross validation
2024-09-25 07:12:20,448:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:20,476:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:12:20,476:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:12:20,482:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:12:20,484:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:12:20,485:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:12:20,491:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:12:20,493:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:12:20,494:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:12:20,498:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:12:20,498:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:12:20,516:INFO:Calculating mean and std
2024-09-25 07:12:20,517:INFO:Creating metrics dataframe
2024-09-25 07:12:20,518:INFO:Uploading results into container
2024-09-25 07:12:20,518:INFO:Uploading model into container now
2024-09-25 07:12:20,518:INFO:_master_model_container: 8
2024-09-25 07:12:20,518:INFO:_display_container: 2
2024-09-25 07:12:20,518:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-09-25 07:12:20,518:INFO:create_model() successfully completed......................................
2024-09-25 07:12:20,556:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:20,557:INFO:Creating metrics dataframe
2024-09-25 07:12:20,558:INFO:Initializing Ada Boost Classifier
2024-09-25 07:12:20,558:INFO:Total runtime is 0.052486268679300944 minutes
2024-09-25 07:12:20,558:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:20,558:INFO:Initializing create_model()
2024-09-25 07:12:20,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:20,558:INFO:Checking exceptions
2024-09-25 07:12:20,558:INFO:Importing libraries
2024-09-25 07:12:20,558:INFO:Copying training dataset
2024-09-25 07:12:20,559:INFO:Defining folds
2024-09-25 07:12:20,559:INFO:Declaring metric variables
2024-09-25 07:12:20,559:INFO:Importing untrained model
2024-09-25 07:12:20,560:INFO:Ada Boost Classifier Imported successfully
2024-09-25 07:12:20,560:INFO:Starting cross validation
2024-09-25 07:12:20,560:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:20,586:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:12:20,586:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:12:20,591:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:12:20,593:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:12:20,596:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:12:20,596:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:12:20,609:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:12:20,627:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:12:20,627:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:12:20,631:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:12:20,694:INFO:Calculating mean and std
2024-09-25 07:12:20,694:INFO:Creating metrics dataframe
2024-09-25 07:12:20,695:INFO:Uploading results into container
2024-09-25 07:12:20,695:INFO:Uploading model into container now
2024-09-25 07:12:20,695:INFO:_master_model_container: 9
2024-09-25 07:12:20,695:INFO:_display_container: 2
2024-09-25 07:12:20,695:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-09-25 07:12:20,695:INFO:create_model() successfully completed......................................
2024-09-25 07:12:20,733:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:20,733:INFO:Creating metrics dataframe
2024-09-25 07:12:20,734:INFO:Initializing Gradient Boosting Classifier
2024-09-25 07:12:20,734:INFO:Total runtime is 0.05542973279953003 minutes
2024-09-25 07:12:20,734:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:20,735:INFO:Initializing create_model()
2024-09-25 07:12:20,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:20,735:INFO:Checking exceptions
2024-09-25 07:12:20,735:INFO:Importing libraries
2024-09-25 07:12:20,735:INFO:Copying training dataset
2024-09-25 07:12:20,736:INFO:Defining folds
2024-09-25 07:12:20,736:INFO:Declaring metric variables
2024-09-25 07:12:20,736:INFO:Importing untrained model
2024-09-25 07:12:20,736:INFO:Gradient Boosting Classifier Imported successfully
2024-09-25 07:12:20,736:INFO:Starting cross validation
2024-09-25 07:12:20,737:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:20,893:INFO:Calculating mean and std
2024-09-25 07:12:20,894:INFO:Creating metrics dataframe
2024-09-25 07:12:20,895:INFO:Uploading results into container
2024-09-25 07:12:20,895:INFO:Uploading model into container now
2024-09-25 07:12:20,895:INFO:_master_model_container: 10
2024-09-25 07:12:20,895:INFO:_display_container: 2
2024-09-25 07:12:20,895:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-09-25 07:12:20,895:INFO:create_model() successfully completed......................................
2024-09-25 07:12:20,933:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:20,934:INFO:Creating metrics dataframe
2024-09-25 07:12:20,935:INFO:Initializing Linear Discriminant Analysis
2024-09-25 07:12:20,935:INFO:Total runtime is 0.058768864472707114 minutes
2024-09-25 07:12:20,935:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:20,935:INFO:Initializing create_model()
2024-09-25 07:12:20,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:20,935:INFO:Checking exceptions
2024-09-25 07:12:20,935:INFO:Importing libraries
2024-09-25 07:12:20,935:INFO:Copying training dataset
2024-09-25 07:12:20,936:INFO:Defining folds
2024-09-25 07:12:20,936:INFO:Declaring metric variables
2024-09-25 07:12:20,936:INFO:Importing untrained model
2024-09-25 07:12:20,937:INFO:Linear Discriminant Analysis Imported successfully
2024-09-25 07:12:20,937:INFO:Starting cross validation
2024-09-25 07:12:20,937:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:21,017:INFO:Calculating mean and std
2024-09-25 07:12:21,017:INFO:Creating metrics dataframe
2024-09-25 07:12:21,018:INFO:Uploading results into container
2024-09-25 07:12:21,018:INFO:Uploading model into container now
2024-09-25 07:12:21,019:INFO:_master_model_container: 11
2024-09-25 07:12:21,019:INFO:_display_container: 2
2024-09-25 07:12:21,019:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-09-25 07:12:21,019:INFO:create_model() successfully completed......................................
2024-09-25 07:12:21,056:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:21,056:INFO:Creating metrics dataframe
2024-09-25 07:12:21,057:INFO:Initializing Extra Trees Classifier
2024-09-25 07:12:21,057:INFO:Total runtime is 0.06080551544825236 minutes
2024-09-25 07:12:21,057:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:21,057:INFO:Initializing create_model()
2024-09-25 07:12:21,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:21,057:INFO:Checking exceptions
2024-09-25 07:12:21,057:INFO:Importing libraries
2024-09-25 07:12:21,057:INFO:Copying training dataset
2024-09-25 07:12:21,059:INFO:Defining folds
2024-09-25 07:12:21,059:INFO:Declaring metric variables
2024-09-25 07:12:21,059:INFO:Importing untrained model
2024-09-25 07:12:21,059:INFO:Extra Trees Classifier Imported successfully
2024-09-25 07:12:21,059:INFO:Starting cross validation
2024-09-25 07:12:21,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:21,263:INFO:Calculating mean and std
2024-09-25 07:12:21,263:INFO:Creating metrics dataframe
2024-09-25 07:12:21,264:INFO:Uploading results into container
2024-09-25 07:12:21,265:INFO:Uploading model into container now
2024-09-25 07:12:21,265:INFO:_master_model_container: 12
2024-09-25 07:12:21,265:INFO:_display_container: 2
2024-09-25 07:12:21,265:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-09-25 07:12:21,265:INFO:create_model() successfully completed......................................
2024-09-25 07:12:21,303:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:21,303:INFO:Creating metrics dataframe
2024-09-25 07:12:21,304:INFO:Initializing Light Gradient Boosting Machine
2024-09-25 07:12:21,304:INFO:Total runtime is 0.06492785215377808 minutes
2024-09-25 07:12:21,304:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:21,304:INFO:Initializing create_model()
2024-09-25 07:12:21,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:21,305:INFO:Checking exceptions
2024-09-25 07:12:21,305:INFO:Importing libraries
2024-09-25 07:12:21,305:INFO:Copying training dataset
2024-09-25 07:12:21,306:INFO:Defining folds
2024-09-25 07:12:21,306:INFO:Declaring metric variables
2024-09-25 07:12:21,306:INFO:Importing untrained model
2024-09-25 07:12:21,306:INFO:Light Gradient Boosting Machine Imported successfully
2024-09-25 07:12:21,306:INFO:Starting cross validation
2024-09-25 07:12:21,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:24,284:INFO:Calculating mean and std
2024-09-25 07:12:24,285:INFO:Creating metrics dataframe
2024-09-25 07:12:24,285:INFO:Uploading results into container
2024-09-25 07:12:24,286:INFO:Uploading model into container now
2024-09-25 07:12:24,286:INFO:_master_model_container: 13
2024-09-25 07:12:24,286:INFO:_display_container: 2
2024-09-25 07:12:24,286:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-09-25 07:12:24,286:INFO:create_model() successfully completed......................................
2024-09-25 07:12:24,324:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:24,324:INFO:Creating metrics dataframe
2024-09-25 07:12:24,325:INFO:Initializing Dummy Classifier
2024-09-25 07:12:24,325:INFO:Total runtime is 0.11527394851048789 minutes
2024-09-25 07:12:24,325:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:24,325:INFO:Initializing create_model()
2024-09-25 07:12:24,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f8aa560>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:24,325:INFO:Checking exceptions
2024-09-25 07:12:24,325:INFO:Importing libraries
2024-09-25 07:12:24,325:INFO:Copying training dataset
2024-09-25 07:12:24,327:INFO:Defining folds
2024-09-25 07:12:24,327:INFO:Declaring metric variables
2024-09-25 07:12:24,327:INFO:Importing untrained model
2024-09-25 07:12:24,327:INFO:Dummy Classifier Imported successfully
2024-09-25 07:12:24,327:INFO:Starting cross validation
2024-09-25 07:12:24,328:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:24,366:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:12:24,368:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:12:24,369:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:12:24,374:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:12:24,375:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:12:24,375:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:12:24,377:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:12:24,384:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:12:24,390:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:12:24,398:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:12:24,408:INFO:Calculating mean and std
2024-09-25 07:12:24,409:INFO:Creating metrics dataframe
2024-09-25 07:12:24,409:INFO:Uploading results into container
2024-09-25 07:12:24,410:INFO:Uploading model into container now
2024-09-25 07:12:24,410:INFO:_master_model_container: 14
2024-09-25 07:12:24,410:INFO:_display_container: 2
2024-09-25 07:12:24,410:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-09-25 07:12:24,410:INFO:create_model() successfully completed......................................
2024-09-25 07:12:24,447:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:24,447:INFO:Creating metrics dataframe
2024-09-25 07:12:24,450:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-09-25 07:12:24,451:INFO:Initializing create_model()
2024-09-25 07:12:24,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:24,451:INFO:Checking exceptions
2024-09-25 07:12:24,451:INFO:Importing libraries
2024-09-25 07:12:24,451:INFO:Copying training dataset
2024-09-25 07:12:24,452:INFO:Defining folds
2024-09-25 07:12:24,452:INFO:Declaring metric variables
2024-09-25 07:12:24,452:INFO:Importing untrained model
2024-09-25 07:12:24,452:INFO:Declaring custom model
2024-09-25 07:12:24,453:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:12:24,453:INFO:Cross validation set to False
2024-09-25 07:12:24,453:INFO:Fitting Model
2024-09-25 07:12:24,546:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:12:24,546:INFO:create_model() successfully completed......................................
2024-09-25 07:12:24,588:INFO:_master_model_container: 14
2024-09-25 07:12:24,588:INFO:_display_container: 2
2024-09-25 07:12:24,589:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:12:24,589:INFO:compare_models() successfully completed......................................
2024-09-25 07:12:24,591:INFO:Initializing tune_model()
2024-09-25 07:12:24,591:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>)
2024-09-25 07:12:24,591:INFO:Checking exceptions
2024-09-25 07:12:24,593:INFO:Copying training dataset
2024-09-25 07:12:24,593:INFO:Checking base model
2024-09-25 07:12:24,594:INFO:Base model : Random Forest Classifier
2024-09-25 07:12:24,594:INFO:Declaring metric variables
2024-09-25 07:12:24,594:INFO:Defining Hyperparameters
2024-09-25 07:12:24,633:INFO:Tuning with n_jobs=-1
2024-09-25 07:12:24,633:INFO:Initializing RandomizedSearchCV
2024-09-25 07:12:27,321:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2024-09-25 07:12:27,321:INFO:Hyperparameter search completed
2024-09-25 07:12:27,321:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:27,321:INFO:Initializing create_model()
2024-09-25 07:12:27,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x179d2fa90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2024-09-25 07:12:27,322:INFO:Checking exceptions
2024-09-25 07:12:27,322:INFO:Importing libraries
2024-09-25 07:12:27,322:INFO:Copying training dataset
2024-09-25 07:12:27,323:INFO:Defining folds
2024-09-25 07:12:27,323:INFO:Declaring metric variables
2024-09-25 07:12:27,323:INFO:Importing untrained model
2024-09-25 07:12:27,323:INFO:Declaring custom model
2024-09-25 07:12:27,324:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:12:27,324:INFO:Starting cross validation
2024-09-25 07:12:27,324:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:27,801:INFO:Calculating mean and std
2024-09-25 07:12:27,801:INFO:Creating metrics dataframe
2024-09-25 07:12:27,802:INFO:Finalizing model
2024-09-25 07:12:28,003:INFO:Uploading results into container
2024-09-25 07:12:28,003:INFO:Uploading model into container now
2024-09-25 07:12:28,003:INFO:_master_model_container: 15
2024-09-25 07:12:28,003:INFO:_display_container: 3
2024-09-25 07:12:28,003:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:12:28,003:INFO:create_model() successfully completed......................................
2024-09-25 07:12:28,042:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:28,042:INFO:choose_better activated
2024-09-25 07:12:28,042:INFO:SubProcess create_model() called ==================================
2024-09-25 07:12:28,042:INFO:Initializing create_model()
2024-09-25 07:12:28,042:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:28,042:INFO:Checking exceptions
2024-09-25 07:12:28,043:INFO:Importing libraries
2024-09-25 07:12:28,043:INFO:Copying training dataset
2024-09-25 07:12:28,044:INFO:Defining folds
2024-09-25 07:12:28,044:INFO:Declaring metric variables
2024-09-25 07:12:28,044:INFO:Importing untrained model
2024-09-25 07:12:28,044:INFO:Declaring custom model
2024-09-25 07:12:28,045:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:12:28,045:INFO:Starting cross validation
2024-09-25 07:12:28,045:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:12:28,294:INFO:Calculating mean and std
2024-09-25 07:12:28,294:INFO:Creating metrics dataframe
2024-09-25 07:12:28,295:INFO:Finalizing model
2024-09-25 07:12:28,389:INFO:Uploading results into container
2024-09-25 07:12:28,389:INFO:Uploading model into container now
2024-09-25 07:12:28,389:INFO:_master_model_container: 16
2024-09-25 07:12:28,389:INFO:_display_container: 4
2024-09-25 07:12:28,389:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:12:28,389:INFO:create_model() successfully completed......................................
2024-09-25 07:12:28,427:INFO:SubProcess create_model() end ==================================
2024-09-25 07:12:28,427:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8202
2024-09-25 07:12:28,427:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8235
2024-09-25 07:12:28,428:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2024-09-25 07:12:28,428:INFO:choose_better completed
2024-09-25 07:12:28,431:INFO:_master_model_container: 16
2024-09-25 07:12:28,431:INFO:_display_container: 3
2024-09-25 07:12:28,432:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:12:28,432:INFO:tune_model() successfully completed......................................
2024-09-25 07:12:28,470:INFO:Initializing finalize_model()
2024-09-25 07:12:28,470:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-09-25 07:12:28,470:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:12:28,472:INFO:Initializing create_model()
2024-09-25 07:12:28,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17991bf10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:12:28,472:INFO:Checking exceptions
2024-09-25 07:12:28,472:INFO:Importing libraries
2024-09-25 07:12:28,472:INFO:Copying training dataset
2024-09-25 07:12:28,472:INFO:Defining folds
2024-09-25 07:12:28,472:INFO:Declaring metric variables
2024-09-25 07:12:28,472:INFO:Importing untrained model
2024-09-25 07:12:28,472:INFO:Declaring custom model
2024-09-25 07:12:28,472:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:12:28,473:INFO:Cross validation set to False
2024-09-25 07:12:28,473:INFO:Fitting Model
2024-09-25 07:12:28,673:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:12:28,673:INFO:create_model() successfully completed......................................
2024-09-25 07:12:28,710:INFO:_master_model_container: 16
2024-09-25 07:12:28,710:INFO:_display_container: 3
2024-09-25 07:12:28,718:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:12:28,718:INFO:finalize_model() successfully completed......................................
2024-09-25 07:12:28,769:INFO:Initializing save_model()
2024-09-25 07:12:28,769:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-25 07:12:28,769:INFO:Adding model into prep_pipe
2024-09-25 07:12:28,769:WARNING:Only Model saved as it was a pipeline.
2024-09-25 07:12:28,816:INFO:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model.pkl saved in current working directory
2024-09-25 07:12:28,823:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:12:28,823:INFO:save_model() successfully completed......................................
2024-09-25 07:26:42,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:26:42,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:26:42,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:26:42,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:30:48,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:30:48,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:30:48,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:30:48,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:30:50,705:INFO:PyCaret ClassificationExperiment
2024-09-25 07:30:50,705:INFO:Logging name: clf-default-name
2024-09-25 07:30:50,705:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-25 07:30:50,705:INFO:version 3.3.2
2024-09-25 07:30:50,705:INFO:Initializing setup()
2024-09-25 07:30:50,705:INFO:self.USI: f870
2024-09-25 07:30:50,705:INFO:self._variable_keys: {'_ml_usecase', 'html_param', 'exp_id', 'gpu_param', 'fold_generator', 'target_param', 'memory', 'y', 'fold_groups_param', 'X', 'fold_shuffle_param', 'n_jobs_param', 'is_multiclass', 'log_plots_param', 'pipeline', 'gpu_n_jobs_param', 'data', 'y_train', 'X_test', 'logging_param', 'y_test', 'X_train', 'fix_imbalance', '_available_plots', 'idx', 'USI', 'seed', 'exp_name_log'}
2024-09-25 07:30:50,705:INFO:Checking environment
2024-09-25 07:30:50,705:INFO:python_version: 3.10.12
2024-09-25 07:30:50,705:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-25 07:30:50,705:INFO:machine: arm64
2024-09-25 07:30:50,730:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:30:50,731:INFO:Memory: svmem(total=17179869184, available=3788079104, percent=78.0, used=6431391744, free=106070016, active=3692986368, inactive=3609821184, wired=2738405376)
2024-09-25 07:30:50,731:INFO:Physical Core: 10
2024-09-25 07:30:50,731:INFO:Logical Core: 10
2024-09-25 07:30:50,731:INFO:Checking libraries
2024-09-25 07:30:50,731:INFO:System:
2024-09-25 07:30:50,731:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-25 07:30:50,731:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-25 07:30:50,731:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:30:50,731:INFO:PyCaret required dependencies:
2024-09-25 07:30:50,751:INFO:                 pip: 23.0.1
2024-09-25 07:30:50,751:INFO:          setuptools: 65.5.0
2024-09-25 07:30:50,751:INFO:             pycaret: 3.3.2
2024-09-25 07:30:50,751:INFO:             IPython: 8.27.0
2024-09-25 07:30:50,751:INFO:          ipywidgets: 8.1.5
2024-09-25 07:30:50,751:INFO:                tqdm: 4.66.5
2024-09-25 07:30:50,751:INFO:               numpy: 1.26.4
2024-09-25 07:30:50,751:INFO:              pandas: 2.1.4
2024-09-25 07:30:50,751:INFO:              jinja2: 3.1.4
2024-09-25 07:30:50,751:INFO:               scipy: 1.11.4
2024-09-25 07:30:50,751:INFO:              joblib: 1.3.2
2024-09-25 07:30:50,751:INFO:             sklearn: 1.4.2
2024-09-25 07:30:50,751:INFO:                pyod: 2.0.2
2024-09-25 07:30:50,751:INFO:            imblearn: 0.12.3
2024-09-25 07:30:50,751:INFO:   category_encoders: 2.6.3
2024-09-25 07:30:50,751:INFO:            lightgbm: 4.5.0
2024-09-25 07:30:50,751:INFO:               numba: 0.60.0
2024-09-25 07:30:50,751:INFO:            requests: 2.32.3
2024-09-25 07:30:50,751:INFO:          matplotlib: 3.7.5
2024-09-25 07:30:50,751:INFO:          scikitplot: 0.3.7
2024-09-25 07:30:50,751:INFO:         yellowbrick: 1.5
2024-09-25 07:30:50,751:INFO:              plotly: 5.24.1
2024-09-25 07:30:50,751:INFO:    plotly-resampler: Not installed
2024-09-25 07:30:50,751:INFO:             kaleido: 0.2.1
2024-09-25 07:30:50,751:INFO:           schemdraw: 0.15
2024-09-25 07:30:50,751:INFO:         statsmodels: 0.14.3
2024-09-25 07:30:50,751:INFO:              sktime: 0.26.0
2024-09-25 07:30:50,751:INFO:               tbats: 1.1.3
2024-09-25 07:30:50,751:INFO:            pmdarima: 2.0.4
2024-09-25 07:30:50,751:INFO:              psutil: 6.0.0
2024-09-25 07:30:50,751:INFO:          markupsafe: 2.1.5
2024-09-25 07:30:50,751:INFO:             pickle5: Not installed
2024-09-25 07:30:50,751:INFO:         cloudpickle: 3.0.0
2024-09-25 07:30:50,751:INFO:         deprecation: 2.1.0
2024-09-25 07:30:50,751:INFO:              xxhash: 3.5.0
2024-09-25 07:30:50,752:INFO:           wurlitzer: 3.1.1
2024-09-25 07:30:50,752:INFO:PyCaret optional dependencies:
2024-09-25 07:30:50,758:INFO:                shap: 0.46.0
2024-09-25 07:30:50,758:INFO:           interpret: Not installed
2024-09-25 07:30:50,758:INFO:                umap: Not installed
2024-09-25 07:30:50,758:INFO:     ydata_profiling: 4.10.0
2024-09-25 07:30:50,758:INFO:  explainerdashboard: Not installed
2024-09-25 07:30:50,758:INFO:             autoviz: Not installed
2024-09-25 07:30:50,758:INFO:           fairlearn: Not installed
2024-09-25 07:30:50,758:INFO:          deepchecks: Not installed
2024-09-25 07:30:50,758:INFO:             xgboost: Not installed
2024-09-25 07:30:50,758:INFO:            catboost: Not installed
2024-09-25 07:30:50,758:INFO:              kmodes: Not installed
2024-09-25 07:30:50,758:INFO:             mlxtend: Not installed
2024-09-25 07:30:50,758:INFO:       statsforecast: Not installed
2024-09-25 07:30:50,758:INFO:        tune_sklearn: Not installed
2024-09-25 07:30:50,758:INFO:                 ray: Not installed
2024-09-25 07:30:50,758:INFO:            hyperopt: Not installed
2024-09-25 07:30:50,758:INFO:              optuna: Not installed
2024-09-25 07:30:50,758:INFO:               skopt: Not installed
2024-09-25 07:30:50,758:INFO:              mlflow: Not installed
2024-09-25 07:30:50,758:INFO:              gradio: Not installed
2024-09-25 07:30:50,758:INFO:             fastapi: Not installed
2024-09-25 07:30:50,758:INFO:             uvicorn: Not installed
2024-09-25 07:30:50,758:INFO:              m2cgen: Not installed
2024-09-25 07:30:50,758:INFO:           evidently: Not installed
2024-09-25 07:30:50,758:INFO:               fugue: Not installed
2024-09-25 07:30:50,758:INFO:           streamlit: Not installed
2024-09-25 07:30:50,758:INFO:             prophet: Not installed
2024-09-25 07:30:50,758:INFO:None
2024-09-25 07:30:50,758:INFO:Set up data.
2024-09-25 07:30:50,764:INFO:Set up folding strategy.
2024-09-25 07:30:50,764:INFO:Set up train/test split.
2024-09-25 07:30:50,768:INFO:Set up index.
2024-09-25 07:30:50,768:INFO:Assigning column types.
2024-09-25 07:30:50,770:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-25 07:30:50,789:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:30:50,791:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:30:50,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,826:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:30:50,827:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:30:50,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,839:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-25 07:30:50,858:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:30:50,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,890:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:30:50,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,903:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-25 07:30:50,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:50,967:INFO:Preparing preprocessing pipeline...
2024-09-25 07:30:50,968:INFO:Set up simple imputation.
2024-09-25 07:30:50,969:INFO:Set up encoding of categorical features.
2024-09-25 07:30:50,969:INFO:Set up feature normalization.
2024-09-25 07:30:50,996:INFO:Finished creating preprocessing pipeline.
2024-09-25 07:30:50,999:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Sex',
                                             'Age', 'SibSp', 'Parch', 'Fare',
                                             'FamilySize'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-25 07:30:50,999:INFO:Creating final display dataframe.
2024-09-25 07:30:51,070:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 13)
4        Transformed data shape         (891, 12)
5   Transformed train set shape         (623, 12)
6    Transformed test set shape         (268, 12)
7               Ignore features                 3
8              Numeric features                 8
9          Categorical features                 1
10     Rows with missing values             77.1%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              f870
2024-09-25 07:30:51,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:51,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:51,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:51,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:51,136:INFO:setup() successfully completed in 0.43s...............
2024-09-25 07:30:52,495:INFO:PyCaret ClassificationExperiment
2024-09-25 07:30:52,495:INFO:Logging name: clf-default-name
2024-09-25 07:30:52,495:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-25 07:30:52,495:INFO:version 3.3.2
2024-09-25 07:30:52,495:INFO:Initializing setup()
2024-09-25 07:30:52,495:INFO:self.USI: 1611
2024-09-25 07:30:52,495:INFO:self._variable_keys: {'_ml_usecase', 'html_param', 'exp_id', 'gpu_param', 'fold_generator', 'target_param', 'memory', 'y', 'fold_groups_param', 'X', 'fold_shuffle_param', 'n_jobs_param', 'is_multiclass', 'log_plots_param', 'pipeline', 'gpu_n_jobs_param', 'data', 'y_train', 'X_test', 'logging_param', 'y_test', 'X_train', 'fix_imbalance', '_available_plots', 'idx', 'USI', 'seed', 'exp_name_log'}
2024-09-25 07:30:52,495:INFO:Checking environment
2024-09-25 07:30:52,495:INFO:python_version: 3.10.12
2024-09-25 07:30:52,495:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-25 07:30:52,495:INFO:machine: arm64
2024-09-25 07:30:52,495:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:30:52,495:INFO:Memory: svmem(total=17179869184, available=3810902016, percent=77.8, used=6410747904, free=130203648, active=3687743488, inactive=3608035328, wired=2723004416)
2024-09-25 07:30:52,495:INFO:Physical Core: 10
2024-09-25 07:30:52,496:INFO:Logical Core: 10
2024-09-25 07:30:52,496:INFO:Checking libraries
2024-09-25 07:30:52,496:INFO:System:
2024-09-25 07:30:52,496:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-25 07:30:52,496:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-25 07:30:52,496:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:30:52,496:INFO:PyCaret required dependencies:
2024-09-25 07:30:52,496:INFO:                 pip: 23.0.1
2024-09-25 07:30:52,496:INFO:          setuptools: 65.5.0
2024-09-25 07:30:52,496:INFO:             pycaret: 3.3.2
2024-09-25 07:30:52,496:INFO:             IPython: 8.27.0
2024-09-25 07:30:52,496:INFO:          ipywidgets: 8.1.5
2024-09-25 07:30:52,496:INFO:                tqdm: 4.66.5
2024-09-25 07:30:52,496:INFO:               numpy: 1.26.4
2024-09-25 07:30:52,496:INFO:              pandas: 2.1.4
2024-09-25 07:30:52,496:INFO:              jinja2: 3.1.4
2024-09-25 07:30:52,496:INFO:               scipy: 1.11.4
2024-09-25 07:30:52,496:INFO:              joblib: 1.3.2
2024-09-25 07:30:52,496:INFO:             sklearn: 1.4.2
2024-09-25 07:30:52,496:INFO:                pyod: 2.0.2
2024-09-25 07:30:52,496:INFO:            imblearn: 0.12.3
2024-09-25 07:30:52,496:INFO:   category_encoders: 2.6.3
2024-09-25 07:30:52,496:INFO:            lightgbm: 4.5.0
2024-09-25 07:30:52,496:INFO:               numba: 0.60.0
2024-09-25 07:30:52,496:INFO:            requests: 2.32.3
2024-09-25 07:30:52,496:INFO:          matplotlib: 3.7.5
2024-09-25 07:30:52,496:INFO:          scikitplot: 0.3.7
2024-09-25 07:30:52,496:INFO:         yellowbrick: 1.5
2024-09-25 07:30:52,496:INFO:              plotly: 5.24.1
2024-09-25 07:30:52,496:INFO:    plotly-resampler: Not installed
2024-09-25 07:30:52,496:INFO:             kaleido: 0.2.1
2024-09-25 07:30:52,496:INFO:           schemdraw: 0.15
2024-09-25 07:30:52,496:INFO:         statsmodels: 0.14.3
2024-09-25 07:30:52,496:INFO:              sktime: 0.26.0
2024-09-25 07:30:52,496:INFO:               tbats: 1.1.3
2024-09-25 07:30:52,496:INFO:            pmdarima: 2.0.4
2024-09-25 07:30:52,496:INFO:              psutil: 6.0.0
2024-09-25 07:30:52,497:INFO:          markupsafe: 2.1.5
2024-09-25 07:30:52,497:INFO:             pickle5: Not installed
2024-09-25 07:30:52,497:INFO:         cloudpickle: 3.0.0
2024-09-25 07:30:52,497:INFO:         deprecation: 2.1.0
2024-09-25 07:30:52,497:INFO:              xxhash: 3.5.0
2024-09-25 07:30:52,497:INFO:           wurlitzer: 3.1.1
2024-09-25 07:30:52,497:INFO:PyCaret optional dependencies:
2024-09-25 07:30:52,497:INFO:                shap: 0.46.0
2024-09-25 07:30:52,497:INFO:           interpret: Not installed
2024-09-25 07:30:52,497:INFO:                umap: Not installed
2024-09-25 07:30:52,497:INFO:     ydata_profiling: 4.10.0
2024-09-25 07:30:52,497:INFO:  explainerdashboard: Not installed
2024-09-25 07:30:52,497:INFO:             autoviz: Not installed
2024-09-25 07:30:52,497:INFO:           fairlearn: Not installed
2024-09-25 07:30:52,497:INFO:          deepchecks: Not installed
2024-09-25 07:30:52,497:INFO:             xgboost: Not installed
2024-09-25 07:30:52,497:INFO:            catboost: Not installed
2024-09-25 07:30:52,497:INFO:              kmodes: Not installed
2024-09-25 07:30:52,497:INFO:             mlxtend: Not installed
2024-09-25 07:30:52,497:INFO:       statsforecast: Not installed
2024-09-25 07:30:52,497:INFO:        tune_sklearn: Not installed
2024-09-25 07:30:52,497:INFO:                 ray: Not installed
2024-09-25 07:30:52,497:INFO:            hyperopt: Not installed
2024-09-25 07:30:52,497:INFO:              optuna: Not installed
2024-09-25 07:30:52,497:INFO:               skopt: Not installed
2024-09-25 07:30:52,497:INFO:              mlflow: Not installed
2024-09-25 07:30:52,497:INFO:              gradio: Not installed
2024-09-25 07:30:52,497:INFO:             fastapi: Not installed
2024-09-25 07:30:52,497:INFO:             uvicorn: Not installed
2024-09-25 07:30:52,497:INFO:              m2cgen: Not installed
2024-09-25 07:30:52,497:INFO:           evidently: Not installed
2024-09-25 07:30:52,497:INFO:               fugue: Not installed
2024-09-25 07:30:52,497:INFO:           streamlit: Not installed
2024-09-25 07:30:52,497:INFO:             prophet: Not installed
2024-09-25 07:30:52,497:INFO:None
2024-09-25 07:30:52,497:INFO:Set up data.
2024-09-25 07:30:52,503:INFO:Set up folding strategy.
2024-09-25 07:30:52,503:INFO:Set up train/test split.
2024-09-25 07:30:52,506:INFO:Set up index.
2024-09-25 07:30:52,507:INFO:Assigning column types.
2024-09-25 07:30:52,508:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-25 07:30:52,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:30:52,532:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:30:52,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,566:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:30:52,566:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:30:52,578:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,578:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-25 07:30:52,597:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:30:52,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,628:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:30:52,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,640:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-25 07:30:52,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,703:INFO:Preparing preprocessing pipeline...
2024-09-25 07:30:52,704:INFO:Set up simple imputation.
2024-09-25 07:30:52,705:INFO:Set up encoding of ordinal features.
2024-09-25 07:30:52,705:INFO:Set up encoding of categorical features.
2024-09-25 07:30:52,705:INFO:Set up feature normalization.
2024-09-25 07:30:52,735:INFO:Finished creating preprocessing pipeline.
2024-09-25 07:30:52,742:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-25 07:30:52,742:INFO:Creating final display dataframe.
2024-09-25 07:30:52,835:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              1611
2024-09-25 07:30:52,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:30:52,906:INFO:setup() successfully completed in 0.41s...............
2024-09-25 07:30:52,906:INFO:Initializing compare_models()
2024-09-25 07:30:52,906:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-09-25 07:30:52,906:INFO:Checking exceptions
2024-09-25 07:30:52,907:INFO:Preparing display monitor
2024-09-25 07:30:52,917:INFO:Initializing Logistic Regression
2024-09-25 07:30:52,917:INFO:Total runtime is 6.035963694254557e-06 minutes
2024-09-25 07:30:52,917:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:52,917:INFO:Initializing create_model()
2024-09-25 07:30:52,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:52,917:INFO:Checking exceptions
2024-09-25 07:30:52,917:INFO:Importing libraries
2024-09-25 07:30:52,917:INFO:Copying training dataset
2024-09-25 07:30:52,919:INFO:Defining folds
2024-09-25 07:30:52,919:INFO:Declaring metric variables
2024-09-25 07:30:52,919:INFO:Importing untrained model
2024-09-25 07:30:52,920:INFO:Logistic Regression Imported successfully
2024-09-25 07:30:52,920:INFO:Starting cross validation
2024-09-25 07:30:52,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:55,053:INFO:Calculating mean and std
2024-09-25 07:30:55,054:INFO:Creating metrics dataframe
2024-09-25 07:30:55,057:INFO:Uploading results into container
2024-09-25 07:30:55,057:INFO:Uploading model into container now
2024-09-25 07:30:55,058:INFO:_master_model_container: 1
2024-09-25 07:30:55,058:INFO:_display_container: 2
2024-09-25 07:30:55,059:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-09-25 07:30:55,059:INFO:create_model() successfully completed......................................
2024-09-25 07:30:55,142:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:55,142:INFO:Creating metrics dataframe
2024-09-25 07:30:55,143:INFO:Initializing K Neighbors Classifier
2024-09-25 07:30:55,143:INFO:Total runtime is 0.0371138334274292 minutes
2024-09-25 07:30:55,144:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:55,144:INFO:Initializing create_model()
2024-09-25 07:30:55,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:55,144:INFO:Checking exceptions
2024-09-25 07:30:55,144:INFO:Importing libraries
2024-09-25 07:30:55,144:INFO:Copying training dataset
2024-09-25 07:30:55,146:INFO:Defining folds
2024-09-25 07:30:55,146:INFO:Declaring metric variables
2024-09-25 07:30:55,146:INFO:Importing untrained model
2024-09-25 07:30:55,147:INFO:K Neighbors Classifier Imported successfully
2024-09-25 07:30:55,147:INFO:Starting cross validation
2024-09-25 07:30:55,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:55,257:INFO:Calculating mean and std
2024-09-25 07:30:55,258:INFO:Creating metrics dataframe
2024-09-25 07:30:55,258:INFO:Uploading results into container
2024-09-25 07:30:55,259:INFO:Uploading model into container now
2024-09-25 07:30:55,259:INFO:_master_model_container: 2
2024-09-25 07:30:55,259:INFO:_display_container: 2
2024-09-25 07:30:55,259:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-09-25 07:30:55,259:INFO:create_model() successfully completed......................................
2024-09-25 07:30:55,301:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:55,301:INFO:Creating metrics dataframe
2024-09-25 07:30:55,302:INFO:Initializing Naive Bayes
2024-09-25 07:30:55,302:INFO:Total runtime is 0.03976544936498006 minutes
2024-09-25 07:30:55,303:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:55,303:INFO:Initializing create_model()
2024-09-25 07:30:55,303:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:55,303:INFO:Checking exceptions
2024-09-25 07:30:55,303:INFO:Importing libraries
2024-09-25 07:30:55,303:INFO:Copying training dataset
2024-09-25 07:30:55,304:INFO:Defining folds
2024-09-25 07:30:55,304:INFO:Declaring metric variables
2024-09-25 07:30:55,304:INFO:Importing untrained model
2024-09-25 07:30:55,304:INFO:Naive Bayes Imported successfully
2024-09-25 07:30:55,304:INFO:Starting cross validation
2024-09-25 07:30:55,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:55,389:INFO:Calculating mean and std
2024-09-25 07:30:55,389:INFO:Creating metrics dataframe
2024-09-25 07:30:55,390:INFO:Uploading results into container
2024-09-25 07:30:55,390:INFO:Uploading model into container now
2024-09-25 07:30:55,390:INFO:_master_model_container: 3
2024-09-25 07:30:55,390:INFO:_display_container: 2
2024-09-25 07:30:55,391:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-09-25 07:30:55,391:INFO:create_model() successfully completed......................................
2024-09-25 07:30:55,429:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:55,429:INFO:Creating metrics dataframe
2024-09-25 07:30:55,431:INFO:Initializing Decision Tree Classifier
2024-09-25 07:30:55,431:INFO:Total runtime is 0.0419015367825826 minutes
2024-09-25 07:30:55,431:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:55,431:INFO:Initializing create_model()
2024-09-25 07:30:55,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:55,431:INFO:Checking exceptions
2024-09-25 07:30:55,431:INFO:Importing libraries
2024-09-25 07:30:55,431:INFO:Copying training dataset
2024-09-25 07:30:55,432:INFO:Defining folds
2024-09-25 07:30:55,432:INFO:Declaring metric variables
2024-09-25 07:30:55,433:INFO:Importing untrained model
2024-09-25 07:30:55,433:INFO:Decision Tree Classifier Imported successfully
2024-09-25 07:30:55,433:INFO:Starting cross validation
2024-09-25 07:30:55,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:55,510:INFO:Calculating mean and std
2024-09-25 07:30:55,511:INFO:Creating metrics dataframe
2024-09-25 07:30:55,512:INFO:Uploading results into container
2024-09-25 07:30:55,512:INFO:Uploading model into container now
2024-09-25 07:30:55,512:INFO:_master_model_container: 4
2024-09-25 07:30:55,512:INFO:_display_container: 2
2024-09-25 07:30:55,512:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-09-25 07:30:55,512:INFO:create_model() successfully completed......................................
2024-09-25 07:30:55,553:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:55,554:INFO:Creating metrics dataframe
2024-09-25 07:30:55,555:INFO:Initializing SVM - Linear Kernel
2024-09-25 07:30:55,555:INFO:Total runtime is 0.043973867098490396 minutes
2024-09-25 07:30:55,555:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:55,555:INFO:Initializing create_model()
2024-09-25 07:30:55,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:55,555:INFO:Checking exceptions
2024-09-25 07:30:55,555:INFO:Importing libraries
2024-09-25 07:30:55,555:INFO:Copying training dataset
2024-09-25 07:30:55,557:INFO:Defining folds
2024-09-25 07:30:55,557:INFO:Declaring metric variables
2024-09-25 07:30:55,557:INFO:Importing untrained model
2024-09-25 07:30:55,557:INFO:SVM - Linear Kernel Imported successfully
2024-09-25 07:30:55,557:INFO:Starting cross validation
2024-09-25 07:30:55,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:55,637:INFO:Calculating mean and std
2024-09-25 07:30:55,638:INFO:Creating metrics dataframe
2024-09-25 07:30:55,638:INFO:Uploading results into container
2024-09-25 07:30:55,639:INFO:Uploading model into container now
2024-09-25 07:30:55,639:INFO:_master_model_container: 5
2024-09-25 07:30:55,639:INFO:_display_container: 2
2024-09-25 07:30:55,639:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-09-25 07:30:55,639:INFO:create_model() successfully completed......................................
2024-09-25 07:30:55,678:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:55,678:INFO:Creating metrics dataframe
2024-09-25 07:30:55,680:INFO:Initializing Ridge Classifier
2024-09-25 07:30:55,680:INFO:Total runtime is 0.04605246782302856 minutes
2024-09-25 07:30:55,680:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:55,680:INFO:Initializing create_model()
2024-09-25 07:30:55,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:55,680:INFO:Checking exceptions
2024-09-25 07:30:55,680:INFO:Importing libraries
2024-09-25 07:30:55,680:INFO:Copying training dataset
2024-09-25 07:30:55,681:INFO:Defining folds
2024-09-25 07:30:55,681:INFO:Declaring metric variables
2024-09-25 07:30:55,681:INFO:Importing untrained model
2024-09-25 07:30:55,682:INFO:Ridge Classifier Imported successfully
2024-09-25 07:30:55,682:INFO:Starting cross validation
2024-09-25 07:30:55,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:55,771:INFO:Calculating mean and std
2024-09-25 07:30:55,771:INFO:Creating metrics dataframe
2024-09-25 07:30:55,772:INFO:Uploading results into container
2024-09-25 07:30:55,773:INFO:Uploading model into container now
2024-09-25 07:30:55,773:INFO:_master_model_container: 6
2024-09-25 07:30:55,773:INFO:_display_container: 2
2024-09-25 07:30:55,773:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-09-25 07:30:55,773:INFO:create_model() successfully completed......................................
2024-09-25 07:30:55,812:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:55,812:INFO:Creating metrics dataframe
2024-09-25 07:30:55,813:INFO:Initializing Random Forest Classifier
2024-09-25 07:30:55,813:INFO:Total runtime is 0.04828066825866699 minutes
2024-09-25 07:30:55,813:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:55,814:INFO:Initializing create_model()
2024-09-25 07:30:55,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:55,814:INFO:Checking exceptions
2024-09-25 07:30:55,814:INFO:Importing libraries
2024-09-25 07:30:55,814:INFO:Copying training dataset
2024-09-25 07:30:55,815:INFO:Defining folds
2024-09-25 07:30:55,815:INFO:Declaring metric variables
2024-09-25 07:30:55,815:INFO:Importing untrained model
2024-09-25 07:30:55,815:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:30:55,815:INFO:Starting cross validation
2024-09-25 07:30:55,816:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:56,070:INFO:Calculating mean and std
2024-09-25 07:30:56,070:INFO:Creating metrics dataframe
2024-09-25 07:30:56,071:INFO:Uploading results into container
2024-09-25 07:30:56,071:INFO:Uploading model into container now
2024-09-25 07:30:56,072:INFO:_master_model_container: 7
2024-09-25 07:30:56,072:INFO:_display_container: 2
2024-09-25 07:30:56,072:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:30:56,072:INFO:create_model() successfully completed......................................
2024-09-25 07:30:56,112:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:56,112:INFO:Creating metrics dataframe
2024-09-25 07:30:56,113:INFO:Initializing Quadratic Discriminant Analysis
2024-09-25 07:30:56,113:INFO:Total runtime is 0.05327606995900472 minutes
2024-09-25 07:30:56,113:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:56,113:INFO:Initializing create_model()
2024-09-25 07:30:56,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:56,113:INFO:Checking exceptions
2024-09-25 07:30:56,113:INFO:Importing libraries
2024-09-25 07:30:56,113:INFO:Copying training dataset
2024-09-25 07:30:56,115:INFO:Defining folds
2024-09-25 07:30:56,115:INFO:Declaring metric variables
2024-09-25 07:30:56,115:INFO:Importing untrained model
2024-09-25 07:30:56,115:INFO:Quadratic Discriminant Analysis Imported successfully
2024-09-25 07:30:56,115:INFO:Starting cross validation
2024-09-25 07:30:56,116:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:56,144:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:30:56,144:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:30:56,153:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:30:56,153:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:30:56,155:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:30:56,155:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:30:56,161:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:30:56,163:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:30:56,171:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:30:56,182:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:30:56,200:INFO:Calculating mean and std
2024-09-25 07:30:56,200:INFO:Creating metrics dataframe
2024-09-25 07:30:56,201:INFO:Uploading results into container
2024-09-25 07:30:56,201:INFO:Uploading model into container now
2024-09-25 07:30:56,202:INFO:_master_model_container: 8
2024-09-25 07:30:56,202:INFO:_display_container: 2
2024-09-25 07:30:56,202:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-09-25 07:30:56,202:INFO:create_model() successfully completed......................................
2024-09-25 07:30:56,250:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:56,250:INFO:Creating metrics dataframe
2024-09-25 07:30:56,252:INFO:Initializing Ada Boost Classifier
2024-09-25 07:30:56,252:INFO:Total runtime is 0.05558375120162964 minutes
2024-09-25 07:30:56,252:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:56,252:INFO:Initializing create_model()
2024-09-25 07:30:56,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:56,252:INFO:Checking exceptions
2024-09-25 07:30:56,252:INFO:Importing libraries
2024-09-25 07:30:56,252:INFO:Copying training dataset
2024-09-25 07:30:56,253:INFO:Defining folds
2024-09-25 07:30:56,253:INFO:Declaring metric variables
2024-09-25 07:30:56,253:INFO:Importing untrained model
2024-09-25 07:30:56,253:INFO:Ada Boost Classifier Imported successfully
2024-09-25 07:30:56,253:INFO:Starting cross validation
2024-09-25 07:30:56,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:56,284:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:30:56,284:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:30:56,285:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:30:56,287:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:30:56,294:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:30:56,295:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:30:56,296:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:30:56,301:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:30:56,305:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:30:56,331:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:30:56,398:INFO:Calculating mean and std
2024-09-25 07:30:56,399:INFO:Creating metrics dataframe
2024-09-25 07:30:56,400:INFO:Uploading results into container
2024-09-25 07:30:56,400:INFO:Uploading model into container now
2024-09-25 07:30:56,400:INFO:_master_model_container: 9
2024-09-25 07:30:56,400:INFO:_display_container: 2
2024-09-25 07:30:56,400:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-09-25 07:30:56,400:INFO:create_model() successfully completed......................................
2024-09-25 07:30:56,440:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:56,440:INFO:Creating metrics dataframe
2024-09-25 07:30:56,441:INFO:Initializing Gradient Boosting Classifier
2024-09-25 07:30:56,441:INFO:Total runtime is 0.05874054829279582 minutes
2024-09-25 07:30:56,441:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:56,441:INFO:Initializing create_model()
2024-09-25 07:30:56,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:56,441:INFO:Checking exceptions
2024-09-25 07:30:56,441:INFO:Importing libraries
2024-09-25 07:30:56,441:INFO:Copying training dataset
2024-09-25 07:30:56,443:INFO:Defining folds
2024-09-25 07:30:56,443:INFO:Declaring metric variables
2024-09-25 07:30:56,443:INFO:Importing untrained model
2024-09-25 07:30:56,443:INFO:Gradient Boosting Classifier Imported successfully
2024-09-25 07:30:56,443:INFO:Starting cross validation
2024-09-25 07:30:56,443:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:56,606:INFO:Calculating mean and std
2024-09-25 07:30:56,607:INFO:Creating metrics dataframe
2024-09-25 07:30:56,608:INFO:Uploading results into container
2024-09-25 07:30:56,608:INFO:Uploading model into container now
2024-09-25 07:30:56,608:INFO:_master_model_container: 10
2024-09-25 07:30:56,608:INFO:_display_container: 2
2024-09-25 07:30:56,608:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-09-25 07:30:56,608:INFO:create_model() successfully completed......................................
2024-09-25 07:30:56,653:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:56,654:INFO:Creating metrics dataframe
2024-09-25 07:30:56,655:INFO:Initializing Linear Discriminant Analysis
2024-09-25 07:30:56,655:INFO:Total runtime is 0.062303837140401205 minutes
2024-09-25 07:30:56,655:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:56,655:INFO:Initializing create_model()
2024-09-25 07:30:56,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:56,655:INFO:Checking exceptions
2024-09-25 07:30:56,655:INFO:Importing libraries
2024-09-25 07:30:56,655:INFO:Copying training dataset
2024-09-25 07:30:56,656:INFO:Defining folds
2024-09-25 07:30:56,656:INFO:Declaring metric variables
2024-09-25 07:30:56,657:INFO:Importing untrained model
2024-09-25 07:30:56,657:INFO:Linear Discriminant Analysis Imported successfully
2024-09-25 07:30:56,657:INFO:Starting cross validation
2024-09-25 07:30:56,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:56,728:INFO:Calculating mean and std
2024-09-25 07:30:56,728:INFO:Creating metrics dataframe
2024-09-25 07:30:56,729:INFO:Uploading results into container
2024-09-25 07:30:56,729:INFO:Uploading model into container now
2024-09-25 07:30:56,730:INFO:_master_model_container: 11
2024-09-25 07:30:56,730:INFO:_display_container: 2
2024-09-25 07:30:56,730:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-09-25 07:30:56,730:INFO:create_model() successfully completed......................................
2024-09-25 07:30:56,768:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:56,768:INFO:Creating metrics dataframe
2024-09-25 07:30:56,770:INFO:Initializing Extra Trees Classifier
2024-09-25 07:30:56,770:INFO:Total runtime is 0.06421709855397542 minutes
2024-09-25 07:30:56,770:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:56,770:INFO:Initializing create_model()
2024-09-25 07:30:56,770:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:56,770:INFO:Checking exceptions
2024-09-25 07:30:56,770:INFO:Importing libraries
2024-09-25 07:30:56,770:INFO:Copying training dataset
2024-09-25 07:30:56,771:INFO:Defining folds
2024-09-25 07:30:56,771:INFO:Declaring metric variables
2024-09-25 07:30:56,771:INFO:Importing untrained model
2024-09-25 07:30:56,771:INFO:Extra Trees Classifier Imported successfully
2024-09-25 07:30:56,772:INFO:Starting cross validation
2024-09-25 07:30:56,772:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:56,984:INFO:Calculating mean and std
2024-09-25 07:30:56,985:INFO:Creating metrics dataframe
2024-09-25 07:30:56,986:INFO:Uploading results into container
2024-09-25 07:30:56,986:INFO:Uploading model into container now
2024-09-25 07:30:56,986:INFO:_master_model_container: 12
2024-09-25 07:30:56,986:INFO:_display_container: 2
2024-09-25 07:30:56,987:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-09-25 07:30:56,987:INFO:create_model() successfully completed......................................
2024-09-25 07:30:57,027:INFO:SubProcess create_model() end ==================================
2024-09-25 07:30:57,028:INFO:Creating metrics dataframe
2024-09-25 07:30:57,029:INFO:Initializing Light Gradient Boosting Machine
2024-09-25 07:30:57,029:INFO:Total runtime is 0.06853711605072021 minutes
2024-09-25 07:30:57,029:INFO:SubProcess create_model() called ==================================
2024-09-25 07:30:57,029:INFO:Initializing create_model()
2024-09-25 07:30:57,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:30:57,029:INFO:Checking exceptions
2024-09-25 07:30:57,029:INFO:Importing libraries
2024-09-25 07:30:57,029:INFO:Copying training dataset
2024-09-25 07:30:57,030:INFO:Defining folds
2024-09-25 07:30:57,030:INFO:Declaring metric variables
2024-09-25 07:30:57,031:INFO:Importing untrained model
2024-09-25 07:30:57,031:INFO:Light Gradient Boosting Machine Imported successfully
2024-09-25 07:30:57,031:INFO:Starting cross validation
2024-09-25 07:30:57,031:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:30:59,962:INFO:Calculating mean and std
2024-09-25 07:30:59,962:INFO:Creating metrics dataframe
2024-09-25 07:30:59,963:INFO:Uploading results into container
2024-09-25 07:30:59,963:INFO:Uploading model into container now
2024-09-25 07:30:59,963:INFO:_master_model_container: 13
2024-09-25 07:30:59,963:INFO:_display_container: 2
2024-09-25 07:30:59,964:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-09-25 07:30:59,964:INFO:create_model() successfully completed......................................
2024-09-25 07:31:00,003:INFO:SubProcess create_model() end ==================================
2024-09-25 07:31:00,003:INFO:Creating metrics dataframe
2024-09-25 07:31:00,005:INFO:Initializing Dummy Classifier
2024-09-25 07:31:00,005:INFO:Total runtime is 0.11813631852467854 minutes
2024-09-25 07:31:00,005:INFO:SubProcess create_model() called ==================================
2024-09-25 07:31:00,005:INFO:Initializing create_model()
2024-09-25 07:31:00,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4e54e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:31:00,005:INFO:Checking exceptions
2024-09-25 07:31:00,005:INFO:Importing libraries
2024-09-25 07:31:00,005:INFO:Copying training dataset
2024-09-25 07:31:00,006:INFO:Defining folds
2024-09-25 07:31:00,006:INFO:Declaring metric variables
2024-09-25 07:31:00,007:INFO:Importing untrained model
2024-09-25 07:31:00,007:INFO:Dummy Classifier Imported successfully
2024-09-25 07:31:00,007:INFO:Starting cross validation
2024-09-25 07:31:00,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:31:00,047:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:31:00,049:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:31:00,050:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:31:00,053:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:31:00,059:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:31:00,059:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:31:00,060:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:31:00,070:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:31:00,071:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:31:00,081:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:31:00,086:INFO:Calculating mean and std
2024-09-25 07:31:00,086:INFO:Creating metrics dataframe
2024-09-25 07:31:00,087:INFO:Uploading results into container
2024-09-25 07:31:00,087:INFO:Uploading model into container now
2024-09-25 07:31:00,087:INFO:_master_model_container: 14
2024-09-25 07:31:00,087:INFO:_display_container: 2
2024-09-25 07:31:00,088:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-09-25 07:31:00,088:INFO:create_model() successfully completed......................................
2024-09-25 07:31:00,125:INFO:SubProcess create_model() end ==================================
2024-09-25 07:31:00,125:INFO:Creating metrics dataframe
2024-09-25 07:31:00,129:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-09-25 07:31:00,130:INFO:Initializing create_model()
2024-09-25 07:31:00,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:31:00,130:INFO:Checking exceptions
2024-09-25 07:31:00,130:INFO:Importing libraries
2024-09-25 07:31:00,130:INFO:Copying training dataset
2024-09-25 07:31:00,131:INFO:Defining folds
2024-09-25 07:31:00,131:INFO:Declaring metric variables
2024-09-25 07:31:00,131:INFO:Importing untrained model
2024-09-25 07:31:00,131:INFO:Declaring custom model
2024-09-25 07:31:00,132:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:31:00,132:INFO:Cross validation set to False
2024-09-25 07:31:00,132:INFO:Fitting Model
2024-09-25 07:31:00,238:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:31:00,239:INFO:create_model() successfully completed......................................
2024-09-25 07:31:00,282:INFO:_master_model_container: 14
2024-09-25 07:31:00,282:INFO:_display_container: 2
2024-09-25 07:31:00,282:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:31:00,282:INFO:compare_models() successfully completed......................................
2024-09-25 07:31:00,285:INFO:Initializing tune_model()
2024-09-25 07:31:00,285:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>)
2024-09-25 07:31:00,285:INFO:Checking exceptions
2024-09-25 07:31:00,286:INFO:Copying training dataset
2024-09-25 07:31:00,287:INFO:Checking base model
2024-09-25 07:31:00,287:INFO:Base model : Random Forest Classifier
2024-09-25 07:31:00,288:INFO:Declaring metric variables
2024-09-25 07:31:00,288:INFO:Defining Hyperparameters
2024-09-25 07:31:00,329:INFO:Tuning with n_jobs=-1
2024-09-25 07:31:00,329:INFO:Initializing RandomizedSearchCV
2024-09-25 07:31:03,136:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2024-09-25 07:31:03,136:INFO:Hyperparameter search completed
2024-09-25 07:31:03,136:INFO:SubProcess create_model() called ==================================
2024-09-25 07:31:03,137:INFO:Initializing create_model()
2024-09-25 07:31:03,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16dfb4f10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2024-09-25 07:31:03,137:INFO:Checking exceptions
2024-09-25 07:31:03,137:INFO:Importing libraries
2024-09-25 07:31:03,137:INFO:Copying training dataset
2024-09-25 07:31:03,138:INFO:Defining folds
2024-09-25 07:31:03,138:INFO:Declaring metric variables
2024-09-25 07:31:03,138:INFO:Importing untrained model
2024-09-25 07:31:03,138:INFO:Declaring custom model
2024-09-25 07:31:03,139:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:31:03,139:INFO:Starting cross validation
2024-09-25 07:31:03,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:31:03,586:INFO:Calculating mean and std
2024-09-25 07:31:03,587:INFO:Creating metrics dataframe
2024-09-25 07:31:03,588:INFO:Finalizing model
2024-09-25 07:31:03,789:INFO:Uploading results into container
2024-09-25 07:31:03,790:INFO:Uploading model into container now
2024-09-25 07:31:03,790:INFO:_master_model_container: 15
2024-09-25 07:31:03,790:INFO:_display_container: 3
2024-09-25 07:31:03,790:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:31:03,790:INFO:create_model() successfully completed......................................
2024-09-25 07:31:03,831:INFO:SubProcess create_model() end ==================================
2024-09-25 07:31:03,831:INFO:choose_better activated
2024-09-25 07:31:03,831:INFO:SubProcess create_model() called ==================================
2024-09-25 07:31:03,832:INFO:Initializing create_model()
2024-09-25 07:31:03,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:31:03,832:INFO:Checking exceptions
2024-09-25 07:31:03,832:INFO:Importing libraries
2024-09-25 07:31:03,832:INFO:Copying training dataset
2024-09-25 07:31:03,834:INFO:Defining folds
2024-09-25 07:31:03,834:INFO:Declaring metric variables
2024-09-25 07:31:03,834:INFO:Importing untrained model
2024-09-25 07:31:03,834:INFO:Declaring custom model
2024-09-25 07:31:03,834:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:31:03,834:INFO:Starting cross validation
2024-09-25 07:31:03,835:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:31:04,116:INFO:Calculating mean and std
2024-09-25 07:31:04,116:INFO:Creating metrics dataframe
2024-09-25 07:31:04,117:INFO:Finalizing model
2024-09-25 07:31:04,212:INFO:Uploading results into container
2024-09-25 07:31:04,213:INFO:Uploading model into container now
2024-09-25 07:31:04,213:INFO:_master_model_container: 16
2024-09-25 07:31:04,213:INFO:_display_container: 4
2024-09-25 07:31:04,213:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:31:04,213:INFO:create_model() successfully completed......................................
2024-09-25 07:31:04,251:INFO:SubProcess create_model() end ==================================
2024-09-25 07:31:04,251:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8202
2024-09-25 07:31:04,252:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8235
2024-09-25 07:31:04,252:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2024-09-25 07:31:04,252:INFO:choose_better completed
2024-09-25 07:31:04,256:INFO:_master_model_container: 16
2024-09-25 07:31:04,256:INFO:_display_container: 3
2024-09-25 07:31:04,256:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:31:04,256:INFO:tune_model() successfully completed......................................
2024-09-25 07:31:04,296:INFO:Initializing finalize_model()
2024-09-25 07:31:04,296:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-09-25 07:31:04,296:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:31:04,298:INFO:Initializing create_model()
2024-09-25 07:31:04,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16de3c910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:31:04,298:INFO:Checking exceptions
2024-09-25 07:31:04,298:INFO:Importing libraries
2024-09-25 07:31:04,298:INFO:Copying training dataset
2024-09-25 07:31:04,298:INFO:Defining folds
2024-09-25 07:31:04,298:INFO:Declaring metric variables
2024-09-25 07:31:04,298:INFO:Importing untrained model
2024-09-25 07:31:04,298:INFO:Declaring custom model
2024-09-25 07:31:04,299:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:31:04,299:INFO:Cross validation set to False
2024-09-25 07:31:04,299:INFO:Fitting Model
2024-09-25 07:31:04,508:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:31:04,508:INFO:create_model() successfully completed......................................
2024-09-25 07:31:04,546:INFO:_master_model_container: 16
2024-09-25 07:31:04,547:INFO:_display_container: 3
2024-09-25 07:31:04,554:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:31:04,554:INFO:finalize_model() successfully completed......................................
2024-09-25 07:31:04,608:INFO:Initializing save_model()
2024-09-25 07:31:04,608:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-25 07:31:04,608:INFO:Adding model into prep_pipe
2024-09-25 07:31:04,608:WARNING:Only Model saved as it was a pipeline.
2024-09-25 07:31:04,653:INFO:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model.pkl saved in current working directory
2024-09-25 07:31:04,661:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:31:04,661:INFO:save_model() successfully completed......................................
2024-09-25 07:34:24,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:34:24,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:34:24,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:34:24,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:35:41,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:35:41,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:35:41,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:35:41,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:37:11,452:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:37:11,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:37:11,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:37:11,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:40:28,513:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:40:28,514:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:40:28,514:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:40:28,514:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:43:34,150:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:43:34,150:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:43:34,150:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:43:34,150:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:43:36,157:INFO:PyCaret ClassificationExperiment
2024-09-25 07:43:36,157:INFO:Logging name: clf-default-name
2024-09-25 07:43:36,157:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-25 07:43:36,157:INFO:version 3.3.2
2024-09-25 07:43:36,157:INFO:Initializing setup()
2024-09-25 07:43:36,157:INFO:self.USI: 0356
2024-09-25 07:43:36,158:INFO:self._variable_keys: {'fix_imbalance', 'fold_generator', 'X_train', 'idx', 'X_test', 'log_plots_param', 'fold_shuffle_param', 'y_train', 'fold_groups_param', 'html_param', 'X', 'exp_id', 'y', 'y_test', 'n_jobs_param', 'exp_name_log', 'seed', 'pipeline', 'USI', 'data', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'target_param', 'memory', 'logging_param', 'is_multiclass', 'gpu_param'}
2024-09-25 07:43:36,158:INFO:Checking environment
2024-09-25 07:43:36,158:INFO:python_version: 3.10.12
2024-09-25 07:43:36,158:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-25 07:43:36,158:INFO:machine: arm64
2024-09-25 07:43:36,185:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:43:36,186:INFO:Memory: svmem(total=17179869184, available=3784982528, percent=78.0, used=6550028288, free=78856192, active=3715383296, inactive=3613655040, wired=2834644992)
2024-09-25 07:43:36,186:INFO:Physical Core: 10
2024-09-25 07:43:36,186:INFO:Logical Core: 10
2024-09-25 07:43:36,186:INFO:Checking libraries
2024-09-25 07:43:36,186:INFO:System:
2024-09-25 07:43:36,186:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-25 07:43:36,186:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-25 07:43:36,186:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:43:36,186:INFO:PyCaret required dependencies:
2024-09-25 07:43:36,206:INFO:                 pip: 23.0.1
2024-09-25 07:43:36,206:INFO:          setuptools: 65.5.0
2024-09-25 07:43:36,206:INFO:             pycaret: 3.3.2
2024-09-25 07:43:36,206:INFO:             IPython: 8.27.0
2024-09-25 07:43:36,206:INFO:          ipywidgets: 8.1.5
2024-09-25 07:43:36,206:INFO:                tqdm: 4.66.5
2024-09-25 07:43:36,206:INFO:               numpy: 1.26.4
2024-09-25 07:43:36,206:INFO:              pandas: 2.1.4
2024-09-25 07:43:36,206:INFO:              jinja2: 3.1.4
2024-09-25 07:43:36,206:INFO:               scipy: 1.11.4
2024-09-25 07:43:36,206:INFO:              joblib: 1.3.2
2024-09-25 07:43:36,206:INFO:             sklearn: 1.4.2
2024-09-25 07:43:36,206:INFO:                pyod: 2.0.2
2024-09-25 07:43:36,206:INFO:            imblearn: 0.12.3
2024-09-25 07:43:36,206:INFO:   category_encoders: 2.6.3
2024-09-25 07:43:36,206:INFO:            lightgbm: 4.5.0
2024-09-25 07:43:36,206:INFO:               numba: 0.60.0
2024-09-25 07:43:36,206:INFO:            requests: 2.32.3
2024-09-25 07:43:36,206:INFO:          matplotlib: 3.7.5
2024-09-25 07:43:36,206:INFO:          scikitplot: 0.3.7
2024-09-25 07:43:36,206:INFO:         yellowbrick: 1.5
2024-09-25 07:43:36,206:INFO:              plotly: 5.24.1
2024-09-25 07:43:36,207:INFO:    plotly-resampler: Not installed
2024-09-25 07:43:36,207:INFO:             kaleido: 0.2.1
2024-09-25 07:43:36,207:INFO:           schemdraw: 0.15
2024-09-25 07:43:36,207:INFO:         statsmodels: 0.14.3
2024-09-25 07:43:36,207:INFO:              sktime: 0.26.0
2024-09-25 07:43:36,207:INFO:               tbats: 1.1.3
2024-09-25 07:43:36,207:INFO:            pmdarima: 2.0.4
2024-09-25 07:43:36,207:INFO:              psutil: 6.0.0
2024-09-25 07:43:36,207:INFO:          markupsafe: 2.1.5
2024-09-25 07:43:36,207:INFO:             pickle5: Not installed
2024-09-25 07:43:36,207:INFO:         cloudpickle: 3.0.0
2024-09-25 07:43:36,207:INFO:         deprecation: 2.1.0
2024-09-25 07:43:36,207:INFO:              xxhash: 3.5.0
2024-09-25 07:43:36,207:INFO:           wurlitzer: 3.1.1
2024-09-25 07:43:36,207:INFO:PyCaret optional dependencies:
2024-09-25 07:43:36,213:INFO:                shap: 0.46.0
2024-09-25 07:43:36,213:INFO:           interpret: Not installed
2024-09-25 07:43:36,213:INFO:                umap: Not installed
2024-09-25 07:43:36,213:INFO:     ydata_profiling: 4.10.0
2024-09-25 07:43:36,213:INFO:  explainerdashboard: Not installed
2024-09-25 07:43:36,213:INFO:             autoviz: Not installed
2024-09-25 07:43:36,213:INFO:           fairlearn: Not installed
2024-09-25 07:43:36,213:INFO:          deepchecks: Not installed
2024-09-25 07:43:36,214:INFO:             xgboost: Not installed
2024-09-25 07:43:36,214:INFO:            catboost: Not installed
2024-09-25 07:43:36,214:INFO:              kmodes: Not installed
2024-09-25 07:43:36,214:INFO:             mlxtend: Not installed
2024-09-25 07:43:36,214:INFO:       statsforecast: Not installed
2024-09-25 07:43:36,214:INFO:        tune_sklearn: Not installed
2024-09-25 07:43:36,214:INFO:                 ray: Not installed
2024-09-25 07:43:36,214:INFO:            hyperopt: Not installed
2024-09-25 07:43:36,214:INFO:              optuna: Not installed
2024-09-25 07:43:36,214:INFO:               skopt: Not installed
2024-09-25 07:43:36,214:INFO:              mlflow: Not installed
2024-09-25 07:43:36,214:INFO:              gradio: Not installed
2024-09-25 07:43:36,214:INFO:             fastapi: Not installed
2024-09-25 07:43:36,214:INFO:             uvicorn: Not installed
2024-09-25 07:43:36,214:INFO:              m2cgen: Not installed
2024-09-25 07:43:36,214:INFO:           evidently: Not installed
2024-09-25 07:43:36,214:INFO:               fugue: Not installed
2024-09-25 07:43:36,214:INFO:           streamlit: Not installed
2024-09-25 07:43:36,214:INFO:             prophet: Not installed
2024-09-25 07:43:36,214:INFO:None
2024-09-25 07:43:36,214:INFO:Set up data.
2024-09-25 07:43:36,219:INFO:Set up folding strategy.
2024-09-25 07:43:36,219:INFO:Set up train/test split.
2024-09-25 07:43:36,223:INFO:Set up index.
2024-09-25 07:43:36,223:INFO:Assigning column types.
2024-09-25 07:43:36,225:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-25 07:43:36,245:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:43:36,246:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:43:36,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,282:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:43:36,283:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:43:36,295:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,295:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-25 07:43:36,315:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:43:36,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,347:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:43:36,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,359:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-25 07:43:36,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,423:INFO:Preparing preprocessing pipeline...
2024-09-25 07:43:36,423:INFO:Set up simple imputation.
2024-09-25 07:43:36,425:INFO:Set up encoding of categorical features.
2024-09-25 07:43:36,425:INFO:Set up feature normalization.
2024-09-25 07:43:36,452:INFO:Finished creating preprocessing pipeline.
2024-09-25 07:43:36,455:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Sex',
                                             'Age', 'SibSp', 'Parch', 'Fare',
                                             'FamilySize'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-25 07:43:36,455:INFO:Creating final display dataframe.
2024-09-25 07:43:36,524:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 13)
4        Transformed data shape         (891, 12)
5   Transformed train set shape         (623, 12)
6    Transformed test set shape         (268, 12)
7               Ignore features                 3
8              Numeric features                 8
9          Categorical features                 1
10     Rows with missing values             77.1%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              0356
2024-09-25 07:43:36,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:36,590:INFO:setup() successfully completed in 0.44s...............
2024-09-25 07:43:37,953:INFO:PyCaret ClassificationExperiment
2024-09-25 07:43:37,954:INFO:Logging name: clf-default-name
2024-09-25 07:43:37,954:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-25 07:43:37,954:INFO:version 3.3.2
2024-09-25 07:43:37,954:INFO:Initializing setup()
2024-09-25 07:43:37,954:INFO:self.USI: 1007
2024-09-25 07:43:37,954:INFO:self._variable_keys: {'fix_imbalance', 'fold_generator', 'X_train', 'idx', 'X_test', 'log_plots_param', 'fold_shuffle_param', 'y_train', 'fold_groups_param', 'html_param', 'X', 'exp_id', 'y', 'y_test', 'n_jobs_param', 'exp_name_log', 'seed', 'pipeline', 'USI', 'data', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'target_param', 'memory', 'logging_param', 'is_multiclass', 'gpu_param'}
2024-09-25 07:43:37,954:INFO:Checking environment
2024-09-25 07:43:37,954:INFO:python_version: 3.10.12
2024-09-25 07:43:37,954:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-25 07:43:37,954:INFO:machine: arm64
2024-09-25 07:43:37,954:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:43:37,954:INFO:Memory: svmem(total=17179869184, available=3820601344, percent=77.8, used=6479396864, free=103792640, active=3945037824, inactive=3624321024, wired=2534359040)
2024-09-25 07:43:37,954:INFO:Physical Core: 10
2024-09-25 07:43:37,954:INFO:Logical Core: 10
2024-09-25 07:43:37,954:INFO:Checking libraries
2024-09-25 07:43:37,954:INFO:System:
2024-09-25 07:43:37,954:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-25 07:43:37,954:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-25 07:43:37,954:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:43:37,954:INFO:PyCaret required dependencies:
2024-09-25 07:43:37,954:INFO:                 pip: 23.0.1
2024-09-25 07:43:37,954:INFO:          setuptools: 65.5.0
2024-09-25 07:43:37,954:INFO:             pycaret: 3.3.2
2024-09-25 07:43:37,954:INFO:             IPython: 8.27.0
2024-09-25 07:43:37,954:INFO:          ipywidgets: 8.1.5
2024-09-25 07:43:37,954:INFO:                tqdm: 4.66.5
2024-09-25 07:43:37,955:INFO:               numpy: 1.26.4
2024-09-25 07:43:37,955:INFO:              pandas: 2.1.4
2024-09-25 07:43:37,955:INFO:              jinja2: 3.1.4
2024-09-25 07:43:37,955:INFO:               scipy: 1.11.4
2024-09-25 07:43:37,955:INFO:              joblib: 1.3.2
2024-09-25 07:43:37,955:INFO:             sklearn: 1.4.2
2024-09-25 07:43:37,955:INFO:                pyod: 2.0.2
2024-09-25 07:43:37,955:INFO:            imblearn: 0.12.3
2024-09-25 07:43:37,955:INFO:   category_encoders: 2.6.3
2024-09-25 07:43:37,955:INFO:            lightgbm: 4.5.0
2024-09-25 07:43:37,955:INFO:               numba: 0.60.0
2024-09-25 07:43:37,955:INFO:            requests: 2.32.3
2024-09-25 07:43:37,955:INFO:          matplotlib: 3.7.5
2024-09-25 07:43:37,955:INFO:          scikitplot: 0.3.7
2024-09-25 07:43:37,955:INFO:         yellowbrick: 1.5
2024-09-25 07:43:37,955:INFO:              plotly: 5.24.1
2024-09-25 07:43:37,955:INFO:    plotly-resampler: Not installed
2024-09-25 07:43:37,955:INFO:             kaleido: 0.2.1
2024-09-25 07:43:37,955:INFO:           schemdraw: 0.15
2024-09-25 07:43:37,955:INFO:         statsmodels: 0.14.3
2024-09-25 07:43:37,955:INFO:              sktime: 0.26.0
2024-09-25 07:43:37,955:INFO:               tbats: 1.1.3
2024-09-25 07:43:37,955:INFO:            pmdarima: 2.0.4
2024-09-25 07:43:37,955:INFO:              psutil: 6.0.0
2024-09-25 07:43:37,955:INFO:          markupsafe: 2.1.5
2024-09-25 07:43:37,955:INFO:             pickle5: Not installed
2024-09-25 07:43:37,955:INFO:         cloudpickle: 3.0.0
2024-09-25 07:43:37,955:INFO:         deprecation: 2.1.0
2024-09-25 07:43:37,955:INFO:              xxhash: 3.5.0
2024-09-25 07:43:37,955:INFO:           wurlitzer: 3.1.1
2024-09-25 07:43:37,955:INFO:PyCaret optional dependencies:
2024-09-25 07:43:37,955:INFO:                shap: 0.46.0
2024-09-25 07:43:37,955:INFO:           interpret: Not installed
2024-09-25 07:43:37,955:INFO:                umap: Not installed
2024-09-25 07:43:37,955:INFO:     ydata_profiling: 4.10.0
2024-09-25 07:43:37,955:INFO:  explainerdashboard: Not installed
2024-09-25 07:43:37,955:INFO:             autoviz: Not installed
2024-09-25 07:43:37,956:INFO:           fairlearn: Not installed
2024-09-25 07:43:37,956:INFO:          deepchecks: Not installed
2024-09-25 07:43:37,956:INFO:             xgboost: Not installed
2024-09-25 07:43:37,956:INFO:            catboost: Not installed
2024-09-25 07:43:37,956:INFO:              kmodes: Not installed
2024-09-25 07:43:37,956:INFO:             mlxtend: Not installed
2024-09-25 07:43:37,956:INFO:       statsforecast: Not installed
2024-09-25 07:43:37,956:INFO:        tune_sklearn: Not installed
2024-09-25 07:43:37,956:INFO:                 ray: Not installed
2024-09-25 07:43:37,956:INFO:            hyperopt: Not installed
2024-09-25 07:43:37,956:INFO:              optuna: Not installed
2024-09-25 07:43:37,956:INFO:               skopt: Not installed
2024-09-25 07:43:37,956:INFO:              mlflow: Not installed
2024-09-25 07:43:37,956:INFO:              gradio: Not installed
2024-09-25 07:43:37,956:INFO:             fastapi: Not installed
2024-09-25 07:43:37,956:INFO:             uvicorn: Not installed
2024-09-25 07:43:37,956:INFO:              m2cgen: Not installed
2024-09-25 07:43:37,956:INFO:           evidently: Not installed
2024-09-25 07:43:37,956:INFO:               fugue: Not installed
2024-09-25 07:43:37,956:INFO:           streamlit: Not installed
2024-09-25 07:43:37,956:INFO:             prophet: Not installed
2024-09-25 07:43:37,956:INFO:None
2024-09-25 07:43:37,956:INFO:Set up data.
2024-09-25 07:43:37,961:INFO:Set up folding strategy.
2024-09-25 07:43:37,962:INFO:Set up train/test split.
2024-09-25 07:43:37,965:INFO:Set up index.
2024-09-25 07:43:37,965:INFO:Assigning column types.
2024-09-25 07:43:37,967:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-25 07:43:37,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:43:37,992:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:43:38,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,026:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:43:38,027:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:43:38,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,040:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-25 07:43:38,060:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:43:38,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,092:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:43:38,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,105:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-25 07:43:38,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,169:INFO:Preparing preprocessing pipeline...
2024-09-25 07:43:38,170:INFO:Set up simple imputation.
2024-09-25 07:43:38,171:INFO:Set up encoding of ordinal features.
2024-09-25 07:43:38,171:INFO:Set up encoding of categorical features.
2024-09-25 07:43:38,171:INFO:Set up feature normalization.
2024-09-25 07:43:38,202:INFO:Finished creating preprocessing pipeline.
2024-09-25 07:43:38,209:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-25 07:43:38,209:INFO:Creating final display dataframe.
2024-09-25 07:43:38,294:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              1007
2024-09-25 07:43:38,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:43:38,360:INFO:setup() successfully completed in 0.41s...............
2024-09-25 07:43:38,360:INFO:Initializing get_config()
2024-09-25 07:43:38,360:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, variable=X_train)
2024-09-25 07:43:38,361:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2024-09-25 07:43:38,361:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2024-09-25 07:43:38,366:INFO:Variable:  returned as      PassengerId  Pclass     Sex   Age  SibSp  Parch       Fare Embarked
748          749       1    male  19.0      1      0  53.099998        S
45            46       3    male   NaN      0      0   8.050000        S
28            29       3  female   NaN      0      0   7.879200        Q
633          634       1    male   NaN      0      0   0.000000        S
403          404       3    male  28.0      1      0  15.850000        S
..           ...     ...     ...   ...    ...    ...        ...      ...
476          477       2    male  34.0      1      0  21.000000        S
190          191       2  female  32.0      0      0  13.000000        S
736          737       3  female  48.0      1      3  34.375000        S
462          463       1    male  47.0      0      0  38.500000        S
136          137       1  female  19.0      0      2  26.283300        S

[623 rows x 8 columns]
2024-09-25 07:43:38,366:INFO:get_config() successfully completed......................................
2024-09-25 07:43:38,366:INFO:Initializing compare_models()
2024-09-25 07:43:38,366:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-09-25 07:43:38,366:INFO:Checking exceptions
2024-09-25 07:43:38,368:INFO:Preparing display monitor
2024-09-25 07:43:38,376:INFO:Initializing Logistic Regression
2024-09-25 07:43:38,376:INFO:Total runtime is 3.1153361002604166e-06 minutes
2024-09-25 07:43:38,376:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:38,376:INFO:Initializing create_model()
2024-09-25 07:43:38,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:38,376:INFO:Checking exceptions
2024-09-25 07:43:38,376:INFO:Importing libraries
2024-09-25 07:43:38,377:INFO:Copying training dataset
2024-09-25 07:43:38,378:INFO:Defining folds
2024-09-25 07:43:38,378:INFO:Declaring metric variables
2024-09-25 07:43:38,379:INFO:Importing untrained model
2024-09-25 07:43:38,379:INFO:Logistic Regression Imported successfully
2024-09-25 07:43:38,379:INFO:Starting cross validation
2024-09-25 07:43:38,380:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:40,389:INFO:Calculating mean and std
2024-09-25 07:43:40,391:INFO:Creating metrics dataframe
2024-09-25 07:43:40,394:INFO:Uploading results into container
2024-09-25 07:43:40,394:INFO:Uploading model into container now
2024-09-25 07:43:40,394:INFO:_master_model_container: 1
2024-09-25 07:43:40,394:INFO:_display_container: 2
2024-09-25 07:43:40,395:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-09-25 07:43:40,395:INFO:create_model() successfully completed......................................
2024-09-25 07:43:40,452:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:40,453:INFO:Creating metrics dataframe
2024-09-25 07:43:40,454:INFO:Initializing K Neighbors Classifier
2024-09-25 07:43:40,454:INFO:Total runtime is 0.034634852409362794 minutes
2024-09-25 07:43:40,454:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:40,454:INFO:Initializing create_model()
2024-09-25 07:43:40,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:40,454:INFO:Checking exceptions
2024-09-25 07:43:40,454:INFO:Importing libraries
2024-09-25 07:43:40,454:INFO:Copying training dataset
2024-09-25 07:43:40,456:INFO:Defining folds
2024-09-25 07:43:40,456:INFO:Declaring metric variables
2024-09-25 07:43:40,456:INFO:Importing untrained model
2024-09-25 07:43:40,456:INFO:K Neighbors Classifier Imported successfully
2024-09-25 07:43:40,456:INFO:Starting cross validation
2024-09-25 07:43:40,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:40,573:INFO:Calculating mean and std
2024-09-25 07:43:40,574:INFO:Creating metrics dataframe
2024-09-25 07:43:40,575:INFO:Uploading results into container
2024-09-25 07:43:40,575:INFO:Uploading model into container now
2024-09-25 07:43:40,575:INFO:_master_model_container: 2
2024-09-25 07:43:40,575:INFO:_display_container: 2
2024-09-25 07:43:40,575:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-09-25 07:43:40,575:INFO:create_model() successfully completed......................................
2024-09-25 07:43:40,614:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:40,614:INFO:Creating metrics dataframe
2024-09-25 07:43:40,616:INFO:Initializing Naive Bayes
2024-09-25 07:43:40,616:INFO:Total runtime is 0.03733350038528443 minutes
2024-09-25 07:43:40,616:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:40,616:INFO:Initializing create_model()
2024-09-25 07:43:40,616:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:40,616:INFO:Checking exceptions
2024-09-25 07:43:40,616:INFO:Importing libraries
2024-09-25 07:43:40,616:INFO:Copying training dataset
2024-09-25 07:43:40,617:INFO:Defining folds
2024-09-25 07:43:40,617:INFO:Declaring metric variables
2024-09-25 07:43:40,618:INFO:Importing untrained model
2024-09-25 07:43:40,618:INFO:Naive Bayes Imported successfully
2024-09-25 07:43:40,618:INFO:Starting cross validation
2024-09-25 07:43:40,618:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:40,697:INFO:Calculating mean and std
2024-09-25 07:43:40,697:INFO:Creating metrics dataframe
2024-09-25 07:43:40,698:INFO:Uploading results into container
2024-09-25 07:43:40,698:INFO:Uploading model into container now
2024-09-25 07:43:40,698:INFO:_master_model_container: 3
2024-09-25 07:43:40,698:INFO:_display_container: 2
2024-09-25 07:43:40,698:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-09-25 07:43:40,698:INFO:create_model() successfully completed......................................
2024-09-25 07:43:40,737:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:40,738:INFO:Creating metrics dataframe
2024-09-25 07:43:40,739:INFO:Initializing Decision Tree Classifier
2024-09-25 07:43:40,739:INFO:Total runtime is 0.039388549327850346 minutes
2024-09-25 07:43:40,739:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:40,739:INFO:Initializing create_model()
2024-09-25 07:43:40,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:40,739:INFO:Checking exceptions
2024-09-25 07:43:40,739:INFO:Importing libraries
2024-09-25 07:43:40,739:INFO:Copying training dataset
2024-09-25 07:43:40,741:INFO:Defining folds
2024-09-25 07:43:40,741:INFO:Declaring metric variables
2024-09-25 07:43:40,741:INFO:Importing untrained model
2024-09-25 07:43:40,741:INFO:Decision Tree Classifier Imported successfully
2024-09-25 07:43:40,741:INFO:Starting cross validation
2024-09-25 07:43:40,741:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:40,819:INFO:Calculating mean and std
2024-09-25 07:43:40,820:INFO:Creating metrics dataframe
2024-09-25 07:43:40,820:INFO:Uploading results into container
2024-09-25 07:43:40,821:INFO:Uploading model into container now
2024-09-25 07:43:40,821:INFO:_master_model_container: 4
2024-09-25 07:43:40,821:INFO:_display_container: 2
2024-09-25 07:43:40,821:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-09-25 07:43:40,821:INFO:create_model() successfully completed......................................
2024-09-25 07:43:40,859:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:40,859:INFO:Creating metrics dataframe
2024-09-25 07:43:40,860:INFO:Initializing SVM - Linear Kernel
2024-09-25 07:43:40,860:INFO:Total runtime is 0.04141418139139812 minutes
2024-09-25 07:43:40,861:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:40,861:INFO:Initializing create_model()
2024-09-25 07:43:40,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:40,861:INFO:Checking exceptions
2024-09-25 07:43:40,861:INFO:Importing libraries
2024-09-25 07:43:40,861:INFO:Copying training dataset
2024-09-25 07:43:40,862:INFO:Defining folds
2024-09-25 07:43:40,862:INFO:Declaring metric variables
2024-09-25 07:43:40,862:INFO:Importing untrained model
2024-09-25 07:43:40,862:INFO:SVM - Linear Kernel Imported successfully
2024-09-25 07:43:40,862:INFO:Starting cross validation
2024-09-25 07:43:40,863:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:40,941:INFO:Calculating mean and std
2024-09-25 07:43:40,942:INFO:Creating metrics dataframe
2024-09-25 07:43:40,943:INFO:Uploading results into container
2024-09-25 07:43:40,943:INFO:Uploading model into container now
2024-09-25 07:43:40,943:INFO:_master_model_container: 5
2024-09-25 07:43:40,943:INFO:_display_container: 2
2024-09-25 07:43:40,943:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-09-25 07:43:40,943:INFO:create_model() successfully completed......................................
2024-09-25 07:43:40,985:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:40,985:INFO:Creating metrics dataframe
2024-09-25 07:43:40,986:INFO:Initializing Ridge Classifier
2024-09-25 07:43:40,987:INFO:Total runtime is 0.043515566984812425 minutes
2024-09-25 07:43:40,987:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:40,987:INFO:Initializing create_model()
2024-09-25 07:43:40,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:40,987:INFO:Checking exceptions
2024-09-25 07:43:40,987:INFO:Importing libraries
2024-09-25 07:43:40,987:INFO:Copying training dataset
2024-09-25 07:43:40,988:INFO:Defining folds
2024-09-25 07:43:40,988:INFO:Declaring metric variables
2024-09-25 07:43:40,988:INFO:Importing untrained model
2024-09-25 07:43:40,988:INFO:Ridge Classifier Imported successfully
2024-09-25 07:43:40,989:INFO:Starting cross validation
2024-09-25 07:43:40,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:41,068:INFO:Calculating mean and std
2024-09-25 07:43:41,068:INFO:Creating metrics dataframe
2024-09-25 07:43:41,069:INFO:Uploading results into container
2024-09-25 07:43:41,070:INFO:Uploading model into container now
2024-09-25 07:43:41,070:INFO:_master_model_container: 6
2024-09-25 07:43:41,070:INFO:_display_container: 2
2024-09-25 07:43:41,070:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-09-25 07:43:41,070:INFO:create_model() successfully completed......................................
2024-09-25 07:43:41,109:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:41,109:INFO:Creating metrics dataframe
2024-09-25 07:43:41,111:INFO:Initializing Random Forest Classifier
2024-09-25 07:43:41,111:INFO:Total runtime is 0.04558446407318116 minutes
2024-09-25 07:43:41,111:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:41,111:INFO:Initializing create_model()
2024-09-25 07:43:41,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:41,111:INFO:Checking exceptions
2024-09-25 07:43:41,111:INFO:Importing libraries
2024-09-25 07:43:41,111:INFO:Copying training dataset
2024-09-25 07:43:41,112:INFO:Defining folds
2024-09-25 07:43:41,112:INFO:Declaring metric variables
2024-09-25 07:43:41,112:INFO:Importing untrained model
2024-09-25 07:43:41,113:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:43:41,113:INFO:Starting cross validation
2024-09-25 07:43:41,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:41,339:INFO:Calculating mean and std
2024-09-25 07:43:41,339:INFO:Creating metrics dataframe
2024-09-25 07:43:41,340:INFO:Uploading results into container
2024-09-25 07:43:41,340:INFO:Uploading model into container now
2024-09-25 07:43:41,340:INFO:_master_model_container: 7
2024-09-25 07:43:41,340:INFO:_display_container: 2
2024-09-25 07:43:41,340:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:43:41,340:INFO:create_model() successfully completed......................................
2024-09-25 07:43:41,379:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:41,380:INFO:Creating metrics dataframe
2024-09-25 07:43:41,381:INFO:Initializing Quadratic Discriminant Analysis
2024-09-25 07:43:41,381:INFO:Total runtime is 0.05008646249771119 minutes
2024-09-25 07:43:41,381:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:41,381:INFO:Initializing create_model()
2024-09-25 07:43:41,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:41,381:INFO:Checking exceptions
2024-09-25 07:43:41,381:INFO:Importing libraries
2024-09-25 07:43:41,381:INFO:Copying training dataset
2024-09-25 07:43:41,382:INFO:Defining folds
2024-09-25 07:43:41,382:INFO:Declaring metric variables
2024-09-25 07:43:41,382:INFO:Importing untrained model
2024-09-25 07:43:41,383:INFO:Quadratic Discriminant Analysis Imported successfully
2024-09-25 07:43:41,383:INFO:Starting cross validation
2024-09-25 07:43:41,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:41,411:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:43:41,414:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:43:41,415:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:43:41,416:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:43:41,418:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:43:41,422:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:43:41,430:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:43:41,431:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:43:41,432:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:43:41,436:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:43:41,452:INFO:Calculating mean and std
2024-09-25 07:43:41,452:INFO:Creating metrics dataframe
2024-09-25 07:43:41,453:INFO:Uploading results into container
2024-09-25 07:43:41,453:INFO:Uploading model into container now
2024-09-25 07:43:41,454:INFO:_master_model_container: 8
2024-09-25 07:43:41,454:INFO:_display_container: 2
2024-09-25 07:43:41,454:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-09-25 07:43:41,454:INFO:create_model() successfully completed......................................
2024-09-25 07:43:41,492:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:41,492:INFO:Creating metrics dataframe
2024-09-25 07:43:41,493:INFO:Initializing Ada Boost Classifier
2024-09-25 07:43:41,493:INFO:Total runtime is 0.051956347624460865 minutes
2024-09-25 07:43:41,493:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:41,493:INFO:Initializing create_model()
2024-09-25 07:43:41,493:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:41,493:INFO:Checking exceptions
2024-09-25 07:43:41,493:INFO:Importing libraries
2024-09-25 07:43:41,493:INFO:Copying training dataset
2024-09-25 07:43:41,495:INFO:Defining folds
2024-09-25 07:43:41,495:INFO:Declaring metric variables
2024-09-25 07:43:41,495:INFO:Importing untrained model
2024-09-25 07:43:41,495:INFO:Ada Boost Classifier Imported successfully
2024-09-25 07:43:41,495:INFO:Starting cross validation
2024-09-25 07:43:41,495:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:41,522:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:43:41,525:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:43:41,528:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:43:41,529:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:43:41,531:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:43:41,531:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:43:41,532:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:43:41,547:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:43:41,553:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:43:41,556:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:43:41,629:INFO:Calculating mean and std
2024-09-25 07:43:41,630:INFO:Creating metrics dataframe
2024-09-25 07:43:41,630:INFO:Uploading results into container
2024-09-25 07:43:41,631:INFO:Uploading model into container now
2024-09-25 07:43:41,631:INFO:_master_model_container: 9
2024-09-25 07:43:41,631:INFO:_display_container: 2
2024-09-25 07:43:41,631:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-09-25 07:43:41,631:INFO:create_model() successfully completed......................................
2024-09-25 07:43:41,670:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:41,670:INFO:Creating metrics dataframe
2024-09-25 07:43:41,671:INFO:Initializing Gradient Boosting Classifier
2024-09-25 07:43:41,671:INFO:Total runtime is 0.0549255649248759 minutes
2024-09-25 07:43:41,671:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:41,671:INFO:Initializing create_model()
2024-09-25 07:43:41,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:41,671:INFO:Checking exceptions
2024-09-25 07:43:41,671:INFO:Importing libraries
2024-09-25 07:43:41,671:INFO:Copying training dataset
2024-09-25 07:43:41,673:INFO:Defining folds
2024-09-25 07:43:41,673:INFO:Declaring metric variables
2024-09-25 07:43:41,673:INFO:Importing untrained model
2024-09-25 07:43:41,673:INFO:Gradient Boosting Classifier Imported successfully
2024-09-25 07:43:41,673:INFO:Starting cross validation
2024-09-25 07:43:41,674:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:41,831:INFO:Calculating mean and std
2024-09-25 07:43:41,831:INFO:Creating metrics dataframe
2024-09-25 07:43:41,832:INFO:Uploading results into container
2024-09-25 07:43:41,832:INFO:Uploading model into container now
2024-09-25 07:43:41,832:INFO:_master_model_container: 10
2024-09-25 07:43:41,832:INFO:_display_container: 2
2024-09-25 07:43:41,832:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-09-25 07:43:41,832:INFO:create_model() successfully completed......................................
2024-09-25 07:43:41,870:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:41,870:INFO:Creating metrics dataframe
2024-09-25 07:43:41,871:INFO:Initializing Linear Discriminant Analysis
2024-09-25 07:43:41,871:INFO:Total runtime is 0.05826025009155274 minutes
2024-09-25 07:43:41,871:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:41,871:INFO:Initializing create_model()
2024-09-25 07:43:41,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:41,871:INFO:Checking exceptions
2024-09-25 07:43:41,871:INFO:Importing libraries
2024-09-25 07:43:41,871:INFO:Copying training dataset
2024-09-25 07:43:41,873:INFO:Defining folds
2024-09-25 07:43:41,873:INFO:Declaring metric variables
2024-09-25 07:43:41,873:INFO:Importing untrained model
2024-09-25 07:43:41,873:INFO:Linear Discriminant Analysis Imported successfully
2024-09-25 07:43:41,873:INFO:Starting cross validation
2024-09-25 07:43:41,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:41,944:INFO:Calculating mean and std
2024-09-25 07:43:41,945:INFO:Creating metrics dataframe
2024-09-25 07:43:41,945:INFO:Uploading results into container
2024-09-25 07:43:41,946:INFO:Uploading model into container now
2024-09-25 07:43:41,946:INFO:_master_model_container: 11
2024-09-25 07:43:41,946:INFO:_display_container: 2
2024-09-25 07:43:41,946:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-09-25 07:43:41,946:INFO:create_model() successfully completed......................................
2024-09-25 07:43:41,984:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:41,984:INFO:Creating metrics dataframe
2024-09-25 07:43:41,985:INFO:Initializing Extra Trees Classifier
2024-09-25 07:43:41,985:INFO:Total runtime is 0.060159234205881755 minutes
2024-09-25 07:43:41,985:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:41,985:INFO:Initializing create_model()
2024-09-25 07:43:41,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:41,985:INFO:Checking exceptions
2024-09-25 07:43:41,985:INFO:Importing libraries
2024-09-25 07:43:41,985:INFO:Copying training dataset
2024-09-25 07:43:41,987:INFO:Defining folds
2024-09-25 07:43:41,987:INFO:Declaring metric variables
2024-09-25 07:43:41,987:INFO:Importing untrained model
2024-09-25 07:43:41,987:INFO:Extra Trees Classifier Imported successfully
2024-09-25 07:43:41,987:INFO:Starting cross validation
2024-09-25 07:43:41,988:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:42,190:INFO:Calculating mean and std
2024-09-25 07:43:42,190:INFO:Creating metrics dataframe
2024-09-25 07:43:42,191:INFO:Uploading results into container
2024-09-25 07:43:42,191:INFO:Uploading model into container now
2024-09-25 07:43:42,191:INFO:_master_model_container: 12
2024-09-25 07:43:42,191:INFO:_display_container: 2
2024-09-25 07:43:42,192:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-09-25 07:43:42,192:INFO:create_model() successfully completed......................................
2024-09-25 07:43:42,229:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:42,229:INFO:Creating metrics dataframe
2024-09-25 07:43:42,230:INFO:Initializing Light Gradient Boosting Machine
2024-09-25 07:43:42,230:INFO:Total runtime is 0.06424396435419719 minutes
2024-09-25 07:43:42,230:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:42,230:INFO:Initializing create_model()
2024-09-25 07:43:42,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:42,230:INFO:Checking exceptions
2024-09-25 07:43:42,230:INFO:Importing libraries
2024-09-25 07:43:42,230:INFO:Copying training dataset
2024-09-25 07:43:42,232:INFO:Defining folds
2024-09-25 07:43:42,232:INFO:Declaring metric variables
2024-09-25 07:43:42,232:INFO:Importing untrained model
2024-09-25 07:43:42,232:INFO:Light Gradient Boosting Machine Imported successfully
2024-09-25 07:43:42,232:INFO:Starting cross validation
2024-09-25 07:43:42,233:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:45,243:INFO:Calculating mean and std
2024-09-25 07:43:45,244:INFO:Creating metrics dataframe
2024-09-25 07:43:45,245:INFO:Uploading results into container
2024-09-25 07:43:45,245:INFO:Uploading model into container now
2024-09-25 07:43:45,245:INFO:_master_model_container: 13
2024-09-25 07:43:45,245:INFO:_display_container: 2
2024-09-25 07:43:45,245:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-09-25 07:43:45,245:INFO:create_model() successfully completed......................................
2024-09-25 07:43:45,290:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:45,290:INFO:Creating metrics dataframe
2024-09-25 07:43:45,292:INFO:Initializing Dummy Classifier
2024-09-25 07:43:45,292:INFO:Total runtime is 0.11526819864908855 minutes
2024-09-25 07:43:45,292:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:45,292:INFO:Initializing create_model()
2024-09-25 07:43:45,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1582e4fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:45,292:INFO:Checking exceptions
2024-09-25 07:43:45,292:INFO:Importing libraries
2024-09-25 07:43:45,292:INFO:Copying training dataset
2024-09-25 07:43:45,293:INFO:Defining folds
2024-09-25 07:43:45,293:INFO:Declaring metric variables
2024-09-25 07:43:45,293:INFO:Importing untrained model
2024-09-25 07:43:45,294:INFO:Dummy Classifier Imported successfully
2024-09-25 07:43:45,294:INFO:Starting cross validation
2024-09-25 07:43:45,294:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:45,331:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:43:45,334:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:43:45,337:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:43:45,341:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:43:45,341:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:43:45,345:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:43:45,346:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:43:45,349:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:43:45,359:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:43:45,363:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:43:45,372:INFO:Calculating mean and std
2024-09-25 07:43:45,373:INFO:Creating metrics dataframe
2024-09-25 07:43:45,374:INFO:Uploading results into container
2024-09-25 07:43:45,374:INFO:Uploading model into container now
2024-09-25 07:43:45,374:INFO:_master_model_container: 14
2024-09-25 07:43:45,374:INFO:_display_container: 2
2024-09-25 07:43:45,374:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-09-25 07:43:45,374:INFO:create_model() successfully completed......................................
2024-09-25 07:43:45,412:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:45,412:INFO:Creating metrics dataframe
2024-09-25 07:43:45,416:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-09-25 07:43:45,417:INFO:Initializing create_model()
2024-09-25 07:43:45,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:45,417:INFO:Checking exceptions
2024-09-25 07:43:45,417:INFO:Importing libraries
2024-09-25 07:43:45,417:INFO:Copying training dataset
2024-09-25 07:43:45,419:INFO:Defining folds
2024-09-25 07:43:45,419:INFO:Declaring metric variables
2024-09-25 07:43:45,419:INFO:Importing untrained model
2024-09-25 07:43:45,419:INFO:Declaring custom model
2024-09-25 07:43:45,419:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:43:45,420:INFO:Cross validation set to False
2024-09-25 07:43:45,420:INFO:Fitting Model
2024-09-25 07:43:45,517:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:43:45,517:INFO:create_model() successfully completed......................................
2024-09-25 07:43:45,559:INFO:_master_model_container: 14
2024-09-25 07:43:45,559:INFO:_display_container: 2
2024-09-25 07:43:45,559:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:43:45,559:INFO:compare_models() successfully completed......................................
2024-09-25 07:43:45,562:INFO:Initializing tune_model()
2024-09-25 07:43:45,562:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>)
2024-09-25 07:43:45,562:INFO:Checking exceptions
2024-09-25 07:43:45,563:INFO:Copying training dataset
2024-09-25 07:43:45,564:INFO:Checking base model
2024-09-25 07:43:45,564:INFO:Base model : Random Forest Classifier
2024-09-25 07:43:45,564:INFO:Declaring metric variables
2024-09-25 07:43:45,564:INFO:Defining Hyperparameters
2024-09-25 07:43:45,605:INFO:Tuning with n_jobs=-1
2024-09-25 07:43:45,605:INFO:Initializing RandomizedSearchCV
2024-09-25 07:43:48,223:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2024-09-25 07:43:48,224:INFO:Hyperparameter search completed
2024-09-25 07:43:48,224:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:48,224:INFO:Initializing create_model()
2024-09-25 07:43:48,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x158066a10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2024-09-25 07:43:48,224:INFO:Checking exceptions
2024-09-25 07:43:48,224:INFO:Importing libraries
2024-09-25 07:43:48,224:INFO:Copying training dataset
2024-09-25 07:43:48,226:INFO:Defining folds
2024-09-25 07:43:48,226:INFO:Declaring metric variables
2024-09-25 07:43:48,226:INFO:Importing untrained model
2024-09-25 07:43:48,226:INFO:Declaring custom model
2024-09-25 07:43:48,226:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:43:48,226:INFO:Starting cross validation
2024-09-25 07:43:48,227:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:48,607:INFO:Calculating mean and std
2024-09-25 07:43:48,608:INFO:Creating metrics dataframe
2024-09-25 07:43:48,609:INFO:Finalizing model
2024-09-25 07:43:48,809:INFO:Uploading results into container
2024-09-25 07:43:48,809:INFO:Uploading model into container now
2024-09-25 07:43:48,809:INFO:_master_model_container: 15
2024-09-25 07:43:48,809:INFO:_display_container: 3
2024-09-25 07:43:48,809:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:43:48,809:INFO:create_model() successfully completed......................................
2024-09-25 07:43:48,848:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:48,848:INFO:choose_better activated
2024-09-25 07:43:48,848:INFO:SubProcess create_model() called ==================================
2024-09-25 07:43:48,848:INFO:Initializing create_model()
2024-09-25 07:43:48,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:48,848:INFO:Checking exceptions
2024-09-25 07:43:48,849:INFO:Importing libraries
2024-09-25 07:43:48,849:INFO:Copying training dataset
2024-09-25 07:43:48,850:INFO:Defining folds
2024-09-25 07:43:48,850:INFO:Declaring metric variables
2024-09-25 07:43:48,850:INFO:Importing untrained model
2024-09-25 07:43:48,850:INFO:Declaring custom model
2024-09-25 07:43:48,851:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:43:48,851:INFO:Starting cross validation
2024-09-25 07:43:48,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:43:49,124:INFO:Calculating mean and std
2024-09-25 07:43:49,124:INFO:Creating metrics dataframe
2024-09-25 07:43:49,125:INFO:Finalizing model
2024-09-25 07:43:49,217:INFO:Uploading results into container
2024-09-25 07:43:49,217:INFO:Uploading model into container now
2024-09-25 07:43:49,218:INFO:_master_model_container: 16
2024-09-25 07:43:49,218:INFO:_display_container: 4
2024-09-25 07:43:49,218:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:43:49,218:INFO:create_model() successfully completed......................................
2024-09-25 07:43:49,258:INFO:SubProcess create_model() end ==================================
2024-09-25 07:43:49,258:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8202
2024-09-25 07:43:49,258:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8235
2024-09-25 07:43:49,259:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2024-09-25 07:43:49,259:INFO:choose_better completed
2024-09-25 07:43:49,262:INFO:_master_model_container: 16
2024-09-25 07:43:49,263:INFO:_display_container: 3
2024-09-25 07:43:49,263:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:43:49,263:INFO:tune_model() successfully completed......................................
2024-09-25 07:43:49,305:INFO:Initializing finalize_model()
2024-09-25 07:43:49,305:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-09-25 07:43:49,306:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:43:49,307:INFO:Initializing create_model()
2024-09-25 07:43:49,307:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158c3c910>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:43:49,307:INFO:Checking exceptions
2024-09-25 07:43:49,307:INFO:Importing libraries
2024-09-25 07:43:49,307:INFO:Copying training dataset
2024-09-25 07:43:49,307:INFO:Defining folds
2024-09-25 07:43:49,307:INFO:Declaring metric variables
2024-09-25 07:43:49,307:INFO:Importing untrained model
2024-09-25 07:43:49,307:INFO:Declaring custom model
2024-09-25 07:43:49,308:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:43:49,308:INFO:Cross validation set to False
2024-09-25 07:43:49,308:INFO:Fitting Model
2024-09-25 07:43:49,507:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:43:49,507:INFO:create_model() successfully completed......................................
2024-09-25 07:43:49,547:INFO:_master_model_container: 16
2024-09-25 07:43:49,547:INFO:_display_container: 3
2024-09-25 07:43:49,554:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:43:49,554:INFO:finalize_model() successfully completed......................................
2024-09-25 07:43:49,605:INFO:Initializing save_model()
2024-09-25 07:43:49,606:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-25 07:43:49,606:INFO:Adding model into prep_pipe
2024-09-25 07:43:49,606:WARNING:Only Model saved as it was a pipeline.
2024-09-25 07:43:49,652:INFO:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model.pkl saved in current working directory
2024-09-25 07:43:49,659:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:43:49,659:INFO:save_model() successfully completed......................................
2024-09-25 07:49:09,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:49:09,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:49:09,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:49:09,438:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-25 07:49:11,098:INFO:PyCaret ClassificationExperiment
2024-09-25 07:49:11,098:INFO:Logging name: clf-default-name
2024-09-25 07:49:11,098:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-25 07:49:11,098:INFO:version 3.3.2
2024-09-25 07:49:11,098:INFO:Initializing setup()
2024-09-25 07:49:11,098:INFO:self.USI: 186f
2024-09-25 07:49:11,098:INFO:self._variable_keys: {'fix_imbalance', 'USI', 'log_plots_param', 'y', 'fold_groups_param', 'pipeline', 'fold_shuffle_param', '_ml_usecase', 'n_jobs_param', 'gpu_n_jobs_param', 'is_multiclass', 'idx', 'X', 'html_param', 'y_test', 'target_param', 'data', 'gpu_param', '_available_plots', 'exp_name_log', 'X_train', 'logging_param', 'X_test', 'seed', 'memory', 'fold_generator', 'y_train', 'exp_id'}
2024-09-25 07:49:11,098:INFO:Checking environment
2024-09-25 07:49:11,098:INFO:python_version: 3.10.12
2024-09-25 07:49:11,098:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-25 07:49:11,098:INFO:machine: arm64
2024-09-25 07:49:11,120:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:49:11,120:INFO:Memory: svmem(total=17179869184, available=3745693696, percent=78.2, used=6310772736, free=109772800, active=3649814528, inactive=3573153792, wired=2660958208)
2024-09-25 07:49:11,120:INFO:Physical Core: 10
2024-09-25 07:49:11,120:INFO:Logical Core: 10
2024-09-25 07:49:11,120:INFO:Checking libraries
2024-09-25 07:49:11,121:INFO:System:
2024-09-25 07:49:11,121:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-25 07:49:11,121:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-25 07:49:11,121:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:49:11,121:INFO:PyCaret required dependencies:
2024-09-25 07:49:11,141:INFO:                 pip: 23.0.1
2024-09-25 07:49:11,141:INFO:          setuptools: 65.5.0
2024-09-25 07:49:11,141:INFO:             pycaret: 3.3.2
2024-09-25 07:49:11,141:INFO:             IPython: 8.27.0
2024-09-25 07:49:11,141:INFO:          ipywidgets: 8.1.5
2024-09-25 07:49:11,141:INFO:                tqdm: 4.66.5
2024-09-25 07:49:11,141:INFO:               numpy: 1.26.4
2024-09-25 07:49:11,141:INFO:              pandas: 2.1.4
2024-09-25 07:49:11,141:INFO:              jinja2: 3.1.4
2024-09-25 07:49:11,141:INFO:               scipy: 1.11.4
2024-09-25 07:49:11,141:INFO:              joblib: 1.3.2
2024-09-25 07:49:11,141:INFO:             sklearn: 1.4.2
2024-09-25 07:49:11,142:INFO:                pyod: 2.0.2
2024-09-25 07:49:11,142:INFO:            imblearn: 0.12.3
2024-09-25 07:49:11,142:INFO:   category_encoders: 2.6.3
2024-09-25 07:49:11,142:INFO:            lightgbm: 4.5.0
2024-09-25 07:49:11,142:INFO:               numba: 0.60.0
2024-09-25 07:49:11,142:INFO:            requests: 2.32.3
2024-09-25 07:49:11,142:INFO:          matplotlib: 3.7.5
2024-09-25 07:49:11,142:INFO:          scikitplot: 0.3.7
2024-09-25 07:49:11,142:INFO:         yellowbrick: 1.5
2024-09-25 07:49:11,142:INFO:              plotly: 5.24.1
2024-09-25 07:49:11,142:INFO:    plotly-resampler: Not installed
2024-09-25 07:49:11,142:INFO:             kaleido: 0.2.1
2024-09-25 07:49:11,142:INFO:           schemdraw: 0.15
2024-09-25 07:49:11,142:INFO:         statsmodels: 0.14.3
2024-09-25 07:49:11,142:INFO:              sktime: 0.26.0
2024-09-25 07:49:11,142:INFO:               tbats: 1.1.3
2024-09-25 07:49:11,142:INFO:            pmdarima: 2.0.4
2024-09-25 07:49:11,142:INFO:              psutil: 6.0.0
2024-09-25 07:49:11,142:INFO:          markupsafe: 2.1.5
2024-09-25 07:49:11,142:INFO:             pickle5: Not installed
2024-09-25 07:49:11,142:INFO:         cloudpickle: 3.0.0
2024-09-25 07:49:11,142:INFO:         deprecation: 2.1.0
2024-09-25 07:49:11,142:INFO:              xxhash: 3.5.0
2024-09-25 07:49:11,142:INFO:           wurlitzer: 3.1.1
2024-09-25 07:49:11,142:INFO:PyCaret optional dependencies:
2024-09-25 07:49:11,149:INFO:                shap: 0.46.0
2024-09-25 07:49:11,149:INFO:           interpret: Not installed
2024-09-25 07:49:11,149:INFO:                umap: Not installed
2024-09-25 07:49:11,149:INFO:     ydata_profiling: 4.10.0
2024-09-25 07:49:11,149:INFO:  explainerdashboard: Not installed
2024-09-25 07:49:11,149:INFO:             autoviz: Not installed
2024-09-25 07:49:11,149:INFO:           fairlearn: Not installed
2024-09-25 07:49:11,149:INFO:          deepchecks: Not installed
2024-09-25 07:49:11,149:INFO:             xgboost: Not installed
2024-09-25 07:49:11,149:INFO:            catboost: Not installed
2024-09-25 07:49:11,149:INFO:              kmodes: Not installed
2024-09-25 07:49:11,149:INFO:             mlxtend: Not installed
2024-09-25 07:49:11,149:INFO:       statsforecast: Not installed
2024-09-25 07:49:11,149:INFO:        tune_sklearn: Not installed
2024-09-25 07:49:11,149:INFO:                 ray: Not installed
2024-09-25 07:49:11,149:INFO:            hyperopt: Not installed
2024-09-25 07:49:11,149:INFO:              optuna: Not installed
2024-09-25 07:49:11,149:INFO:               skopt: Not installed
2024-09-25 07:49:11,149:INFO:              mlflow: Not installed
2024-09-25 07:49:11,149:INFO:              gradio: Not installed
2024-09-25 07:49:11,149:INFO:             fastapi: Not installed
2024-09-25 07:49:11,149:INFO:             uvicorn: Not installed
2024-09-25 07:49:11,149:INFO:              m2cgen: Not installed
2024-09-25 07:49:11,149:INFO:           evidently: Not installed
2024-09-25 07:49:11,149:INFO:               fugue: Not installed
2024-09-25 07:49:11,149:INFO:           streamlit: Not installed
2024-09-25 07:49:11,149:INFO:             prophet: Not installed
2024-09-25 07:49:11,149:INFO:None
2024-09-25 07:49:11,149:INFO:Set up data.
2024-09-25 07:49:11,154:INFO:Set up folding strategy.
2024-09-25 07:49:11,154:INFO:Set up train/test split.
2024-09-25 07:49:11,159:INFO:Set up index.
2024-09-25 07:49:11,159:INFO:Assigning column types.
2024-09-25 07:49:11,160:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-25 07:49:11,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:49:11,181:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:49:11,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,217:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:49:11,217:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:49:11,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,229:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-25 07:49:11,249:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:49:11,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,261:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:49:11,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,292:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-25 07:49:11,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,358:INFO:Preparing preprocessing pipeline...
2024-09-25 07:49:11,359:INFO:Set up simple imputation.
2024-09-25 07:49:11,359:INFO:Set up encoding of categorical features.
2024-09-25 07:49:11,359:INFO:Set up feature normalization.
2024-09-25 07:49:11,387:INFO:Finished creating preprocessing pipeline.
2024-09-25 07:49:11,390:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Sex',
                                             'Age', 'SibSp', 'Parch', 'Fare',
                                             'FamilySize'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-25 07:49:11,390:INFO:Creating final display dataframe.
2024-09-25 07:49:11,463:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 13)
4        Transformed data shape         (891, 12)
5   Transformed train set shape         (623, 12)
6    Transformed test set shape         (268, 12)
7               Ignore features                 3
8              Numeric features                 8
9          Categorical features                 1
10     Rows with missing values             77.1%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              186f
2024-09-25 07:49:11,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:11,530:INFO:setup() successfully completed in 0.43s...............
2024-09-25 07:49:12,688:INFO:PyCaret ClassificationExperiment
2024-09-25 07:49:12,688:INFO:Logging name: clf-default-name
2024-09-25 07:49:12,688:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-25 07:49:12,688:INFO:version 3.3.2
2024-09-25 07:49:12,688:INFO:Initializing setup()
2024-09-25 07:49:12,688:INFO:self.USI: f095
2024-09-25 07:49:12,688:INFO:self._variable_keys: {'fix_imbalance', 'USI', 'log_plots_param', 'y', 'fold_groups_param', 'pipeline', 'fold_shuffle_param', '_ml_usecase', 'n_jobs_param', 'gpu_n_jobs_param', 'is_multiclass', 'idx', 'X', 'html_param', 'y_test', 'target_param', 'data', 'gpu_param', '_available_plots', 'exp_name_log', 'X_train', 'logging_param', 'X_test', 'seed', 'memory', 'fold_generator', 'y_train', 'exp_id'}
2024-09-25 07:49:12,688:INFO:Checking environment
2024-09-25 07:49:12,688:INFO:python_version: 3.10.12
2024-09-25 07:49:12,688:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-25 07:49:12,689:INFO:machine: arm64
2024-09-25 07:49:12,689:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:49:12,689:INFO:Memory: svmem(total=17179869184, available=3734208512, percent=78.3, used=6360072192, free=108937216, active=3632611328, inactive=3559899136, wired=2727460864)
2024-09-25 07:49:12,689:INFO:Physical Core: 10
2024-09-25 07:49:12,689:INFO:Logical Core: 10
2024-09-25 07:49:12,689:INFO:Checking libraries
2024-09-25 07:49:12,689:INFO:System:
2024-09-25 07:49:12,689:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-25 07:49:12,689:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-25 07:49:12,689:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-25 07:49:12,689:INFO:PyCaret required dependencies:
2024-09-25 07:49:12,689:INFO:                 pip: 23.0.1
2024-09-25 07:49:12,689:INFO:          setuptools: 65.5.0
2024-09-25 07:49:12,689:INFO:             pycaret: 3.3.2
2024-09-25 07:49:12,689:INFO:             IPython: 8.27.0
2024-09-25 07:49:12,689:INFO:          ipywidgets: 8.1.5
2024-09-25 07:49:12,689:INFO:                tqdm: 4.66.5
2024-09-25 07:49:12,689:INFO:               numpy: 1.26.4
2024-09-25 07:49:12,689:INFO:              pandas: 2.1.4
2024-09-25 07:49:12,689:INFO:              jinja2: 3.1.4
2024-09-25 07:49:12,689:INFO:               scipy: 1.11.4
2024-09-25 07:49:12,689:INFO:              joblib: 1.3.2
2024-09-25 07:49:12,689:INFO:             sklearn: 1.4.2
2024-09-25 07:49:12,689:INFO:                pyod: 2.0.2
2024-09-25 07:49:12,689:INFO:            imblearn: 0.12.3
2024-09-25 07:49:12,689:INFO:   category_encoders: 2.6.3
2024-09-25 07:49:12,689:INFO:            lightgbm: 4.5.0
2024-09-25 07:49:12,689:INFO:               numba: 0.60.0
2024-09-25 07:49:12,689:INFO:            requests: 2.32.3
2024-09-25 07:49:12,689:INFO:          matplotlib: 3.7.5
2024-09-25 07:49:12,689:INFO:          scikitplot: 0.3.7
2024-09-25 07:49:12,689:INFO:         yellowbrick: 1.5
2024-09-25 07:49:12,689:INFO:              plotly: 5.24.1
2024-09-25 07:49:12,689:INFO:    plotly-resampler: Not installed
2024-09-25 07:49:12,689:INFO:             kaleido: 0.2.1
2024-09-25 07:49:12,689:INFO:           schemdraw: 0.15
2024-09-25 07:49:12,689:INFO:         statsmodels: 0.14.3
2024-09-25 07:49:12,689:INFO:              sktime: 0.26.0
2024-09-25 07:49:12,690:INFO:               tbats: 1.1.3
2024-09-25 07:49:12,690:INFO:            pmdarima: 2.0.4
2024-09-25 07:49:12,690:INFO:              psutil: 6.0.0
2024-09-25 07:49:12,690:INFO:          markupsafe: 2.1.5
2024-09-25 07:49:12,690:INFO:             pickle5: Not installed
2024-09-25 07:49:12,690:INFO:         cloudpickle: 3.0.0
2024-09-25 07:49:12,690:INFO:         deprecation: 2.1.0
2024-09-25 07:49:12,690:INFO:              xxhash: 3.5.0
2024-09-25 07:49:12,690:INFO:           wurlitzer: 3.1.1
2024-09-25 07:49:12,690:INFO:PyCaret optional dependencies:
2024-09-25 07:49:12,690:INFO:                shap: 0.46.0
2024-09-25 07:49:12,690:INFO:           interpret: Not installed
2024-09-25 07:49:12,690:INFO:                umap: Not installed
2024-09-25 07:49:12,690:INFO:     ydata_profiling: 4.10.0
2024-09-25 07:49:12,690:INFO:  explainerdashboard: Not installed
2024-09-25 07:49:12,690:INFO:             autoviz: Not installed
2024-09-25 07:49:12,690:INFO:           fairlearn: Not installed
2024-09-25 07:49:12,690:INFO:          deepchecks: Not installed
2024-09-25 07:49:12,690:INFO:             xgboost: Not installed
2024-09-25 07:49:12,690:INFO:            catboost: Not installed
2024-09-25 07:49:12,690:INFO:              kmodes: Not installed
2024-09-25 07:49:12,690:INFO:             mlxtend: Not installed
2024-09-25 07:49:12,690:INFO:       statsforecast: Not installed
2024-09-25 07:49:12,690:INFO:        tune_sklearn: Not installed
2024-09-25 07:49:12,690:INFO:                 ray: Not installed
2024-09-25 07:49:12,690:INFO:            hyperopt: Not installed
2024-09-25 07:49:12,690:INFO:              optuna: Not installed
2024-09-25 07:49:12,690:INFO:               skopt: Not installed
2024-09-25 07:49:12,690:INFO:              mlflow: Not installed
2024-09-25 07:49:12,690:INFO:              gradio: Not installed
2024-09-25 07:49:12,690:INFO:             fastapi: Not installed
2024-09-25 07:49:12,690:INFO:             uvicorn: Not installed
2024-09-25 07:49:12,690:INFO:              m2cgen: Not installed
2024-09-25 07:49:12,690:INFO:           evidently: Not installed
2024-09-25 07:49:12,690:INFO:               fugue: Not installed
2024-09-25 07:49:12,690:INFO:           streamlit: Not installed
2024-09-25 07:49:12,690:INFO:             prophet: Not installed
2024-09-25 07:49:12,690:INFO:None
2024-09-25 07:49:12,690:INFO:Set up data.
2024-09-25 07:49:12,696:INFO:Set up folding strategy.
2024-09-25 07:49:12,696:INFO:Set up train/test split.
2024-09-25 07:49:12,700:INFO:Set up index.
2024-09-25 07:49:12,700:INFO:Assigning column types.
2024-09-25 07:49:12,702:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-25 07:49:12,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:49:12,728:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:49:12,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-25 07:49:12,762:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:49:12,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,774:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-25 07:49:12,794:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:49:12,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,826:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-25 07:49:12,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,839:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-25 07:49:12,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:12,902:INFO:Preparing preprocessing pipeline...
2024-09-25 07:49:12,903:INFO:Set up simple imputation.
2024-09-25 07:49:12,904:INFO:Set up encoding of ordinal features.
2024-09-25 07:49:12,904:INFO:Set up encoding of categorical features.
2024-09-25 07:49:12,904:INFO:Set up feature normalization.
2024-09-25 07:49:12,935:INFO:Finished creating preprocessing pipeline.
2024-09-25 07:49:12,942:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-25 07:49:12,942:INFO:Creating final display dataframe.
2024-09-25 07:49:13,025:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              f095
2024-09-25 07:49:13,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:13,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:13,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:13,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-25 07:49:13,092:INFO:setup() successfully completed in 0.4s...............
2024-09-25 07:49:13,092:INFO:Initializing get_config()
2024-09-25 07:49:13,092:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, variable=X_train)
2024-09-25 07:49:13,092:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2024-09-25 07:49:13,094:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2024-09-25 07:49:13,099:INFO:Variable:  returned as      PassengerId  Pclass     Sex   Age  SibSp  Parch       Fare Embarked
748          749       1    male  19.0      1      0  53.099998        S
45            46       3    male   NaN      0      0   8.050000        S
28            29       3  female   NaN      0      0   7.879200        Q
633          634       1    male   NaN      0      0   0.000000        S
403          404       3    male  28.0      1      0  15.850000        S
..           ...     ...     ...   ...    ...    ...        ...      ...
476          477       2    male  34.0      1      0  21.000000        S
190          191       2  female  32.0      0      0  13.000000        S
736          737       3  female  48.0      1      3  34.375000        S
462          463       1    male  47.0      0      0  38.500000        S
136          137       1  female  19.0      0      2  26.283300        S

[623 rows x 8 columns]
2024-09-25 07:49:13,099:INFO:get_config() successfully completed......................................
2024-09-25 07:49:13,099:INFO:Initializing compare_models()
2024-09-25 07:49:13,099:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-09-25 07:49:13,099:INFO:Checking exceptions
2024-09-25 07:49:13,100:INFO:Preparing display monitor
2024-09-25 07:49:13,109:INFO:Initializing Logistic Regression
2024-09-25 07:49:13,109:INFO:Total runtime is 3.4650166829427083e-06 minutes
2024-09-25 07:49:13,109:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:13,110:INFO:Initializing create_model()
2024-09-25 07:49:13,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:13,110:INFO:Checking exceptions
2024-09-25 07:49:13,110:INFO:Importing libraries
2024-09-25 07:49:13,110:INFO:Copying training dataset
2024-09-25 07:49:13,112:INFO:Defining folds
2024-09-25 07:49:13,112:INFO:Declaring metric variables
2024-09-25 07:49:13,112:INFO:Importing untrained model
2024-09-25 07:49:13,112:INFO:Logistic Regression Imported successfully
2024-09-25 07:49:13,112:INFO:Starting cross validation
2024-09-25 07:49:13,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:15,086:INFO:Calculating mean and std
2024-09-25 07:49:15,088:INFO:Creating metrics dataframe
2024-09-25 07:49:15,091:INFO:Uploading results into container
2024-09-25 07:49:15,091:INFO:Uploading model into container now
2024-09-25 07:49:15,092:INFO:_master_model_container: 1
2024-09-25 07:49:15,092:INFO:_display_container: 2
2024-09-25 07:49:15,092:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-09-25 07:49:15,092:INFO:create_model() successfully completed......................................
2024-09-25 07:49:15,184:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:15,185:INFO:Creating metrics dataframe
2024-09-25 07:49:15,186:INFO:Initializing K Neighbors Classifier
2024-09-25 07:49:15,186:INFO:Total runtime is 0.03461461464564005 minutes
2024-09-25 07:49:15,186:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:15,186:INFO:Initializing create_model()
2024-09-25 07:49:15,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:15,186:INFO:Checking exceptions
2024-09-25 07:49:15,186:INFO:Importing libraries
2024-09-25 07:49:15,186:INFO:Copying training dataset
2024-09-25 07:49:15,188:INFO:Defining folds
2024-09-25 07:49:15,188:INFO:Declaring metric variables
2024-09-25 07:49:15,188:INFO:Importing untrained model
2024-09-25 07:49:15,188:INFO:K Neighbors Classifier Imported successfully
2024-09-25 07:49:15,188:INFO:Starting cross validation
2024-09-25 07:49:15,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:15,307:INFO:Calculating mean and std
2024-09-25 07:49:15,307:INFO:Creating metrics dataframe
2024-09-25 07:49:15,308:INFO:Uploading results into container
2024-09-25 07:49:15,308:INFO:Uploading model into container now
2024-09-25 07:49:15,308:INFO:_master_model_container: 2
2024-09-25 07:49:15,309:INFO:_display_container: 2
2024-09-25 07:49:15,309:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-09-25 07:49:15,309:INFO:create_model() successfully completed......................................
2024-09-25 07:49:15,351:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:15,352:INFO:Creating metrics dataframe
2024-09-25 07:49:15,353:INFO:Initializing Naive Bayes
2024-09-25 07:49:15,353:INFO:Total runtime is 0.03740116357803344 minutes
2024-09-25 07:49:15,353:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:15,353:INFO:Initializing create_model()
2024-09-25 07:49:15,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:15,353:INFO:Checking exceptions
2024-09-25 07:49:15,353:INFO:Importing libraries
2024-09-25 07:49:15,353:INFO:Copying training dataset
2024-09-25 07:49:15,355:INFO:Defining folds
2024-09-25 07:49:15,355:INFO:Declaring metric variables
2024-09-25 07:49:15,355:INFO:Importing untrained model
2024-09-25 07:49:15,355:INFO:Naive Bayes Imported successfully
2024-09-25 07:49:15,355:INFO:Starting cross validation
2024-09-25 07:49:15,355:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:15,435:INFO:Calculating mean and std
2024-09-25 07:49:15,436:INFO:Creating metrics dataframe
2024-09-25 07:49:15,436:INFO:Uploading results into container
2024-09-25 07:49:15,437:INFO:Uploading model into container now
2024-09-25 07:49:15,437:INFO:_master_model_container: 3
2024-09-25 07:49:15,437:INFO:_display_container: 2
2024-09-25 07:49:15,437:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-09-25 07:49:15,437:INFO:create_model() successfully completed......................................
2024-09-25 07:49:15,475:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:15,475:INFO:Creating metrics dataframe
2024-09-25 07:49:15,476:INFO:Initializing Decision Tree Classifier
2024-09-25 07:49:15,476:INFO:Total runtime is 0.03945811589558919 minutes
2024-09-25 07:49:15,476:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:15,476:INFO:Initializing create_model()
2024-09-25 07:49:15,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:15,476:INFO:Checking exceptions
2024-09-25 07:49:15,477:INFO:Importing libraries
2024-09-25 07:49:15,477:INFO:Copying training dataset
2024-09-25 07:49:15,478:INFO:Defining folds
2024-09-25 07:49:15,478:INFO:Declaring metric variables
2024-09-25 07:49:15,478:INFO:Importing untrained model
2024-09-25 07:49:15,478:INFO:Decision Tree Classifier Imported successfully
2024-09-25 07:49:15,478:INFO:Starting cross validation
2024-09-25 07:49:15,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:15,556:INFO:Calculating mean and std
2024-09-25 07:49:15,557:INFO:Creating metrics dataframe
2024-09-25 07:49:15,558:INFO:Uploading results into container
2024-09-25 07:49:15,558:INFO:Uploading model into container now
2024-09-25 07:49:15,558:INFO:_master_model_container: 4
2024-09-25 07:49:15,558:INFO:_display_container: 2
2024-09-25 07:49:15,558:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-09-25 07:49:15,558:INFO:create_model() successfully completed......................................
2024-09-25 07:49:15,597:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:15,597:INFO:Creating metrics dataframe
2024-09-25 07:49:15,598:INFO:Initializing SVM - Linear Kernel
2024-09-25 07:49:15,598:INFO:Total runtime is 0.04148706595102945 minutes
2024-09-25 07:49:15,598:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:15,598:INFO:Initializing create_model()
2024-09-25 07:49:15,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:15,598:INFO:Checking exceptions
2024-09-25 07:49:15,598:INFO:Importing libraries
2024-09-25 07:49:15,598:INFO:Copying training dataset
2024-09-25 07:49:15,600:INFO:Defining folds
2024-09-25 07:49:15,600:INFO:Declaring metric variables
2024-09-25 07:49:15,600:INFO:Importing untrained model
2024-09-25 07:49:15,600:INFO:SVM - Linear Kernel Imported successfully
2024-09-25 07:49:15,600:INFO:Starting cross validation
2024-09-25 07:49:15,601:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:15,679:INFO:Calculating mean and std
2024-09-25 07:49:15,679:INFO:Creating metrics dataframe
2024-09-25 07:49:15,680:INFO:Uploading results into container
2024-09-25 07:49:15,680:INFO:Uploading model into container now
2024-09-25 07:49:15,680:INFO:_master_model_container: 5
2024-09-25 07:49:15,680:INFO:_display_container: 2
2024-09-25 07:49:15,681:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-09-25 07:49:15,681:INFO:create_model() successfully completed......................................
2024-09-25 07:49:15,720:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:15,720:INFO:Creating metrics dataframe
2024-09-25 07:49:15,721:INFO:Initializing Ridge Classifier
2024-09-25 07:49:15,721:INFO:Total runtime is 0.04354131619135538 minutes
2024-09-25 07:49:15,721:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:15,721:INFO:Initializing create_model()
2024-09-25 07:49:15,721:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:15,721:INFO:Checking exceptions
2024-09-25 07:49:15,722:INFO:Importing libraries
2024-09-25 07:49:15,722:INFO:Copying training dataset
2024-09-25 07:49:15,723:INFO:Defining folds
2024-09-25 07:49:15,723:INFO:Declaring metric variables
2024-09-25 07:49:15,723:INFO:Importing untrained model
2024-09-25 07:49:15,723:INFO:Ridge Classifier Imported successfully
2024-09-25 07:49:15,723:INFO:Starting cross validation
2024-09-25 07:49:15,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:15,801:INFO:Calculating mean and std
2024-09-25 07:49:15,802:INFO:Creating metrics dataframe
2024-09-25 07:49:15,803:INFO:Uploading results into container
2024-09-25 07:49:15,803:INFO:Uploading model into container now
2024-09-25 07:49:15,803:INFO:_master_model_container: 6
2024-09-25 07:49:15,803:INFO:_display_container: 2
2024-09-25 07:49:15,803:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-09-25 07:49:15,803:INFO:create_model() successfully completed......................................
2024-09-25 07:49:15,842:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:15,842:INFO:Creating metrics dataframe
2024-09-25 07:49:15,843:INFO:Initializing Random Forest Classifier
2024-09-25 07:49:15,843:INFO:Total runtime is 0.04556837876637776 minutes
2024-09-25 07:49:15,843:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:15,843:INFO:Initializing create_model()
2024-09-25 07:49:15,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:15,843:INFO:Checking exceptions
2024-09-25 07:49:15,843:INFO:Importing libraries
2024-09-25 07:49:15,843:INFO:Copying training dataset
2024-09-25 07:49:15,845:INFO:Defining folds
2024-09-25 07:49:15,845:INFO:Declaring metric variables
2024-09-25 07:49:15,845:INFO:Importing untrained model
2024-09-25 07:49:15,845:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:49:15,845:INFO:Starting cross validation
2024-09-25 07:49:15,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:16,077:INFO:Calculating mean and std
2024-09-25 07:49:16,078:INFO:Creating metrics dataframe
2024-09-25 07:49:16,078:INFO:Uploading results into container
2024-09-25 07:49:16,079:INFO:Uploading model into container now
2024-09-25 07:49:16,079:INFO:_master_model_container: 7
2024-09-25 07:49:16,079:INFO:_display_container: 2
2024-09-25 07:49:16,079:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:49:16,079:INFO:create_model() successfully completed......................................
2024-09-25 07:49:16,119:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:16,119:INFO:Creating metrics dataframe
2024-09-25 07:49:16,121:INFO:Initializing Quadratic Discriminant Analysis
2024-09-25 07:49:16,121:INFO:Total runtime is 0.05020027955373128 minutes
2024-09-25 07:49:16,121:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:16,121:INFO:Initializing create_model()
2024-09-25 07:49:16,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:16,121:INFO:Checking exceptions
2024-09-25 07:49:16,121:INFO:Importing libraries
2024-09-25 07:49:16,121:INFO:Copying training dataset
2024-09-25 07:49:16,122:INFO:Defining folds
2024-09-25 07:49:16,123:INFO:Declaring metric variables
2024-09-25 07:49:16,123:INFO:Importing untrained model
2024-09-25 07:49:16,123:INFO:Quadratic Discriminant Analysis Imported successfully
2024-09-25 07:49:16,123:INFO:Starting cross validation
2024-09-25 07:49:16,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:16,152:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:49:16,153:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:49:16,153:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:49:16,156:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:49:16,161:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:49:16,163:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:49:16,166:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:49:16,167:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:49:16,171:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:49:16,172:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-25 07:49:16,193:INFO:Calculating mean and std
2024-09-25 07:49:16,193:INFO:Creating metrics dataframe
2024-09-25 07:49:16,194:INFO:Uploading results into container
2024-09-25 07:49:16,194:INFO:Uploading model into container now
2024-09-25 07:49:16,194:INFO:_master_model_container: 8
2024-09-25 07:49:16,194:INFO:_display_container: 2
2024-09-25 07:49:16,194:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-09-25 07:49:16,194:INFO:create_model() successfully completed......................................
2024-09-25 07:49:16,238:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:16,238:INFO:Creating metrics dataframe
2024-09-25 07:49:16,239:INFO:Initializing Ada Boost Classifier
2024-09-25 07:49:16,239:INFO:Total runtime is 0.052174699306488034 minutes
2024-09-25 07:49:16,239:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:16,239:INFO:Initializing create_model()
2024-09-25 07:49:16,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:16,240:INFO:Checking exceptions
2024-09-25 07:49:16,240:INFO:Importing libraries
2024-09-25 07:49:16,240:INFO:Copying training dataset
2024-09-25 07:49:16,241:INFO:Defining folds
2024-09-25 07:49:16,241:INFO:Declaring metric variables
2024-09-25 07:49:16,241:INFO:Importing untrained model
2024-09-25 07:49:16,241:INFO:Ada Boost Classifier Imported successfully
2024-09-25 07:49:16,241:INFO:Starting cross validation
2024-09-25 07:49:16,242:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:16,270:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:49:16,270:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:49:16,270:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:49:16,276:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:49:16,279:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:49:16,279:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:49:16,280:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:49:16,281:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:49:16,299:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:49:16,320:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-25 07:49:16,386:INFO:Calculating mean and std
2024-09-25 07:49:16,387:INFO:Creating metrics dataframe
2024-09-25 07:49:16,388:INFO:Uploading results into container
2024-09-25 07:49:16,388:INFO:Uploading model into container now
2024-09-25 07:49:16,388:INFO:_master_model_container: 9
2024-09-25 07:49:16,388:INFO:_display_container: 2
2024-09-25 07:49:16,388:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-09-25 07:49:16,388:INFO:create_model() successfully completed......................................
2024-09-25 07:49:16,428:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:16,428:INFO:Creating metrics dataframe
2024-09-25 07:49:16,429:INFO:Initializing Gradient Boosting Classifier
2024-09-25 07:49:16,429:INFO:Total runtime is 0.055335799853006996 minutes
2024-09-25 07:49:16,429:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:16,429:INFO:Initializing create_model()
2024-09-25 07:49:16,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:16,429:INFO:Checking exceptions
2024-09-25 07:49:16,429:INFO:Importing libraries
2024-09-25 07:49:16,429:INFO:Copying training dataset
2024-09-25 07:49:16,431:INFO:Defining folds
2024-09-25 07:49:16,431:INFO:Declaring metric variables
2024-09-25 07:49:16,431:INFO:Importing untrained model
2024-09-25 07:49:16,431:INFO:Gradient Boosting Classifier Imported successfully
2024-09-25 07:49:16,431:INFO:Starting cross validation
2024-09-25 07:49:16,432:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:16,591:INFO:Calculating mean and std
2024-09-25 07:49:16,592:INFO:Creating metrics dataframe
2024-09-25 07:49:16,593:INFO:Uploading results into container
2024-09-25 07:49:16,593:INFO:Uploading model into container now
2024-09-25 07:49:16,593:INFO:_master_model_container: 10
2024-09-25 07:49:16,593:INFO:_display_container: 2
2024-09-25 07:49:16,593:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-09-25 07:49:16,593:INFO:create_model() successfully completed......................................
2024-09-25 07:49:16,631:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:16,631:INFO:Creating metrics dataframe
2024-09-25 07:49:16,632:INFO:Initializing Linear Discriminant Analysis
2024-09-25 07:49:16,632:INFO:Total runtime is 0.05872342983881632 minutes
2024-09-25 07:49:16,632:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:16,632:INFO:Initializing create_model()
2024-09-25 07:49:16,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:16,632:INFO:Checking exceptions
2024-09-25 07:49:16,632:INFO:Importing libraries
2024-09-25 07:49:16,632:INFO:Copying training dataset
2024-09-25 07:49:16,634:INFO:Defining folds
2024-09-25 07:49:16,634:INFO:Declaring metric variables
2024-09-25 07:49:16,634:INFO:Importing untrained model
2024-09-25 07:49:16,634:INFO:Linear Discriminant Analysis Imported successfully
2024-09-25 07:49:16,634:INFO:Starting cross validation
2024-09-25 07:49:16,635:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:16,702:INFO:Calculating mean and std
2024-09-25 07:49:16,702:INFO:Creating metrics dataframe
2024-09-25 07:49:16,703:INFO:Uploading results into container
2024-09-25 07:49:16,703:INFO:Uploading model into container now
2024-09-25 07:49:16,703:INFO:_master_model_container: 11
2024-09-25 07:49:16,703:INFO:_display_container: 2
2024-09-25 07:49:16,703:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-09-25 07:49:16,704:INFO:create_model() successfully completed......................................
2024-09-25 07:49:16,742:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:16,742:INFO:Creating metrics dataframe
2024-09-25 07:49:16,743:INFO:Initializing Extra Trees Classifier
2024-09-25 07:49:16,743:INFO:Total runtime is 0.06057161490122477 minutes
2024-09-25 07:49:16,743:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:16,743:INFO:Initializing create_model()
2024-09-25 07:49:16,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:16,743:INFO:Checking exceptions
2024-09-25 07:49:16,743:INFO:Importing libraries
2024-09-25 07:49:16,743:INFO:Copying training dataset
2024-09-25 07:49:16,745:INFO:Defining folds
2024-09-25 07:49:16,745:INFO:Declaring metric variables
2024-09-25 07:49:16,745:INFO:Importing untrained model
2024-09-25 07:49:16,745:INFO:Extra Trees Classifier Imported successfully
2024-09-25 07:49:16,745:INFO:Starting cross validation
2024-09-25 07:49:16,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:16,950:INFO:Calculating mean and std
2024-09-25 07:49:16,950:INFO:Creating metrics dataframe
2024-09-25 07:49:16,951:INFO:Uploading results into container
2024-09-25 07:49:16,951:INFO:Uploading model into container now
2024-09-25 07:49:16,952:INFO:_master_model_container: 12
2024-09-25 07:49:16,952:INFO:_display_container: 2
2024-09-25 07:49:16,952:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-09-25 07:49:16,952:INFO:create_model() successfully completed......................................
2024-09-25 07:49:16,990:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:16,990:INFO:Creating metrics dataframe
2024-09-25 07:49:16,991:INFO:Initializing Light Gradient Boosting Machine
2024-09-25 07:49:16,991:INFO:Total runtime is 0.06470685005187989 minutes
2024-09-25 07:49:16,991:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:16,991:INFO:Initializing create_model()
2024-09-25 07:49:16,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:16,991:INFO:Checking exceptions
2024-09-25 07:49:16,991:INFO:Importing libraries
2024-09-25 07:49:16,991:INFO:Copying training dataset
2024-09-25 07:49:16,993:INFO:Defining folds
2024-09-25 07:49:16,993:INFO:Declaring metric variables
2024-09-25 07:49:16,993:INFO:Importing untrained model
2024-09-25 07:49:16,993:INFO:Light Gradient Boosting Machine Imported successfully
2024-09-25 07:49:16,993:INFO:Starting cross validation
2024-09-25 07:49:16,994:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:19,764:INFO:Calculating mean and std
2024-09-25 07:49:19,764:INFO:Creating metrics dataframe
2024-09-25 07:49:19,765:INFO:Uploading results into container
2024-09-25 07:49:19,765:INFO:Uploading model into container now
2024-09-25 07:49:19,766:INFO:_master_model_container: 13
2024-09-25 07:49:19,766:INFO:_display_container: 2
2024-09-25 07:49:19,766:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-09-25 07:49:19,766:INFO:create_model() successfully completed......................................
2024-09-25 07:49:19,804:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:19,804:INFO:Creating metrics dataframe
2024-09-25 07:49:19,805:INFO:Initializing Dummy Classifier
2024-09-25 07:49:19,805:INFO:Total runtime is 0.11160988012949627 minutes
2024-09-25 07:49:19,805:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:19,806:INFO:Initializing create_model()
2024-09-25 07:49:19,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28506d3c0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:19,806:INFO:Checking exceptions
2024-09-25 07:49:19,806:INFO:Importing libraries
2024-09-25 07:49:19,806:INFO:Copying training dataset
2024-09-25 07:49:19,807:INFO:Defining folds
2024-09-25 07:49:19,807:INFO:Declaring metric variables
2024-09-25 07:49:19,807:INFO:Importing untrained model
2024-09-25 07:49:19,807:INFO:Dummy Classifier Imported successfully
2024-09-25 07:49:19,807:INFO:Starting cross validation
2024-09-25 07:49:19,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:19,848:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:49:19,848:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:49:19,850:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:49:19,851:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:49:19,852:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:49:19,855:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:49:19,860:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:49:19,860:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:49:19,866:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:49:19,868:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-25 07:49:19,875:INFO:Calculating mean and std
2024-09-25 07:49:19,875:INFO:Creating metrics dataframe
2024-09-25 07:49:19,876:INFO:Uploading results into container
2024-09-25 07:49:19,876:INFO:Uploading model into container now
2024-09-25 07:49:19,876:INFO:_master_model_container: 14
2024-09-25 07:49:19,876:INFO:_display_container: 2
2024-09-25 07:49:19,876:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-09-25 07:49:19,876:INFO:create_model() successfully completed......................................
2024-09-25 07:49:19,914:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:19,914:INFO:Creating metrics dataframe
2024-09-25 07:49:19,918:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-09-25 07:49:19,919:INFO:Initializing create_model()
2024-09-25 07:49:19,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:19,919:INFO:Checking exceptions
2024-09-25 07:49:19,919:INFO:Importing libraries
2024-09-25 07:49:19,919:INFO:Copying training dataset
2024-09-25 07:49:19,920:INFO:Defining folds
2024-09-25 07:49:19,920:INFO:Declaring metric variables
2024-09-25 07:49:19,920:INFO:Importing untrained model
2024-09-25 07:49:19,920:INFO:Declaring custom model
2024-09-25 07:49:19,921:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:49:19,921:INFO:Cross validation set to False
2024-09-25 07:49:19,921:INFO:Fitting Model
2024-09-25 07:49:20,020:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:49:20,020:INFO:create_model() successfully completed......................................
2024-09-25 07:49:20,063:INFO:_master_model_container: 14
2024-09-25 07:49:20,063:INFO:_display_container: 2
2024-09-25 07:49:20,063:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:49:20,063:INFO:compare_models() successfully completed......................................
2024-09-25 07:49:20,066:INFO:Initializing tune_model()
2024-09-25 07:49:20,066:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>)
2024-09-25 07:49:20,066:INFO:Checking exceptions
2024-09-25 07:49:20,067:INFO:Copying training dataset
2024-09-25 07:49:20,068:INFO:Checking base model
2024-09-25 07:49:20,068:INFO:Base model : Random Forest Classifier
2024-09-25 07:49:20,069:INFO:Declaring metric variables
2024-09-25 07:49:20,069:INFO:Defining Hyperparameters
2024-09-25 07:49:20,112:INFO:Tuning with n_jobs=-1
2024-09-25 07:49:20,112:INFO:Initializing RandomizedSearchCV
2024-09-25 07:49:22,852:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2024-09-25 07:49:22,853:INFO:Hyperparameter search completed
2024-09-25 07:49:22,853:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:22,853:INFO:Initializing create_model()
2024-09-25 07:49:22,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2854ee230>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2024-09-25 07:49:22,853:INFO:Checking exceptions
2024-09-25 07:49:22,853:INFO:Importing libraries
2024-09-25 07:49:22,853:INFO:Copying training dataset
2024-09-25 07:49:22,855:INFO:Defining folds
2024-09-25 07:49:22,855:INFO:Declaring metric variables
2024-09-25 07:49:22,855:INFO:Importing untrained model
2024-09-25 07:49:22,855:INFO:Declaring custom model
2024-09-25 07:49:22,855:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:49:22,856:INFO:Starting cross validation
2024-09-25 07:49:22,856:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:23,244:INFO:Calculating mean and std
2024-09-25 07:49:23,244:INFO:Creating metrics dataframe
2024-09-25 07:49:23,245:INFO:Finalizing model
2024-09-25 07:49:23,445:INFO:Uploading results into container
2024-09-25 07:49:23,446:INFO:Uploading model into container now
2024-09-25 07:49:23,446:INFO:_master_model_container: 15
2024-09-25 07:49:23,446:INFO:_display_container: 3
2024-09-25 07:49:23,446:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:49:23,446:INFO:create_model() successfully completed......................................
2024-09-25 07:49:23,484:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:23,484:INFO:choose_better activated
2024-09-25 07:49:23,484:INFO:SubProcess create_model() called ==================================
2024-09-25 07:49:23,484:INFO:Initializing create_model()
2024-09-25 07:49:23,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:23,484:INFO:Checking exceptions
2024-09-25 07:49:23,485:INFO:Importing libraries
2024-09-25 07:49:23,485:INFO:Copying training dataset
2024-09-25 07:49:23,486:INFO:Defining folds
2024-09-25 07:49:23,486:INFO:Declaring metric variables
2024-09-25 07:49:23,486:INFO:Importing untrained model
2024-09-25 07:49:23,486:INFO:Declaring custom model
2024-09-25 07:49:23,487:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:49:23,487:INFO:Starting cross validation
2024-09-25 07:49:23,487:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-25 07:49:23,727:INFO:Calculating mean and std
2024-09-25 07:49:23,728:INFO:Creating metrics dataframe
2024-09-25 07:49:23,728:INFO:Finalizing model
2024-09-25 07:49:23,826:INFO:Uploading results into container
2024-09-25 07:49:23,826:INFO:Uploading model into container now
2024-09-25 07:49:23,826:INFO:_master_model_container: 16
2024-09-25 07:49:23,826:INFO:_display_container: 4
2024-09-25 07:49:23,826:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:49:23,826:INFO:create_model() successfully completed......................................
2024-09-25 07:49:23,864:INFO:SubProcess create_model() end ==================================
2024-09-25 07:49:23,864:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8202
2024-09-25 07:49:23,865:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8235
2024-09-25 07:49:23,865:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2024-09-25 07:49:23,865:INFO:choose_better completed
2024-09-25 07:49:23,869:INFO:_master_model_container: 16
2024-09-25 07:49:23,869:INFO:_display_container: 3
2024-09-25 07:49:23,869:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:49:23,869:INFO:tune_model() successfully completed......................................
2024-09-25 07:49:23,908:INFO:Initializing finalize_model()
2024-09-25 07:49:23,908:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-09-25 07:49:23,908:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-25 07:49:23,909:INFO:Initializing create_model()
2024-09-25 07:49:23,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10297a0b0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-09-25 07:49:23,909:INFO:Checking exceptions
2024-09-25 07:49:23,909:INFO:Importing libraries
2024-09-25 07:49:23,909:INFO:Copying training dataset
2024-09-25 07:49:23,909:INFO:Defining folds
2024-09-25 07:49:23,909:INFO:Declaring metric variables
2024-09-25 07:49:23,909:INFO:Importing untrained model
2024-09-25 07:49:23,909:INFO:Declaring custom model
2024-09-25 07:49:23,910:INFO:Random Forest Classifier Imported successfully
2024-09-25 07:49:23,910:INFO:Cross validation set to False
2024-09-25 07:49:23,910:INFO:Fitting Model
2024-09-25 07:49:24,118:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:49:24,118:INFO:create_model() successfully completed......................................
2024-09-25 07:49:24,155:INFO:_master_model_container: 16
2024-09-25 07:49:24,155:INFO:_display_container: 3
2024-09-25 07:49:24,163:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:49:24,163:INFO:finalize_model() successfully completed......................................
2024-09-25 07:49:24,212:INFO:Initializing save_model()
2024-09-25 07:49:24,212:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-25 07:49:24,212:INFO:Adding model into prep_pipe
2024-09-25 07:49:24,212:WARNING:Only Model saved as it was a pipeline.
2024-09-25 07:49:24,258:INFO:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model.pkl saved in current working directory
2024-09-25 07:49:24,265:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-25 07:49:24,265:INFO:save_model() successfully completed......................................
