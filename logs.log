2024-09-23 19:10:41,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:10:41,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:10:41,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:10:41,542:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:10:53,773:INFO:PyCaret ClassificationExperiment
2024-09-23 19:10:53,773:INFO:Logging name: clf-default-name
2024-09-23 19:10:53,773:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-23 19:10:53,773:INFO:version 3.3.2
2024-09-23 19:10:53,773:INFO:Initializing setup()
2024-09-23 19:10:53,773:INFO:self.USI: f51e
2024-09-23 19:10:53,773:INFO:self._variable_keys: {'X_test', 'fold_shuffle_param', 'y_train', 'X', 'n_jobs_param', 'fold_generator', 'logging_param', '_available_plots', 'pipeline', 'fold_groups_param', 'seed', 'X_train', 'y', 'is_multiclass', 'memory', 'gpu_param', 'log_plots_param', '_ml_usecase', 'y_test', 'data', 'html_param', 'fix_imbalance', 'idx', 'USI', 'gpu_n_jobs_param', 'target_param', 'exp_id', 'exp_name_log'}
2024-09-23 19:10:53,773:INFO:Checking environment
2024-09-23 19:10:53,773:INFO:python_version: 3.10.12
2024-09-23 19:10:53,773:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-23 19:10:53,773:INFO:machine: arm64
2024-09-23 19:10:53,803:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:10:53,803:INFO:Memory: svmem(total=17179869184, available=3631890432, percent=78.9, used=6250004480, free=67485696, active=3575005184, inactive=3530768384, wired=2674999296)
2024-09-23 19:10:53,803:INFO:Physical Core: 10
2024-09-23 19:10:53,803:INFO:Logical Core: 10
2024-09-23 19:10:53,803:INFO:Checking libraries
2024-09-23 19:10:53,803:INFO:System:
2024-09-23 19:10:53,803:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-23 19:10:53,803:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-23 19:10:53,803:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:10:53,804:INFO:PyCaret required dependencies:
2024-09-23 19:21:28,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:28,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:28,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:28,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:29,481:INFO:PyCaret ClassificationExperiment
2024-09-23 19:21:29,481:INFO:Logging name: clf-default-name
2024-09-23 19:21:29,481:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-23 19:21:29,481:INFO:version 3.3.2
2024-09-23 19:21:29,481:INFO:Initializing setup()
2024-09-23 19:21:29,482:INFO:self.USI: 0e42
2024-09-23 19:21:29,482:INFO:self._variable_keys: {'pipeline', 'y_train', 'target_param', 'gpu_param', 'idx', 'gpu_n_jobs_param', 'memory', 'fix_imbalance', 'exp_id', '_ml_usecase', 'y_test', 'seed', 'USI', 'log_plots_param', 'data', 'exp_name_log', 'html_param', 'logging_param', '_available_plots', 'fold_groups_param', 'y', 'is_multiclass', 'n_jobs_param', 'fold_shuffle_param', 'X_test', 'fold_generator', 'X_train', 'X'}
2024-09-23 19:21:29,482:INFO:Checking environment
2024-09-23 19:21:29,482:INFO:python_version: 3.10.12
2024-09-23 19:21:29,482:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-23 19:21:29,482:INFO:machine: arm64
2024-09-23 19:21:29,513:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:21:29,514:INFO:Memory: svmem(total=17179869184, available=6429392896, percent=62.6, used=6341591040, free=2897444864, active=3538255872, inactive=3422011392, wired=2803335168)
2024-09-23 19:21:29,514:INFO:Physical Core: 10
2024-09-23 19:21:29,514:INFO:Logical Core: 10
2024-09-23 19:21:29,514:INFO:Checking libraries
2024-09-23 19:21:29,514:INFO:System:
2024-09-23 19:21:29,514:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-23 19:21:29,514:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-23 19:21:29,514:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:21:29,515:INFO:PyCaret required dependencies:
2024-09-23 19:21:30,427:INFO:                 pip: 23.0.1
2024-09-23 19:21:30,427:INFO:          setuptools: 65.5.0
2024-09-23 19:21:30,427:INFO:             pycaret: 3.3.2
2024-09-23 19:21:30,427:INFO:             IPython: 8.27.0
2024-09-23 19:21:30,427:INFO:          ipywidgets: 8.1.5
2024-09-23 19:21:30,427:INFO:                tqdm: 4.66.5
2024-09-23 19:21:30,427:INFO:               numpy: 1.26.4
2024-09-23 19:21:30,427:INFO:              pandas: 2.1.4
2024-09-23 19:21:30,427:INFO:              jinja2: 3.1.4
2024-09-23 19:21:30,427:INFO:               scipy: 1.11.4
2024-09-23 19:21:30,427:INFO:              joblib: 1.3.2
2024-09-23 19:21:30,427:INFO:             sklearn: 1.4.2
2024-09-23 19:21:30,427:INFO:                pyod: 2.0.2
2024-09-23 19:21:30,427:INFO:            imblearn: 0.12.3
2024-09-23 19:21:30,427:INFO:   category_encoders: 2.6.3
2024-09-23 19:21:30,427:INFO:            lightgbm: 4.5.0
2024-09-23 19:21:30,427:INFO:               numba: 0.60.0
2024-09-23 19:21:30,427:INFO:            requests: 2.32.3
2024-09-23 19:21:30,427:INFO:          matplotlib: 3.7.5
2024-09-23 19:21:30,427:INFO:          scikitplot: 0.3.7
2024-09-23 19:21:30,427:INFO:         yellowbrick: 1.5
2024-09-23 19:21:30,427:INFO:              plotly: 5.24.1
2024-09-23 19:21:30,427:INFO:    plotly-resampler: Not installed
2024-09-23 19:21:30,427:INFO:             kaleido: 0.2.1
2024-09-23 19:21:30,427:INFO:           schemdraw: 0.15
2024-09-23 19:21:30,427:INFO:         statsmodels: 0.14.3
2024-09-23 19:21:30,427:INFO:              sktime: 0.26.0
2024-09-23 19:21:30,427:INFO:               tbats: 1.1.3
2024-09-23 19:21:30,427:INFO:            pmdarima: 2.0.4
2024-09-23 19:21:30,427:INFO:              psutil: 6.0.0
2024-09-23 19:21:30,427:INFO:          markupsafe: 2.1.5
2024-09-23 19:21:30,427:INFO:             pickle5: Not installed
2024-09-23 19:21:30,428:INFO:         cloudpickle: 3.0.0
2024-09-23 19:21:30,428:INFO:         deprecation: 2.1.0
2024-09-23 19:21:30,428:INFO:              xxhash: 3.5.0
2024-09-23 19:21:30,428:INFO:           wurlitzer: 3.1.1
2024-09-23 19:21:30,428:INFO:PyCaret optional dependencies:
2024-09-23 19:21:30,437:INFO:                shap: 0.46.0
2024-09-23 19:21:30,437:INFO:           interpret: Not installed
2024-09-23 19:21:30,437:INFO:                umap: Not installed
2024-09-23 19:21:30,437:INFO:     ydata_profiling: Not installed
2024-09-23 19:21:30,437:INFO:  explainerdashboard: Not installed
2024-09-23 19:21:30,437:INFO:             autoviz: Not installed
2024-09-23 19:21:30,437:INFO:           fairlearn: Not installed
2024-09-23 19:21:30,437:INFO:          deepchecks: Not installed
2024-09-23 19:21:30,437:INFO:             xgboost: Not installed
2024-09-23 19:21:30,437:INFO:            catboost: Not installed
2024-09-23 19:21:30,437:INFO:              kmodes: Not installed
2024-09-23 19:21:30,437:INFO:             mlxtend: Not installed
2024-09-23 19:21:30,437:INFO:       statsforecast: Not installed
2024-09-23 19:21:30,437:INFO:        tune_sklearn: Not installed
2024-09-23 19:21:30,438:INFO:                 ray: Not installed
2024-09-23 19:21:30,438:INFO:            hyperopt: Not installed
2024-09-23 19:21:30,438:INFO:              optuna: Not installed
2024-09-23 19:21:30,438:INFO:               skopt: Not installed
2024-09-23 19:21:30,438:INFO:              mlflow: Not installed
2024-09-23 19:21:30,438:INFO:              gradio: Not installed
2024-09-23 19:21:30,438:INFO:             fastapi: Not installed
2024-09-23 19:21:30,438:INFO:             uvicorn: Not installed
2024-09-23 19:21:30,438:INFO:              m2cgen: Not installed
2024-09-23 19:21:30,438:INFO:           evidently: Not installed
2024-09-23 19:21:30,438:INFO:               fugue: Not installed
2024-09-23 19:21:30,438:INFO:           streamlit: Not installed
2024-09-23 19:21:30,438:INFO:             prophet: Not installed
2024-09-23 19:21:30,438:INFO:None
2024-09-23 19:21:30,438:INFO:Set up data.
2024-09-23 19:21:30,445:INFO:Set up folding strategy.
2024-09-23 19:21:30,445:INFO:Set up train/test split.
2024-09-23 19:21:30,752:INFO:Set up index.
2024-09-23 19:21:30,752:INFO:Assigning column types.
2024-09-23 19:21:30,755:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-23 19:21:30,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,790:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,831:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,831:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,844:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-23 19:21:30,863:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,895:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:21:30,908:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,908:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-23 19:21:30,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:30,973:INFO:Preparing preprocessing pipeline...
2024-09-23 19:21:30,974:INFO:Set up simple imputation.
2024-09-23 19:21:30,975:INFO:Set up encoding of ordinal features.
2024-09-23 19:21:30,975:INFO:Set up encoding of categorical features.
2024-09-23 19:21:30,976:INFO:Set up feature normalization.
2024-09-23 19:21:31,010:INFO:Finished creating preprocessing pipeline.
2024-09-23 19:21:31,018:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-23 19:21:31,018:INFO:Creating final display dataframe.
2024-09-23 19:21:31,103:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              0e42
2024-09-23 19:21:31,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:31,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:31,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:31,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:21:31,169:INFO:setup() successfully completed in 1.69s...............
2024-09-23 19:21:43,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:43,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:43,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:21:43,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:23:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:23:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:23:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:23:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:23:05,519:INFO:PyCaret ClassificationExperiment
2024-09-23 19:23:05,519:INFO:Logging name: clf-default-name
2024-09-23 19:23:05,519:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-23 19:23:05,519:INFO:version 3.3.2
2024-09-23 19:23:05,519:INFO:Initializing setup()
2024-09-23 19:23:05,519:INFO:self.USI: 4e73
2024-09-23 19:23:05,520:INFO:self._variable_keys: {'data', 'pipeline', 'gpu_param', 'X_train', 'fold_generator', 'exp_id', 'fold_groups_param', 'fold_shuffle_param', 'n_jobs_param', 'gpu_n_jobs_param', 'target_param', 'y_test', 'logging_param', 'USI', 'idx', '_available_plots', 'is_multiclass', '_ml_usecase', 'memory', 'X', 'exp_name_log', 'log_plots_param', 'y', 'fix_imbalance', 'html_param', 'y_train', 'X_test', 'seed'}
2024-09-23 19:23:05,520:INFO:Checking environment
2024-09-23 19:23:05,520:INFO:python_version: 3.10.12
2024-09-23 19:23:05,520:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-23 19:23:05,520:INFO:machine: arm64
2024-09-23 19:23:05,543:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:23:05,543:INFO:Memory: svmem(total=17179869184, available=6030802944, percent=64.9, used=7346225152, free=1542406144, active=4463673344, inactive=4338237440, wired=2882551808)
2024-09-23 19:23:05,544:INFO:Physical Core: 10
2024-09-23 19:23:05,544:INFO:Logical Core: 10
2024-09-23 19:23:05,544:INFO:Checking libraries
2024-09-23 19:23:05,544:INFO:System:
2024-09-23 19:23:05,544:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-23 19:23:05,544:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-23 19:23:05,544:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:23:05,544:INFO:PyCaret required dependencies:
2024-09-23 19:23:05,562:INFO:                 pip: 23.0.1
2024-09-23 19:23:05,562:INFO:          setuptools: 65.5.0
2024-09-23 19:23:05,562:INFO:             pycaret: 3.3.2
2024-09-23 19:23:05,562:INFO:             IPython: 8.27.0
2024-09-23 19:23:05,562:INFO:          ipywidgets: 8.1.5
2024-09-23 19:23:05,562:INFO:                tqdm: 4.66.5
2024-09-23 19:23:05,562:INFO:               numpy: 1.26.4
2024-09-23 19:23:05,562:INFO:              pandas: 2.1.4
2024-09-23 19:23:05,562:INFO:              jinja2: 3.1.4
2024-09-23 19:23:05,562:INFO:               scipy: 1.11.4
2024-09-23 19:23:05,562:INFO:              joblib: 1.3.2
2024-09-23 19:23:05,562:INFO:             sklearn: 1.4.2
2024-09-23 19:23:05,562:INFO:                pyod: 2.0.2
2024-09-23 19:23:05,562:INFO:            imblearn: 0.12.3
2024-09-23 19:23:05,562:INFO:   category_encoders: 2.6.3
2024-09-23 19:23:05,562:INFO:            lightgbm: 4.5.0
2024-09-23 19:23:05,562:INFO:               numba: 0.60.0
2024-09-23 19:23:05,562:INFO:            requests: 2.32.3
2024-09-23 19:23:05,562:INFO:          matplotlib: 3.7.5
2024-09-23 19:23:05,562:INFO:          scikitplot: 0.3.7
2024-09-23 19:23:05,562:INFO:         yellowbrick: 1.5
2024-09-23 19:23:05,562:INFO:              plotly: 5.24.1
2024-09-23 19:23:05,562:INFO:    plotly-resampler: Not installed
2024-09-23 19:23:05,562:INFO:             kaleido: 0.2.1
2024-09-23 19:23:05,562:INFO:           schemdraw: 0.15
2024-09-23 19:23:05,562:INFO:         statsmodels: 0.14.3
2024-09-23 19:23:05,562:INFO:              sktime: 0.26.0
2024-09-23 19:23:05,562:INFO:               tbats: 1.1.3
2024-09-23 19:23:05,562:INFO:            pmdarima: 2.0.4
2024-09-23 19:23:05,562:INFO:              psutil: 6.0.0
2024-09-23 19:23:05,562:INFO:          markupsafe: 2.1.5
2024-09-23 19:23:05,562:INFO:             pickle5: Not installed
2024-09-23 19:23:05,562:INFO:         cloudpickle: 3.0.0
2024-09-23 19:23:05,562:INFO:         deprecation: 2.1.0
2024-09-23 19:23:05,562:INFO:              xxhash: 3.5.0
2024-09-23 19:23:05,562:INFO:           wurlitzer: 3.1.1
2024-09-23 19:23:05,562:INFO:PyCaret optional dependencies:
2024-09-23 19:23:05,569:INFO:                shap: 0.46.0
2024-09-23 19:23:05,569:INFO:           interpret: Not installed
2024-09-23 19:23:05,569:INFO:                umap: Not installed
2024-09-23 19:23:05,569:INFO:     ydata_profiling: Not installed
2024-09-23 19:23:05,569:INFO:  explainerdashboard: Not installed
2024-09-23 19:23:05,569:INFO:             autoviz: Not installed
2024-09-23 19:23:05,569:INFO:           fairlearn: Not installed
2024-09-23 19:23:05,569:INFO:          deepchecks: Not installed
2024-09-23 19:23:05,569:INFO:             xgboost: Not installed
2024-09-23 19:23:05,569:INFO:            catboost: Not installed
2024-09-23 19:23:05,569:INFO:              kmodes: Not installed
2024-09-23 19:23:05,569:INFO:             mlxtend: Not installed
2024-09-23 19:23:05,569:INFO:       statsforecast: Not installed
2024-09-23 19:23:05,569:INFO:        tune_sklearn: Not installed
2024-09-23 19:23:05,569:INFO:                 ray: Not installed
2024-09-23 19:23:05,569:INFO:            hyperopt: Not installed
2024-09-23 19:23:05,569:INFO:              optuna: Not installed
2024-09-23 19:23:05,569:INFO:               skopt: Not installed
2024-09-23 19:23:05,569:INFO:              mlflow: Not installed
2024-09-23 19:23:05,569:INFO:              gradio: Not installed
2024-09-23 19:23:05,569:INFO:             fastapi: Not installed
2024-09-23 19:23:05,569:INFO:             uvicorn: Not installed
2024-09-23 19:23:05,569:INFO:              m2cgen: Not installed
2024-09-23 19:23:05,569:INFO:           evidently: Not installed
2024-09-23 19:23:05,569:INFO:               fugue: Not installed
2024-09-23 19:23:05,569:INFO:           streamlit: Not installed
2024-09-23 19:23:05,569:INFO:             prophet: Not installed
2024-09-23 19:23:05,569:INFO:None
2024-09-23 19:23:05,569:INFO:Set up data.
2024-09-23 19:23:05,574:INFO:Set up folding strategy.
2024-09-23 19:23:05,574:INFO:Set up train/test split.
2024-09-23 19:23:05,577:INFO:Set up index.
2024-09-23 19:23:05,577:INFO:Assigning column types.
2024-09-23 19:23:05,579:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-23 19:23:05,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,599:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,634:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,646:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-23 19:23:05,665:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,697:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:23:05,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,710:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-23 19:23:05,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,774:INFO:Preparing preprocessing pipeline...
2024-09-23 19:23:05,774:INFO:Set up simple imputation.
2024-09-23 19:23:05,775:INFO:Set up encoding of ordinal features.
2024-09-23 19:23:05,776:INFO:Set up encoding of categorical features.
2024-09-23 19:23:05,776:INFO:Set up feature normalization.
2024-09-23 19:23:05,810:INFO:Finished creating preprocessing pipeline.
2024-09-23 19:23:05,817:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-23 19:23:05,817:INFO:Creating final display dataframe.
2024-09-23 19:23:05,902:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              4e73
2024-09-23 19:23:05,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:23:05,968:INFO:setup() successfully completed in 0.45s...............
2024-09-23 19:23:05,968:INFO:Initializing compare_models()
2024-09-23 19:23:05,968:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-09-23 19:23:05,968:INFO:Checking exceptions
2024-09-23 19:23:05,970:INFO:Preparing display monitor
2024-09-23 19:23:05,987:INFO:Initializing Logistic Regression
2024-09-23 19:23:05,987:INFO:Total runtime is 3.3815701802571615e-06 minutes
2024-09-23 19:23:05,987:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:05,988:INFO:Initializing create_model()
2024-09-23 19:23:05,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:05,988:INFO:Checking exceptions
2024-09-23 19:23:05,988:INFO:Importing libraries
2024-09-23 19:23:05,988:INFO:Copying training dataset
2024-09-23 19:23:05,990:INFO:Defining folds
2024-09-23 19:23:05,990:INFO:Declaring metric variables
2024-09-23 19:23:05,990:INFO:Importing untrained model
2024-09-23 19:23:05,990:INFO:Logistic Regression Imported successfully
2024-09-23 19:23:05,990:INFO:Starting cross validation
2024-09-23 19:23:05,991:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:07,685:INFO:Calculating mean and std
2024-09-23 19:23:07,688:INFO:Creating metrics dataframe
2024-09-23 19:23:07,691:INFO:Uploading results into container
2024-09-23 19:23:07,691:INFO:Uploading model into container now
2024-09-23 19:23:07,692:INFO:_master_model_container: 1
2024-09-23 19:23:07,692:INFO:_display_container: 2
2024-09-23 19:23:07,692:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-09-23 19:23:07,692:INFO:create_model() successfully completed......................................
2024-09-23 19:23:07,747:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:07,747:INFO:Creating metrics dataframe
2024-09-23 19:23:07,749:INFO:Initializing K Neighbors Classifier
2024-09-23 19:23:07,749:INFO:Total runtime is 0.029363898436228435 minutes
2024-09-23 19:23:07,749:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:07,749:INFO:Initializing create_model()
2024-09-23 19:23:07,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:07,749:INFO:Checking exceptions
2024-09-23 19:23:07,749:INFO:Importing libraries
2024-09-23 19:23:07,749:INFO:Copying training dataset
2024-09-23 19:23:07,751:INFO:Defining folds
2024-09-23 19:23:07,751:INFO:Declaring metric variables
2024-09-23 19:23:07,751:INFO:Importing untrained model
2024-09-23 19:23:07,751:INFO:K Neighbors Classifier Imported successfully
2024-09-23 19:23:07,751:INFO:Starting cross validation
2024-09-23 19:23:07,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:07,866:INFO:Calculating mean and std
2024-09-23 19:23:07,866:INFO:Creating metrics dataframe
2024-09-23 19:23:07,867:INFO:Uploading results into container
2024-09-23 19:23:07,867:INFO:Uploading model into container now
2024-09-23 19:23:07,867:INFO:_master_model_container: 2
2024-09-23 19:23:07,867:INFO:_display_container: 2
2024-09-23 19:23:07,867:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-09-23 19:23:07,867:INFO:create_model() successfully completed......................................
2024-09-23 19:23:07,906:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:07,906:INFO:Creating metrics dataframe
2024-09-23 19:23:07,907:INFO:Initializing Naive Bayes
2024-09-23 19:23:07,908:INFO:Total runtime is 0.03200804392496745 minutes
2024-09-23 19:23:07,908:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:07,908:INFO:Initializing create_model()
2024-09-23 19:23:07,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:07,908:INFO:Checking exceptions
2024-09-23 19:23:07,908:INFO:Importing libraries
2024-09-23 19:23:07,908:INFO:Copying training dataset
2024-09-23 19:23:07,909:INFO:Defining folds
2024-09-23 19:23:07,909:INFO:Declaring metric variables
2024-09-23 19:23:07,909:INFO:Importing untrained model
2024-09-23 19:23:07,909:INFO:Naive Bayes Imported successfully
2024-09-23 19:23:07,910:INFO:Starting cross validation
2024-09-23 19:23:07,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:07,989:INFO:Calculating mean and std
2024-09-23 19:23:07,989:INFO:Creating metrics dataframe
2024-09-23 19:23:07,990:INFO:Uploading results into container
2024-09-23 19:23:07,991:INFO:Uploading model into container now
2024-09-23 19:23:07,991:INFO:_master_model_container: 3
2024-09-23 19:23:07,991:INFO:_display_container: 2
2024-09-23 19:23:07,991:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-09-23 19:23:07,991:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,031:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,031:INFO:Creating metrics dataframe
2024-09-23 19:23:08,032:INFO:Initializing Decision Tree Classifier
2024-09-23 19:23:08,032:INFO:Total runtime is 0.03408131202061971 minutes
2024-09-23 19:23:08,032:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,032:INFO:Initializing create_model()
2024-09-23 19:23:08,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,032:INFO:Checking exceptions
2024-09-23 19:23:08,032:INFO:Importing libraries
2024-09-23 19:23:08,032:INFO:Copying training dataset
2024-09-23 19:23:08,034:INFO:Defining folds
2024-09-23 19:23:08,034:INFO:Declaring metric variables
2024-09-23 19:23:08,034:INFO:Importing untrained model
2024-09-23 19:23:08,034:INFO:Decision Tree Classifier Imported successfully
2024-09-23 19:23:08,035:INFO:Starting cross validation
2024-09-23 19:23:08,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,118:INFO:Calculating mean and std
2024-09-23 19:23:08,118:INFO:Creating metrics dataframe
2024-09-23 19:23:08,119:INFO:Uploading results into container
2024-09-23 19:23:08,119:INFO:Uploading model into container now
2024-09-23 19:23:08,120:INFO:_master_model_container: 4
2024-09-23 19:23:08,120:INFO:_display_container: 2
2024-09-23 19:23:08,120:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-09-23 19:23:08,120:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,160:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,160:INFO:Creating metrics dataframe
2024-09-23 19:23:08,161:INFO:Initializing SVM - Linear Kernel
2024-09-23 19:23:08,161:INFO:Total runtime is 0.03623222907384237 minutes
2024-09-23 19:23:08,161:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,161:INFO:Initializing create_model()
2024-09-23 19:23:08,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,161:INFO:Checking exceptions
2024-09-23 19:23:08,161:INFO:Importing libraries
2024-09-23 19:23:08,161:INFO:Copying training dataset
2024-09-23 19:23:08,163:INFO:Defining folds
2024-09-23 19:23:08,163:INFO:Declaring metric variables
2024-09-23 19:23:08,163:INFO:Importing untrained model
2024-09-23 19:23:08,163:INFO:SVM - Linear Kernel Imported successfully
2024-09-23 19:23:08,163:INFO:Starting cross validation
2024-09-23 19:23:08,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,241:INFO:Calculating mean and std
2024-09-23 19:23:08,241:INFO:Creating metrics dataframe
2024-09-23 19:23:08,242:INFO:Uploading results into container
2024-09-23 19:23:08,243:INFO:Uploading model into container now
2024-09-23 19:23:08,243:INFO:_master_model_container: 5
2024-09-23 19:23:08,243:INFO:_display_container: 2
2024-09-23 19:23:08,243:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-09-23 19:23:08,243:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,281:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,281:INFO:Creating metrics dataframe
2024-09-23 19:23:08,282:INFO:Initializing Ridge Classifier
2024-09-23 19:23:08,282:INFO:Total runtime is 0.038252294063568115 minutes
2024-09-23 19:23:08,282:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,282:INFO:Initializing create_model()
2024-09-23 19:23:08,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,282:INFO:Checking exceptions
2024-09-23 19:23:08,282:INFO:Importing libraries
2024-09-23 19:23:08,282:INFO:Copying training dataset
2024-09-23 19:23:08,284:INFO:Defining folds
2024-09-23 19:23:08,284:INFO:Declaring metric variables
2024-09-23 19:23:08,284:INFO:Importing untrained model
2024-09-23 19:23:08,284:INFO:Ridge Classifier Imported successfully
2024-09-23 19:23:08,284:INFO:Starting cross validation
2024-09-23 19:23:08,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,364:INFO:Calculating mean and std
2024-09-23 19:23:08,364:INFO:Creating metrics dataframe
2024-09-23 19:23:08,365:INFO:Uploading results into container
2024-09-23 19:23:08,365:INFO:Uploading model into container now
2024-09-23 19:23:08,365:INFO:_master_model_container: 6
2024-09-23 19:23:08,365:INFO:_display_container: 2
2024-09-23 19:23:08,365:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-09-23 19:23:08,365:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,403:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,403:INFO:Creating metrics dataframe
2024-09-23 19:23:08,404:INFO:Initializing Random Forest Classifier
2024-09-23 19:23:08,404:INFO:Total runtime is 0.04028374354044596 minutes
2024-09-23 19:23:08,404:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,404:INFO:Initializing create_model()
2024-09-23 19:23:08,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,404:INFO:Checking exceptions
2024-09-23 19:23:08,404:INFO:Importing libraries
2024-09-23 19:23:08,404:INFO:Copying training dataset
2024-09-23 19:23:08,406:INFO:Defining folds
2024-09-23 19:23:08,406:INFO:Declaring metric variables
2024-09-23 19:23:08,406:INFO:Importing untrained model
2024-09-23 19:23:08,406:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:23:08,406:INFO:Starting cross validation
2024-09-23 19:23:08,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,636:INFO:Calculating mean and std
2024-09-23 19:23:08,636:INFO:Creating metrics dataframe
2024-09-23 19:23:08,637:INFO:Uploading results into container
2024-09-23 19:23:08,637:INFO:Uploading model into container now
2024-09-23 19:23:08,637:INFO:_master_model_container: 7
2024-09-23 19:23:08,637:INFO:_display_container: 2
2024-09-23 19:23:08,638:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:08,638:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,676:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,677:INFO:Creating metrics dataframe
2024-09-23 19:23:08,678:INFO:Initializing Quadratic Discriminant Analysis
2024-09-23 19:23:08,678:INFO:Total runtime is 0.04484454790751139 minutes
2024-09-23 19:23:08,678:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,678:INFO:Initializing create_model()
2024-09-23 19:23:08,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,678:INFO:Checking exceptions
2024-09-23 19:23:08,678:INFO:Importing libraries
2024-09-23 19:23:08,678:INFO:Copying training dataset
2024-09-23 19:23:08,679:INFO:Defining folds
2024-09-23 19:23:08,679:INFO:Declaring metric variables
2024-09-23 19:23:08,679:INFO:Importing untrained model
2024-09-23 19:23:08,680:INFO:Quadratic Discriminant Analysis Imported successfully
2024-09-23 19:23:08,680:INFO:Starting cross validation
2024-09-23 19:23:08,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,709:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,709:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,709:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,711:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,711:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,713:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,720:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,729:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,732:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,740:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:23:08,760:INFO:Calculating mean and std
2024-09-23 19:23:08,761:INFO:Creating metrics dataframe
2024-09-23 19:23:08,761:INFO:Uploading results into container
2024-09-23 19:23:08,762:INFO:Uploading model into container now
2024-09-23 19:23:08,762:INFO:_master_model_container: 8
2024-09-23 19:23:08,762:INFO:_display_container: 2
2024-09-23 19:23:08,762:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-09-23 19:23:08,762:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,800:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,801:INFO:Creating metrics dataframe
2024-09-23 19:23:08,802:INFO:Initializing Ada Boost Classifier
2024-09-23 19:23:08,802:INFO:Total runtime is 0.04691042900085449 minutes
2024-09-23 19:23:08,802:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,802:INFO:Initializing create_model()
2024-09-23 19:23:08,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,802:INFO:Checking exceptions
2024-09-23 19:23:08,802:INFO:Importing libraries
2024-09-23 19:23:08,802:INFO:Copying training dataset
2024-09-23 19:23:08,803:INFO:Defining folds
2024-09-23 19:23:08,803:INFO:Declaring metric variables
2024-09-23 19:23:08,803:INFO:Importing untrained model
2024-09-23 19:23:08,804:INFO:Ada Boost Classifier Imported successfully
2024-09-23 19:23:08,804:INFO:Starting cross validation
2024-09-23 19:23:08,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:08,832:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,833:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,836:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,840:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,840:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,842:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,843:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,859:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,871:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,883:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:23:08,940:INFO:Calculating mean and std
2024-09-23 19:23:08,940:INFO:Creating metrics dataframe
2024-09-23 19:23:08,941:INFO:Uploading results into container
2024-09-23 19:23:08,942:INFO:Uploading model into container now
2024-09-23 19:23:08,942:INFO:_master_model_container: 9
2024-09-23 19:23:08,942:INFO:_display_container: 2
2024-09-23 19:23:08,942:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-09-23 19:23:08,942:INFO:create_model() successfully completed......................................
2024-09-23 19:23:08,980:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:08,980:INFO:Creating metrics dataframe
2024-09-23 19:23:08,981:INFO:Initializing Gradient Boosting Classifier
2024-09-23 19:23:08,981:INFO:Total runtime is 0.04990418354670206 minutes
2024-09-23 19:23:08,981:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:08,982:INFO:Initializing create_model()
2024-09-23 19:23:08,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:08,982:INFO:Checking exceptions
2024-09-23 19:23:08,982:INFO:Importing libraries
2024-09-23 19:23:08,982:INFO:Copying training dataset
2024-09-23 19:23:08,984:INFO:Defining folds
2024-09-23 19:23:08,984:INFO:Declaring metric variables
2024-09-23 19:23:08,984:INFO:Importing untrained model
2024-09-23 19:23:08,984:INFO:Gradient Boosting Classifier Imported successfully
2024-09-23 19:23:08,984:INFO:Starting cross validation
2024-09-23 19:23:08,985:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:09,148:INFO:Calculating mean and std
2024-09-23 19:23:09,148:INFO:Creating metrics dataframe
2024-09-23 19:23:09,149:INFO:Uploading results into container
2024-09-23 19:23:09,149:INFO:Uploading model into container now
2024-09-23 19:23:09,149:INFO:_master_model_container: 10
2024-09-23 19:23:09,150:INFO:_display_container: 2
2024-09-23 19:23:09,150:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-09-23 19:23:09,150:INFO:create_model() successfully completed......................................
2024-09-23 19:23:09,188:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:09,189:INFO:Creating metrics dataframe
2024-09-23 19:23:09,190:INFO:Initializing Linear Discriminant Analysis
2024-09-23 19:23:09,190:INFO:Total runtime is 0.053383179505666095 minutes
2024-09-23 19:23:09,190:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:09,190:INFO:Initializing create_model()
2024-09-23 19:23:09,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:09,190:INFO:Checking exceptions
2024-09-23 19:23:09,190:INFO:Importing libraries
2024-09-23 19:23:09,190:INFO:Copying training dataset
2024-09-23 19:23:09,192:INFO:Defining folds
2024-09-23 19:23:09,192:INFO:Declaring metric variables
2024-09-23 19:23:09,192:INFO:Importing untrained model
2024-09-23 19:23:09,192:INFO:Linear Discriminant Analysis Imported successfully
2024-09-23 19:23:09,192:INFO:Starting cross validation
2024-09-23 19:23:09,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:09,273:INFO:Calculating mean and std
2024-09-23 19:23:09,273:INFO:Creating metrics dataframe
2024-09-23 19:23:09,274:INFO:Uploading results into container
2024-09-23 19:23:09,275:INFO:Uploading model into container now
2024-09-23 19:23:09,275:INFO:_master_model_container: 11
2024-09-23 19:23:09,275:INFO:_display_container: 2
2024-09-23 19:23:09,275:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-09-23 19:23:09,275:INFO:create_model() successfully completed......................................
2024-09-23 19:23:09,314:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:09,314:INFO:Creating metrics dataframe
2024-09-23 19:23:09,315:INFO:Initializing Extra Trees Classifier
2024-09-23 19:23:09,315:INFO:Total runtime is 0.05547253290812174 minutes
2024-09-23 19:23:09,315:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:09,316:INFO:Initializing create_model()
2024-09-23 19:23:09,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:09,316:INFO:Checking exceptions
2024-09-23 19:23:09,316:INFO:Importing libraries
2024-09-23 19:23:09,316:INFO:Copying training dataset
2024-09-23 19:23:09,317:INFO:Defining folds
2024-09-23 19:23:09,317:INFO:Declaring metric variables
2024-09-23 19:23:09,317:INFO:Importing untrained model
2024-09-23 19:23:09,318:INFO:Extra Trees Classifier Imported successfully
2024-09-23 19:23:09,318:INFO:Starting cross validation
2024-09-23 19:23:09,318:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:09,537:INFO:Calculating mean and std
2024-09-23 19:23:09,537:INFO:Creating metrics dataframe
2024-09-23 19:23:09,538:INFO:Uploading results into container
2024-09-23 19:23:09,538:INFO:Uploading model into container now
2024-09-23 19:23:09,539:INFO:_master_model_container: 12
2024-09-23 19:23:09,539:INFO:_display_container: 2
2024-09-23 19:23:09,539:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-09-23 19:23:09,539:INFO:create_model() successfully completed......................................
2024-09-23 19:23:09,577:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:09,577:INFO:Creating metrics dataframe
2024-09-23 19:23:09,578:INFO:Initializing Light Gradient Boosting Machine
2024-09-23 19:23:09,578:INFO:Total runtime is 0.059853712717692055 minutes
2024-09-23 19:23:09,578:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:09,578:INFO:Initializing create_model()
2024-09-23 19:23:09,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:09,578:INFO:Checking exceptions
2024-09-23 19:23:09,578:INFO:Importing libraries
2024-09-23 19:23:09,579:INFO:Copying training dataset
2024-09-23 19:23:09,580:INFO:Defining folds
2024-09-23 19:23:09,580:INFO:Declaring metric variables
2024-09-23 19:23:09,580:INFO:Importing untrained model
2024-09-23 19:23:09,580:INFO:Light Gradient Boosting Machine Imported successfully
2024-09-23 19:23:09,580:INFO:Starting cross validation
2024-09-23 19:23:09,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:12,583:INFO:Calculating mean and std
2024-09-23 19:23:12,583:INFO:Creating metrics dataframe
2024-09-23 19:23:12,584:INFO:Uploading results into container
2024-09-23 19:23:12,584:INFO:Uploading model into container now
2024-09-23 19:23:12,585:INFO:_master_model_container: 13
2024-09-23 19:23:12,585:INFO:_display_container: 2
2024-09-23 19:23:12,585:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-09-23 19:23:12,585:INFO:create_model() successfully completed......................................
2024-09-23 19:23:12,623:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:12,624:INFO:Creating metrics dataframe
2024-09-23 19:23:12,625:INFO:Initializing Dummy Classifier
2024-09-23 19:23:12,625:INFO:Total runtime is 0.11062908172607422 minutes
2024-09-23 19:23:12,625:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:12,625:INFO:Initializing create_model()
2024-09-23 19:23:12,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16cc1f2b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:12,625:INFO:Checking exceptions
2024-09-23 19:23:12,625:INFO:Importing libraries
2024-09-23 19:23:12,625:INFO:Copying training dataset
2024-09-23 19:23:12,626:INFO:Defining folds
2024-09-23 19:23:12,626:INFO:Declaring metric variables
2024-09-23 19:23:12,626:INFO:Importing untrained model
2024-09-23 19:23:12,627:INFO:Dummy Classifier Imported successfully
2024-09-23 19:23:12,627:INFO:Starting cross validation
2024-09-23 19:23:12,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:12,668:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,669:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,670:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,670:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,670:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,676:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,678:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,679:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,685:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,699:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:23:12,705:INFO:Calculating mean and std
2024-09-23 19:23:12,705:INFO:Creating metrics dataframe
2024-09-23 19:23:12,706:INFO:Uploading results into container
2024-09-23 19:23:12,706:INFO:Uploading model into container now
2024-09-23 19:23:12,707:INFO:_master_model_container: 14
2024-09-23 19:23:12,707:INFO:_display_container: 2
2024-09-23 19:23:12,707:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-09-23 19:23:12,707:INFO:create_model() successfully completed......................................
2024-09-23 19:23:12,745:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:12,745:INFO:Creating metrics dataframe
2024-09-23 19:23:12,747:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-09-23 19:23:12,747:INFO:Initializing create_model()
2024-09-23 19:23:12,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:12,747:INFO:Checking exceptions
2024-09-23 19:23:12,748:INFO:Importing libraries
2024-09-23 19:23:12,748:INFO:Copying training dataset
2024-09-23 19:23:12,750:INFO:Defining folds
2024-09-23 19:23:12,750:INFO:Declaring metric variables
2024-09-23 19:23:12,750:INFO:Importing untrained model
2024-09-23 19:23:12,750:INFO:Declaring custom model
2024-09-23 19:23:12,750:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:23:12,751:INFO:Cross validation set to False
2024-09-23 19:23:12,751:INFO:Fitting Model
2024-09-23 19:23:12,855:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:12,855:INFO:create_model() successfully completed......................................
2024-09-23 19:23:12,897:INFO:_master_model_container: 14
2024-09-23 19:23:12,898:INFO:_display_container: 2
2024-09-23 19:23:12,898:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:12,898:INFO:compare_models() successfully completed......................................
2024-09-23 19:23:12,898:INFO:Initializing tune_model()
2024-09-23 19:23:12,898:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>)
2024-09-23 19:23:12,898:INFO:Checking exceptions
2024-09-23 19:23:12,899:INFO:Copying training dataset
2024-09-23 19:23:12,900:INFO:Checking base model
2024-09-23 19:23:12,900:INFO:Base model : Random Forest Classifier
2024-09-23 19:23:12,900:INFO:Declaring metric variables
2024-09-23 19:23:12,900:INFO:Defining Hyperparameters
2024-09-23 19:23:12,940:INFO:Tuning with n_jobs=-1
2024-09-23 19:23:12,940:INFO:Initializing RandomizedSearchCV
2024-09-23 19:23:15,559:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2024-09-23 19:23:15,559:INFO:Hyperparameter search completed
2024-09-23 19:23:15,559:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:15,559:INFO:Initializing create_model()
2024-09-23 19:23:15,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16d4a6500>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2024-09-23 19:23:15,559:INFO:Checking exceptions
2024-09-23 19:23:15,559:INFO:Importing libraries
2024-09-23 19:23:15,559:INFO:Copying training dataset
2024-09-23 19:23:15,561:INFO:Defining folds
2024-09-23 19:23:15,561:INFO:Declaring metric variables
2024-09-23 19:23:15,561:INFO:Importing untrained model
2024-09-23 19:23:15,561:INFO:Declaring custom model
2024-09-23 19:23:15,561:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:23:15,561:INFO:Starting cross validation
2024-09-23 19:23:15,562:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:16,038:INFO:Calculating mean and std
2024-09-23 19:23:16,039:INFO:Creating metrics dataframe
2024-09-23 19:23:16,040:INFO:Finalizing model
2024-09-23 19:23:16,230:INFO:Uploading results into container
2024-09-23 19:23:16,230:INFO:Uploading model into container now
2024-09-23 19:23:16,231:INFO:_master_model_container: 15
2024-09-23 19:23:16,231:INFO:_display_container: 3
2024-09-23 19:23:16,231:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:16,231:INFO:create_model() successfully completed......................................
2024-09-23 19:23:16,270:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:16,270:INFO:choose_better activated
2024-09-23 19:23:16,270:INFO:SubProcess create_model() called ==================================
2024-09-23 19:23:16,270:INFO:Initializing create_model()
2024-09-23 19:23:16,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:16,270:INFO:Checking exceptions
2024-09-23 19:23:16,271:INFO:Importing libraries
2024-09-23 19:23:16,271:INFO:Copying training dataset
2024-09-23 19:23:16,272:INFO:Defining folds
2024-09-23 19:23:16,272:INFO:Declaring metric variables
2024-09-23 19:23:16,272:INFO:Importing untrained model
2024-09-23 19:23:16,272:INFO:Declaring custom model
2024-09-23 19:23:16,272:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:23:16,273:INFO:Starting cross validation
2024-09-23 19:23:16,273:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:23:16,509:INFO:Calculating mean and std
2024-09-23 19:23:16,510:INFO:Creating metrics dataframe
2024-09-23 19:23:16,511:INFO:Finalizing model
2024-09-23 19:23:16,613:INFO:Uploading results into container
2024-09-23 19:23:16,614:INFO:Uploading model into container now
2024-09-23 19:23:16,614:INFO:_master_model_container: 16
2024-09-23 19:23:16,614:INFO:_display_container: 4
2024-09-23 19:23:16,614:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:16,614:INFO:create_model() successfully completed......................................
2024-09-23 19:23:16,652:INFO:SubProcess create_model() end ==================================
2024-09-23 19:23:16,652:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8202
2024-09-23 19:23:16,652:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8235
2024-09-23 19:23:16,652:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2024-09-23 19:23:16,652:INFO:choose_better completed
2024-09-23 19:23:16,656:INFO:_master_model_container: 16
2024-09-23 19:23:16,656:INFO:_display_container: 3
2024-09-23 19:23:16,656:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:16,656:INFO:tune_model() successfully completed......................................
2024-09-23 19:23:16,696:INFO:Initializing finalize_model()
2024-09-23 19:23:16,696:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-09-23 19:23:16,697:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:23:16,698:INFO:Initializing create_model()
2024-09-23 19:23:16,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:23:16,698:INFO:Checking exceptions
2024-09-23 19:23:16,698:INFO:Importing libraries
2024-09-23 19:23:16,698:INFO:Copying training dataset
2024-09-23 19:23:16,698:INFO:Defining folds
2024-09-23 19:23:16,698:INFO:Declaring metric variables
2024-09-23 19:23:16,698:INFO:Importing untrained model
2024-09-23 19:23:16,698:INFO:Declaring custom model
2024-09-23 19:23:16,699:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:23:16,699:INFO:Cross validation set to False
2024-09-23 19:23:16,700:INFO:Fitting Model
2024-09-23 19:23:16,909:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:23:16,909:INFO:create_model() successfully completed......................................
2024-09-23 19:23:16,946:INFO:_master_model_container: 16
2024-09-23 19:23:16,946:INFO:_display_container: 3
2024-09-23 19:23:16,953:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:23:16,953:INFO:finalize_model() successfully completed......................................
2024-09-23 19:23:16,989:INFO:Initializing get_config()
2024-09-23 19:23:16,989:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, variable=X_train)
2024-09-23 19:23:16,989:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2024-09-23 19:23:16,990:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2024-09-23 19:23:16,994:INFO:Variable:  returned as      PassengerId  Pclass     Sex   Age  SibSp  Parch       Fare Embarked
748          749       1    male  19.0      1      0  53.099998        S
45            46       3    male   NaN      0      0   8.050000        S
28            29       3  female   NaN      0      0   7.879200        Q
633          634       1    male   NaN      0      0   0.000000        S
403          404       3    male  28.0      1      0  15.850000        S
..           ...     ...     ...   ...    ...    ...        ...      ...
476          477       2    male  34.0      1      0  21.000000        S
190          191       2  female  32.0      0      0  13.000000        S
736          737       3  female  48.0      1      3  34.375000        S
462          463       1    male  47.0      0      0  38.500000        S
136          137       1  female  19.0      0      2  26.283300        S

[623 rows x 8 columns]
2024-09-23 19:23:16,994:INFO:get_config() successfully completed......................................
2024-09-23 19:23:16,994:INFO:Initializing get_config()
2024-09-23 19:23:16,994:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, variable=X_test)
2024-09-23 19:23:16,995:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2024-09-23 19:23:16,995:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2024-09-23 19:23:16,999:INFO:Variable:  returned as      PassengerId  Pclass     Sex   Age  SibSp  Parch       Fare Embarked
625          626       1    male  61.0      0      0  32.320801        S
566          567       3    male  19.0      0      0   7.895800        S
459          460       3    male   NaN      0      0   7.750000        Q
804          805       3    male  27.0      0      0   6.975000        S
338          339       3    male  45.0      0      0   8.050000        S
..           ...     ...     ...   ...    ...    ...        ...      ...
184          185       3  female   4.0      0      2  22.025000        S
607          608       1    male  27.0      0      0  30.500000        S
624          625       3    male  21.0      0      0  16.100000        S
103          104       3    male  33.0      0      0   8.654200        S
387          388       2  female  36.0      0      0  13.000000        S

[268 rows x 8 columns]
2024-09-23 19:23:16,999:INFO:get_config() successfully completed......................................
2024-09-23 19:23:17,006:INFO:Initializing predict_model()
2024-09-23 19:23:17,006:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16ca9b520>)
2024-09-23 19:23:17,006:INFO:Checking exceptions
2024-09-23 19:23:17,006:INFO:Preloading libraries
2024-09-23 19:23:17,006:INFO:Set up data.
2024-09-23 19:23:17,007:INFO:Set up index.
2024-09-23 19:23:17,116:INFO:Initializing evaluate_model()
2024-09-23 19:23:17,117:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-09-23 19:23:17,126:INFO:Initializing plot_model()
2024-09-23 19:23:17,126:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x100d38a00>, system=True)
2024-09-23 19:23:17,127:INFO:Checking exceptions
2024-09-23 19:23:17,142:INFO:Preloading libraries
2024-09-23 19:23:17,150:INFO:Copying training dataset
2024-09-23 19:23:17,150:INFO:Plot type: pipeline
2024-09-23 19:23:23,450:INFO:Visual Rendered Successfully
2024-09-23 19:23:23,506:INFO:plot_model() successfully completed......................................
2024-09-23 19:23:23,522:INFO:Initializing save_model()
2024-09-23 19:23:23,522:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=best_titanic_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-23 19:23:23,522:INFO:Adding model into prep_pipe
2024-09-23 19:23:23,522:WARNING:Only Model saved as it was a pipeline.
2024-09-23 19:23:23,569:INFO:best_titanic_model.pkl saved in current working directory
2024-09-23 19:23:23,576:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:23:23,576:INFO:save_model() successfully completed......................................
2024-09-23 19:26:58,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:26:58,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:26:58,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:26:58,446:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-09-23 19:26:59,246:INFO:PyCaret ClassificationExperiment
2024-09-23 19:26:59,246:INFO:Logging name: clf-default-name
2024-09-23 19:26:59,246:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-09-23 19:26:59,246:INFO:version 3.3.2
2024-09-23 19:26:59,246:INFO:Initializing setup()
2024-09-23 19:26:59,246:INFO:self.USI: 7529
2024-09-23 19:26:59,246:INFO:self._variable_keys: {'is_multiclass', 'gpu_param', 'fold_shuffle_param', 'seed', 'y_test', 'X', 'X_train', 'X_test', 'data', 'gpu_n_jobs_param', 'target_param', 'logging_param', 'n_jobs_param', 'idx', 'pipeline', 'y_train', 'memory', 'fold_groups_param', 'log_plots_param', 'fold_generator', '_available_plots', 'fix_imbalance', '_ml_usecase', 'exp_name_log', 'y', 'USI', 'exp_id', 'html_param'}
2024-09-23 19:26:59,247:INFO:Checking environment
2024-09-23 19:26:59,247:INFO:python_version: 3.10.12
2024-09-23 19:26:59,247:INFO:python_build: ('main', 'Sep 22 2024 15:59:30')
2024-09-23 19:26:59,247:INFO:machine: arm64
2024-09-23 19:26:59,272:INFO:platform: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:26:59,273:INFO:Memory: svmem(total=17179869184, available=5951340544, percent=65.4, used=7998324736, free=807550976, active=5149048832, inactive=4963909632, wired=2849275904)
2024-09-23 19:26:59,273:INFO:Physical Core: 10
2024-09-23 19:26:59,273:INFO:Logical Core: 10
2024-09-23 19:26:59,273:INFO:Checking libraries
2024-09-23 19:26:59,273:INFO:System:
2024-09-23 19:26:59,273:INFO:    python: 3.10.12 (main, Sep 22 2024, 15:59:30) [Clang 14.0.0 (clang-1400.0.29.202)]
2024-09-23 19:26:59,273:INFO:executable: /Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/bin/python3
2024-09-23 19:26:59,273:INFO:   machine: macOS-12.7.1-arm64-arm-64bit
2024-09-23 19:26:59,273:INFO:PyCaret required dependencies:
2024-09-23 19:26:59,295:INFO:                 pip: 23.0.1
2024-09-23 19:26:59,296:INFO:          setuptools: 65.5.0
2024-09-23 19:26:59,296:INFO:             pycaret: 3.3.2
2024-09-23 19:26:59,296:INFO:             IPython: 8.27.0
2024-09-23 19:26:59,296:INFO:          ipywidgets: 8.1.5
2024-09-23 19:26:59,296:INFO:                tqdm: 4.66.5
2024-09-23 19:26:59,296:INFO:               numpy: 1.26.4
2024-09-23 19:26:59,296:INFO:              pandas: 2.1.4
2024-09-23 19:26:59,296:INFO:              jinja2: 3.1.4
2024-09-23 19:26:59,296:INFO:               scipy: 1.11.4
2024-09-23 19:26:59,296:INFO:              joblib: 1.3.2
2024-09-23 19:26:59,296:INFO:             sklearn: 1.4.2
2024-09-23 19:26:59,296:INFO:                pyod: 2.0.2
2024-09-23 19:26:59,296:INFO:            imblearn: 0.12.3
2024-09-23 19:26:59,296:INFO:   category_encoders: 2.6.3
2024-09-23 19:26:59,296:INFO:            lightgbm: 4.5.0
2024-09-23 19:26:59,296:INFO:               numba: 0.60.0
2024-09-23 19:26:59,296:INFO:            requests: 2.32.3
2024-09-23 19:26:59,296:INFO:          matplotlib: 3.7.5
2024-09-23 19:26:59,296:INFO:          scikitplot: 0.3.7
2024-09-23 19:26:59,296:INFO:         yellowbrick: 1.5
2024-09-23 19:26:59,296:INFO:              plotly: 5.24.1
2024-09-23 19:26:59,296:INFO:    plotly-resampler: Not installed
2024-09-23 19:26:59,296:INFO:             kaleido: 0.2.1
2024-09-23 19:26:59,296:INFO:           schemdraw: 0.15
2024-09-23 19:26:59,296:INFO:         statsmodels: 0.14.3
2024-09-23 19:26:59,296:INFO:              sktime: 0.26.0
2024-09-23 19:26:59,296:INFO:               tbats: 1.1.3
2024-09-23 19:26:59,296:INFO:            pmdarima: 2.0.4
2024-09-23 19:26:59,296:INFO:              psutil: 6.0.0
2024-09-23 19:26:59,296:INFO:          markupsafe: 2.1.5
2024-09-23 19:26:59,296:INFO:             pickle5: Not installed
2024-09-23 19:26:59,296:INFO:         cloudpickle: 3.0.0
2024-09-23 19:26:59,296:INFO:         deprecation: 2.1.0
2024-09-23 19:26:59,296:INFO:              xxhash: 3.5.0
2024-09-23 19:26:59,296:INFO:           wurlitzer: 3.1.1
2024-09-23 19:26:59,296:INFO:PyCaret optional dependencies:
2024-09-23 19:26:59,303:INFO:                shap: 0.46.0
2024-09-23 19:26:59,303:INFO:           interpret: Not installed
2024-09-23 19:26:59,303:INFO:                umap: Not installed
2024-09-23 19:26:59,303:INFO:     ydata_profiling: Not installed
2024-09-23 19:26:59,303:INFO:  explainerdashboard: Not installed
2024-09-23 19:26:59,303:INFO:             autoviz: Not installed
2024-09-23 19:26:59,303:INFO:           fairlearn: Not installed
2024-09-23 19:26:59,303:INFO:          deepchecks: Not installed
2024-09-23 19:26:59,303:INFO:             xgboost: Not installed
2024-09-23 19:26:59,303:INFO:            catboost: Not installed
2024-09-23 19:26:59,303:INFO:              kmodes: Not installed
2024-09-23 19:26:59,303:INFO:             mlxtend: Not installed
2024-09-23 19:26:59,303:INFO:       statsforecast: Not installed
2024-09-23 19:26:59,303:INFO:        tune_sklearn: Not installed
2024-09-23 19:26:59,303:INFO:                 ray: Not installed
2024-09-23 19:26:59,303:INFO:            hyperopt: Not installed
2024-09-23 19:26:59,303:INFO:              optuna: Not installed
2024-09-23 19:26:59,303:INFO:               skopt: Not installed
2024-09-23 19:26:59,303:INFO:              mlflow: Not installed
2024-09-23 19:26:59,303:INFO:              gradio: Not installed
2024-09-23 19:26:59,303:INFO:             fastapi: Not installed
2024-09-23 19:26:59,303:INFO:             uvicorn: Not installed
2024-09-23 19:26:59,303:INFO:              m2cgen: Not installed
2024-09-23 19:26:59,303:INFO:           evidently: Not installed
2024-09-23 19:26:59,303:INFO:               fugue: Not installed
2024-09-23 19:26:59,303:INFO:           streamlit: Not installed
2024-09-23 19:26:59,303:INFO:             prophet: Not installed
2024-09-23 19:26:59,303:INFO:None
2024-09-23 19:26:59,303:INFO:Set up data.
2024-09-23 19:26:59,308:INFO:Set up folding strategy.
2024-09-23 19:26:59,308:INFO:Set up train/test split.
2024-09-23 19:26:59,312:INFO:Set up index.
2024-09-23 19:26:59,312:INFO:Assigning column types.
2024-09-23 19:26:59,314:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-09-23 19:26:59,334:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,336:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,371:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,371:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,383:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-09-23 19:26:59,402:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,433:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-09-23 19:26:59,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,446:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-09-23 19:26:59,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,511:INFO:Preparing preprocessing pipeline...
2024-09-23 19:26:59,511:INFO:Set up simple imputation.
2024-09-23 19:26:59,512:INFO:Set up encoding of ordinal features.
2024-09-23 19:26:59,513:INFO:Set up encoding of categorical features.
2024-09-23 19:26:59,513:INFO:Set up feature normalization.
2024-09-23 19:26:59,548:INFO:Finished creating preprocessing pipeline.
2024-09-23 19:26:59,555:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-09-23 19:26:59,555:INFO:Creating final display dataframe.
2024-09-23 19:26:59,641:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 11)
5   Transformed train set shape         (623, 11)
6    Transformed test set shape         (268, 11)
7               Ignore features                 3
8              Numeric features                 6
9          Categorical features                 2
10     Rows with missing values             79.5%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              7529
2024-09-23 19:26:59,675:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-09-23 19:26:59,707:INFO:setup() successfully completed in 0.46s...............
2024-09-23 19:26:59,707:INFO:Initializing compare_models()
2024-09-23 19:26:59,707:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-09-23 19:26:59,707:INFO:Checking exceptions
2024-09-23 19:26:59,709:INFO:Preparing display monitor
2024-09-23 19:26:59,718:INFO:Initializing Logistic Regression
2024-09-23 19:26:59,718:INFO:Total runtime is 3.151098887125651e-06 minutes
2024-09-23 19:26:59,718:INFO:SubProcess create_model() called ==================================
2024-09-23 19:26:59,718:INFO:Initializing create_model()
2024-09-23 19:26:59,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:26:59,718:INFO:Checking exceptions
2024-09-23 19:26:59,718:INFO:Importing libraries
2024-09-23 19:26:59,718:INFO:Copying training dataset
2024-09-23 19:26:59,720:INFO:Defining folds
2024-09-23 19:26:59,720:INFO:Declaring metric variables
2024-09-23 19:26:59,720:INFO:Importing untrained model
2024-09-23 19:26:59,721:INFO:Logistic Regression Imported successfully
2024-09-23 19:26:59,721:INFO:Starting cross validation
2024-09-23 19:26:59,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:01,429:INFO:Calculating mean and std
2024-09-23 19:27:01,432:INFO:Creating metrics dataframe
2024-09-23 19:27:01,435:INFO:Uploading results into container
2024-09-23 19:27:01,435:INFO:Uploading model into container now
2024-09-23 19:27:01,436:INFO:_master_model_container: 1
2024-09-23 19:27:01,436:INFO:_display_container: 2
2024-09-23 19:27:01,437:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-09-23 19:27:01,437:INFO:create_model() successfully completed......................................
2024-09-23 19:27:01,497:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:01,498:INFO:Creating metrics dataframe
2024-09-23 19:27:01,499:INFO:Initializing K Neighbors Classifier
2024-09-23 19:27:01,499:INFO:Total runtime is 0.02968689997990926 minutes
2024-09-23 19:27:01,499:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:01,499:INFO:Initializing create_model()
2024-09-23 19:27:01,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:01,499:INFO:Checking exceptions
2024-09-23 19:27:01,499:INFO:Importing libraries
2024-09-23 19:27:01,499:INFO:Copying training dataset
2024-09-23 19:27:01,501:INFO:Defining folds
2024-09-23 19:27:01,501:INFO:Declaring metric variables
2024-09-23 19:27:01,501:INFO:Importing untrained model
2024-09-23 19:27:01,501:INFO:K Neighbors Classifier Imported successfully
2024-09-23 19:27:01,501:INFO:Starting cross validation
2024-09-23 19:27:01,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:01,607:INFO:Calculating mean and std
2024-09-23 19:27:01,607:INFO:Creating metrics dataframe
2024-09-23 19:27:01,608:INFO:Uploading results into container
2024-09-23 19:27:01,608:INFO:Uploading model into container now
2024-09-23 19:27:01,608:INFO:_master_model_container: 2
2024-09-23 19:27:01,608:INFO:_display_container: 2
2024-09-23 19:27:01,608:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-09-23 19:27:01,608:INFO:create_model() successfully completed......................................
2024-09-23 19:27:01,646:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:01,646:INFO:Creating metrics dataframe
2024-09-23 19:27:01,648:INFO:Initializing Naive Bayes
2024-09-23 19:27:01,648:INFO:Total runtime is 0.03217028379440308 minutes
2024-09-23 19:27:01,648:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:01,648:INFO:Initializing create_model()
2024-09-23 19:27:01,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:01,648:INFO:Checking exceptions
2024-09-23 19:27:01,648:INFO:Importing libraries
2024-09-23 19:27:01,648:INFO:Copying training dataset
2024-09-23 19:27:01,650:INFO:Defining folds
2024-09-23 19:27:01,650:INFO:Declaring metric variables
2024-09-23 19:27:01,650:INFO:Importing untrained model
2024-09-23 19:27:01,650:INFO:Naive Bayes Imported successfully
2024-09-23 19:27:01,650:INFO:Starting cross validation
2024-09-23 19:27:01,651:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:01,737:INFO:Calculating mean and std
2024-09-23 19:27:01,738:INFO:Creating metrics dataframe
2024-09-23 19:27:01,739:INFO:Uploading results into container
2024-09-23 19:27:01,739:INFO:Uploading model into container now
2024-09-23 19:27:01,739:INFO:_master_model_container: 3
2024-09-23 19:27:01,739:INFO:_display_container: 2
2024-09-23 19:27:01,739:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-09-23 19:27:01,739:INFO:create_model() successfully completed......................................
2024-09-23 19:27:01,777:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:01,777:INFO:Creating metrics dataframe
2024-09-23 19:27:01,778:INFO:Initializing Decision Tree Classifier
2024-09-23 19:27:01,778:INFO:Total runtime is 0.03433923721313477 minutes
2024-09-23 19:27:01,778:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:01,778:INFO:Initializing create_model()
2024-09-23 19:27:01,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:01,778:INFO:Checking exceptions
2024-09-23 19:27:01,778:INFO:Importing libraries
2024-09-23 19:27:01,778:INFO:Copying training dataset
2024-09-23 19:27:01,780:INFO:Defining folds
2024-09-23 19:27:01,780:INFO:Declaring metric variables
2024-09-23 19:27:01,780:INFO:Importing untrained model
2024-09-23 19:27:01,780:INFO:Decision Tree Classifier Imported successfully
2024-09-23 19:27:01,780:INFO:Starting cross validation
2024-09-23 19:27:01,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:01,861:INFO:Calculating mean and std
2024-09-23 19:27:01,861:INFO:Creating metrics dataframe
2024-09-23 19:27:01,862:INFO:Uploading results into container
2024-09-23 19:27:01,862:INFO:Uploading model into container now
2024-09-23 19:27:01,862:INFO:_master_model_container: 4
2024-09-23 19:27:01,862:INFO:_display_container: 2
2024-09-23 19:27:01,862:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-09-23 19:27:01,863:INFO:create_model() successfully completed......................................
2024-09-23 19:27:01,904:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:01,904:INFO:Creating metrics dataframe
2024-09-23 19:27:01,906:INFO:Initializing SVM - Linear Kernel
2024-09-23 19:27:01,906:INFO:Total runtime is 0.03647066752115886 minutes
2024-09-23 19:27:01,906:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:01,906:INFO:Initializing create_model()
2024-09-23 19:27:01,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:01,906:INFO:Checking exceptions
2024-09-23 19:27:01,906:INFO:Importing libraries
2024-09-23 19:27:01,906:INFO:Copying training dataset
2024-09-23 19:27:01,908:INFO:Defining folds
2024-09-23 19:27:01,908:INFO:Declaring metric variables
2024-09-23 19:27:01,908:INFO:Importing untrained model
2024-09-23 19:27:01,908:INFO:SVM - Linear Kernel Imported successfully
2024-09-23 19:27:01,908:INFO:Starting cross validation
2024-09-23 19:27:01,909:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:01,988:INFO:Calculating mean and std
2024-09-23 19:27:01,988:INFO:Creating metrics dataframe
2024-09-23 19:27:01,989:INFO:Uploading results into container
2024-09-23 19:27:01,989:INFO:Uploading model into container now
2024-09-23 19:27:01,989:INFO:_master_model_container: 5
2024-09-23 19:27:01,989:INFO:_display_container: 2
2024-09-23 19:27:01,990:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-09-23 19:27:01,990:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,029:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,029:INFO:Creating metrics dataframe
2024-09-23 19:27:02,030:INFO:Initializing Ridge Classifier
2024-09-23 19:27:02,030:INFO:Total runtime is 0.038537283738454185 minutes
2024-09-23 19:27:02,030:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,030:INFO:Initializing create_model()
2024-09-23 19:27:02,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,030:INFO:Checking exceptions
2024-09-23 19:27:02,030:INFO:Importing libraries
2024-09-23 19:27:02,030:INFO:Copying training dataset
2024-09-23 19:27:02,031:INFO:Defining folds
2024-09-23 19:27:02,032:INFO:Declaring metric variables
2024-09-23 19:27:02,032:INFO:Importing untrained model
2024-09-23 19:27:02,032:INFO:Ridge Classifier Imported successfully
2024-09-23 19:27:02,032:INFO:Starting cross validation
2024-09-23 19:27:02,032:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:02,111:INFO:Calculating mean and std
2024-09-23 19:27:02,112:INFO:Creating metrics dataframe
2024-09-23 19:27:02,112:INFO:Uploading results into container
2024-09-23 19:27:02,113:INFO:Uploading model into container now
2024-09-23 19:27:02,113:INFO:_master_model_container: 6
2024-09-23 19:27:02,113:INFO:_display_container: 2
2024-09-23 19:27:02,113:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-09-23 19:27:02,113:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,151:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,151:INFO:Creating metrics dataframe
2024-09-23 19:27:02,152:INFO:Initializing Random Forest Classifier
2024-09-23 19:27:02,152:INFO:Total runtime is 0.04056959946950277 minutes
2024-09-23 19:27:02,152:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,152:INFO:Initializing create_model()
2024-09-23 19:27:02,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,152:INFO:Checking exceptions
2024-09-23 19:27:02,152:INFO:Importing libraries
2024-09-23 19:27:02,152:INFO:Copying training dataset
2024-09-23 19:27:02,153:INFO:Defining folds
2024-09-23 19:27:02,153:INFO:Declaring metric variables
2024-09-23 19:27:02,153:INFO:Importing untrained model
2024-09-23 19:27:02,154:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:27:02,154:INFO:Starting cross validation
2024-09-23 19:27:02,154:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:02,385:INFO:Calculating mean and std
2024-09-23 19:27:02,386:INFO:Creating metrics dataframe
2024-09-23 19:27:02,387:INFO:Uploading results into container
2024-09-23 19:27:02,387:INFO:Uploading model into container now
2024-09-23 19:27:02,387:INFO:_master_model_container: 7
2024-09-23 19:27:02,387:INFO:_display_container: 2
2024-09-23 19:27:02,387:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:02,387:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,426:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,426:INFO:Creating metrics dataframe
2024-09-23 19:27:02,427:INFO:Initializing Quadratic Discriminant Analysis
2024-09-23 19:27:02,427:INFO:Total runtime is 0.045163567860921225 minutes
2024-09-23 19:27:02,427:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,428:INFO:Initializing create_model()
2024-09-23 19:27:02,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,428:INFO:Checking exceptions
2024-09-23 19:27:02,428:INFO:Importing libraries
2024-09-23 19:27:02,428:INFO:Copying training dataset
2024-09-23 19:27:02,429:INFO:Defining folds
2024-09-23 19:27:02,429:INFO:Declaring metric variables
2024-09-23 19:27:02,429:INFO:Importing untrained model
2024-09-23 19:27:02,429:INFO:Quadratic Discriminant Analysis Imported successfully
2024-09-23 19:27:02,429:INFO:Starting cross validation
2024-09-23 19:27:02,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:02,457:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,458:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,461:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,463:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,463:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,466:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,468:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,473:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,479:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,486:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-09-23 19:27:02,506:INFO:Calculating mean and std
2024-09-23 19:27:02,506:INFO:Creating metrics dataframe
2024-09-23 19:27:02,507:INFO:Uploading results into container
2024-09-23 19:27:02,507:INFO:Uploading model into container now
2024-09-23 19:27:02,508:INFO:_master_model_container: 8
2024-09-23 19:27:02,508:INFO:_display_container: 2
2024-09-23 19:27:02,508:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-09-23 19:27:02,508:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,545:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,545:INFO:Creating metrics dataframe
2024-09-23 19:27:02,546:INFO:Initializing Ada Boost Classifier
2024-09-23 19:27:02,546:INFO:Total runtime is 0.04714210430781047 minutes
2024-09-23 19:27:02,546:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,546:INFO:Initializing create_model()
2024-09-23 19:27:02,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,546:INFO:Checking exceptions
2024-09-23 19:27:02,546:INFO:Importing libraries
2024-09-23 19:27:02,546:INFO:Copying training dataset
2024-09-23 19:27:02,548:INFO:Defining folds
2024-09-23 19:27:02,548:INFO:Declaring metric variables
2024-09-23 19:27:02,548:INFO:Importing untrained model
2024-09-23 19:27:02,548:INFO:Ada Boost Classifier Imported successfully
2024-09-23 19:27:02,548:INFO:Starting cross validation
2024-09-23 19:27:02,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:02,575:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,576:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,577:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,580:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,581:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,585:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,592:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,596:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,600:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,612:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-09-23 19:27:02,678:INFO:Calculating mean and std
2024-09-23 19:27:02,678:INFO:Creating metrics dataframe
2024-09-23 19:27:02,679:INFO:Uploading results into container
2024-09-23 19:27:02,680:INFO:Uploading model into container now
2024-09-23 19:27:02,680:INFO:_master_model_container: 9
2024-09-23 19:27:02,680:INFO:_display_container: 2
2024-09-23 19:27:02,680:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-09-23 19:27:02,680:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,718:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,718:INFO:Creating metrics dataframe
2024-09-23 19:27:02,719:INFO:Initializing Gradient Boosting Classifier
2024-09-23 19:27:02,719:INFO:Total runtime is 0.05002406835556031 minutes
2024-09-23 19:27:02,719:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,719:INFO:Initializing create_model()
2024-09-23 19:27:02,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,719:INFO:Checking exceptions
2024-09-23 19:27:02,719:INFO:Importing libraries
2024-09-23 19:27:02,719:INFO:Copying training dataset
2024-09-23 19:27:02,721:INFO:Defining folds
2024-09-23 19:27:02,721:INFO:Declaring metric variables
2024-09-23 19:27:02,721:INFO:Importing untrained model
2024-09-23 19:27:02,721:INFO:Gradient Boosting Classifier Imported successfully
2024-09-23 19:27:02,721:INFO:Starting cross validation
2024-09-23 19:27:02,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:02,871:INFO:Calculating mean and std
2024-09-23 19:27:02,871:INFO:Creating metrics dataframe
2024-09-23 19:27:02,872:INFO:Uploading results into container
2024-09-23 19:27:02,873:INFO:Uploading model into container now
2024-09-23 19:27:02,873:INFO:_master_model_container: 10
2024-09-23 19:27:02,873:INFO:_display_container: 2
2024-09-23 19:27:02,873:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-09-23 19:27:02,873:INFO:create_model() successfully completed......................................
2024-09-23 19:27:02,917:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:02,917:INFO:Creating metrics dataframe
2024-09-23 19:27:02,918:INFO:Initializing Linear Discriminant Analysis
2024-09-23 19:27:02,918:INFO:Total runtime is 0.05334151983261109 minutes
2024-09-23 19:27:02,918:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:02,918:INFO:Initializing create_model()
2024-09-23 19:27:02,918:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:02,918:INFO:Checking exceptions
2024-09-23 19:27:02,918:INFO:Importing libraries
2024-09-23 19:27:02,918:INFO:Copying training dataset
2024-09-23 19:27:02,920:INFO:Defining folds
2024-09-23 19:27:02,920:INFO:Declaring metric variables
2024-09-23 19:27:02,920:INFO:Importing untrained model
2024-09-23 19:27:02,920:INFO:Linear Discriminant Analysis Imported successfully
2024-09-23 19:27:02,920:INFO:Starting cross validation
2024-09-23 19:27:02,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:03,000:INFO:Calculating mean and std
2024-09-23 19:27:03,001:INFO:Creating metrics dataframe
2024-09-23 19:27:03,002:INFO:Uploading results into container
2024-09-23 19:27:03,002:INFO:Uploading model into container now
2024-09-23 19:27:03,002:INFO:_master_model_container: 11
2024-09-23 19:27:03,002:INFO:_display_container: 2
2024-09-23 19:27:03,002:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-09-23 19:27:03,002:INFO:create_model() successfully completed......................................
2024-09-23 19:27:03,039:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:03,039:INFO:Creating metrics dataframe
2024-09-23 19:27:03,041:INFO:Initializing Extra Trees Classifier
2024-09-23 19:27:03,041:INFO:Total runtime is 0.05538828372955323 minutes
2024-09-23 19:27:03,041:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:03,041:INFO:Initializing create_model()
2024-09-23 19:27:03,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:03,041:INFO:Checking exceptions
2024-09-23 19:27:03,041:INFO:Importing libraries
2024-09-23 19:27:03,041:INFO:Copying training dataset
2024-09-23 19:27:03,043:INFO:Defining folds
2024-09-23 19:27:03,043:INFO:Declaring metric variables
2024-09-23 19:27:03,043:INFO:Importing untrained model
2024-09-23 19:27:03,043:INFO:Extra Trees Classifier Imported successfully
2024-09-23 19:27:03,043:INFO:Starting cross validation
2024-09-23 19:27:03,044:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:03,243:INFO:Calculating mean and std
2024-09-23 19:27:03,244:INFO:Creating metrics dataframe
2024-09-23 19:27:03,245:INFO:Uploading results into container
2024-09-23 19:27:03,245:INFO:Uploading model into container now
2024-09-23 19:27:03,245:INFO:_master_model_container: 12
2024-09-23 19:27:03,245:INFO:_display_container: 2
2024-09-23 19:27:03,245:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-09-23 19:27:03,245:INFO:create_model() successfully completed......................................
2024-09-23 19:27:03,283:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:03,283:INFO:Creating metrics dataframe
2024-09-23 19:27:03,284:INFO:Initializing Light Gradient Boosting Machine
2024-09-23 19:27:03,284:INFO:Total runtime is 0.05944240093231202 minutes
2024-09-23 19:27:03,284:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:03,284:INFO:Initializing create_model()
2024-09-23 19:27:03,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:03,284:INFO:Checking exceptions
2024-09-23 19:27:03,284:INFO:Importing libraries
2024-09-23 19:27:03,284:INFO:Copying training dataset
2024-09-23 19:27:03,286:INFO:Defining folds
2024-09-23 19:27:03,286:INFO:Declaring metric variables
2024-09-23 19:27:03,286:INFO:Importing untrained model
2024-09-23 19:27:03,286:INFO:Light Gradient Boosting Machine Imported successfully
2024-09-23 19:27:03,286:INFO:Starting cross validation
2024-09-23 19:27:03,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:06,072:INFO:Calculating mean and std
2024-09-23 19:27:06,073:INFO:Creating metrics dataframe
2024-09-23 19:27:06,074:INFO:Uploading results into container
2024-09-23 19:27:06,074:INFO:Uploading model into container now
2024-09-23 19:27:06,074:INFO:_master_model_container: 13
2024-09-23 19:27:06,074:INFO:_display_container: 2
2024-09-23 19:27:06,074:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-09-23 19:27:06,074:INFO:create_model() successfully completed......................................
2024-09-23 19:27:06,113:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:06,113:INFO:Creating metrics dataframe
2024-09-23 19:27:06,114:INFO:Initializing Dummy Classifier
2024-09-23 19:27:06,114:INFO:Total runtime is 0.10661309957504272 minutes
2024-09-23 19:27:06,114:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:06,115:INFO:Initializing create_model()
2024-09-23 19:27:06,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285fcec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:06,115:INFO:Checking exceptions
2024-09-23 19:27:06,115:INFO:Importing libraries
2024-09-23 19:27:06,115:INFO:Copying training dataset
2024-09-23 19:27:06,116:INFO:Defining folds
2024-09-23 19:27:06,116:INFO:Declaring metric variables
2024-09-23 19:27:06,116:INFO:Importing untrained model
2024-09-23 19:27:06,116:INFO:Dummy Classifier Imported successfully
2024-09-23 19:27:06,116:INFO:Starting cross validation
2024-09-23 19:27:06,117:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:06,155:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,156:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,162:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,164:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,170:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,170:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,172:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,174:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,183:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,187:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-09-23 19:27:06,197:INFO:Calculating mean and std
2024-09-23 19:27:06,197:INFO:Creating metrics dataframe
2024-09-23 19:27:06,198:INFO:Uploading results into container
2024-09-23 19:27:06,198:INFO:Uploading model into container now
2024-09-23 19:27:06,199:INFO:_master_model_container: 14
2024-09-23 19:27:06,199:INFO:_display_container: 2
2024-09-23 19:27:06,199:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-09-23 19:27:06,199:INFO:create_model() successfully completed......................................
2024-09-23 19:27:06,239:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:06,239:INFO:Creating metrics dataframe
2024-09-23 19:27:06,241:WARNING:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-09-23 19:27:06,242:INFO:Initializing create_model()
2024-09-23 19:27:06,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:06,242:INFO:Checking exceptions
2024-09-23 19:27:06,242:INFO:Importing libraries
2024-09-23 19:27:06,243:INFO:Copying training dataset
2024-09-23 19:27:06,244:INFO:Defining folds
2024-09-23 19:27:06,244:INFO:Declaring metric variables
2024-09-23 19:27:06,244:INFO:Importing untrained model
2024-09-23 19:27:06,244:INFO:Declaring custom model
2024-09-23 19:27:06,244:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:27:06,245:INFO:Cross validation set to False
2024-09-23 19:27:06,245:INFO:Fitting Model
2024-09-23 19:27:06,343:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:06,343:INFO:create_model() successfully completed......................................
2024-09-23 19:27:06,385:INFO:_master_model_container: 14
2024-09-23 19:27:06,386:INFO:_display_container: 2
2024-09-23 19:27:06,386:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:06,386:INFO:compare_models() successfully completed......................................
2024-09-23 19:27:06,386:INFO:Initializing tune_model()
2024-09-23 19:27:06,386:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>)
2024-09-23 19:27:06,386:INFO:Checking exceptions
2024-09-23 19:27:06,387:INFO:Copying training dataset
2024-09-23 19:27:06,388:INFO:Checking base model
2024-09-23 19:27:06,388:INFO:Base model : Random Forest Classifier
2024-09-23 19:27:06,388:INFO:Declaring metric variables
2024-09-23 19:27:06,388:INFO:Defining Hyperparameters
2024-09-23 19:27:06,429:INFO:Tuning with n_jobs=-1
2024-09-23 19:27:06,429:INFO:Initializing RandomizedSearchCV
2024-09-23 19:27:09,228:INFO:best_params: {'actual_estimator__n_estimators': 230, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2024-09-23 19:27:09,229:INFO:Hyperparameter search completed
2024-09-23 19:27:09,229:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:09,229:INFO:Initializing create_model()
2024-09-23 19:27:09,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x285e87f70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 230, 'min_samples_split': 10, 'min_samples_leaf': 6, 'min_impurity_decrease': 0, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2024-09-23 19:27:09,229:INFO:Checking exceptions
2024-09-23 19:27:09,229:INFO:Importing libraries
2024-09-23 19:27:09,229:INFO:Copying training dataset
2024-09-23 19:27:09,231:INFO:Defining folds
2024-09-23 19:27:09,231:INFO:Declaring metric variables
2024-09-23 19:27:09,231:INFO:Importing untrained model
2024-09-23 19:27:09,231:INFO:Declaring custom model
2024-09-23 19:27:09,232:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:27:09,232:INFO:Starting cross validation
2024-09-23 19:27:09,232:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:09,654:INFO:Calculating mean and std
2024-09-23 19:27:09,654:INFO:Creating metrics dataframe
2024-09-23 19:27:09,655:INFO:Finalizing model
2024-09-23 19:27:09,854:INFO:Uploading results into container
2024-09-23 19:27:09,854:INFO:Uploading model into container now
2024-09-23 19:27:09,854:INFO:_master_model_container: 15
2024-09-23 19:27:09,854:INFO:_display_container: 3
2024-09-23 19:27:09,854:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:09,854:INFO:create_model() successfully completed......................................
2024-09-23 19:27:09,893:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:09,893:INFO:choose_better activated
2024-09-23 19:27:09,893:INFO:SubProcess create_model() called ==================================
2024-09-23 19:27:09,893:INFO:Initializing create_model()
2024-09-23 19:27:09,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:09,893:INFO:Checking exceptions
2024-09-23 19:27:09,894:INFO:Importing libraries
2024-09-23 19:27:09,894:INFO:Copying training dataset
2024-09-23 19:27:09,895:INFO:Defining folds
2024-09-23 19:27:09,895:INFO:Declaring metric variables
2024-09-23 19:27:09,895:INFO:Importing untrained model
2024-09-23 19:27:09,895:INFO:Declaring custom model
2024-09-23 19:27:09,896:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:27:09,896:INFO:Starting cross validation
2024-09-23 19:27:09,896:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-09-23 19:27:10,129:INFO:Calculating mean and std
2024-09-23 19:27:10,129:INFO:Creating metrics dataframe
2024-09-23 19:27:10,130:INFO:Finalizing model
2024-09-23 19:27:10,227:INFO:Uploading results into container
2024-09-23 19:27:10,228:INFO:Uploading model into container now
2024-09-23 19:27:10,228:INFO:_master_model_container: 16
2024-09-23 19:27:10,228:INFO:_display_container: 4
2024-09-23 19:27:10,228:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:10,228:INFO:create_model() successfully completed......................................
2024-09-23 19:27:10,265:INFO:SubProcess create_model() end ==================================
2024-09-23 19:27:10,265:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8202
2024-09-23 19:27:10,265:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for Accuracy is 0.8235
2024-09-23 19:27:10,266:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2024-09-23 19:27:10,266:INFO:choose_better completed
2024-09-23 19:27:10,269:INFO:_master_model_container: 16
2024-09-23 19:27:10,269:INFO:_display_container: 3
2024-09-23 19:27:10,270:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:10,270:INFO:tune_model() successfully completed......................................
2024-09-23 19:27:10,308:INFO:Initializing finalize_model()
2024-09-23 19:27:10,308:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-09-23 19:27:10,308:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-09-23 19:27:10,309:INFO:Initializing create_model()
2024-09-23 19:27:10,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1008fca30>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0, min_samples_leaf=6,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=230, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-09-23 19:27:10,309:INFO:Checking exceptions
2024-09-23 19:27:10,310:INFO:Importing libraries
2024-09-23 19:27:10,310:INFO:Copying training dataset
2024-09-23 19:27:10,310:INFO:Defining folds
2024-09-23 19:27:10,310:INFO:Declaring metric variables
2024-09-23 19:27:10,310:INFO:Importing untrained model
2024-09-23 19:27:10,310:INFO:Declaring custom model
2024-09-23 19:27:10,310:INFO:Random Forest Classifier Imported successfully
2024-09-23 19:27:10,311:INFO:Cross validation set to False
2024-09-23 19:27:10,311:INFO:Fitting Model
2024-09-23 19:27:10,512:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:27:10,512:INFO:create_model() successfully completed......................................
2024-09-23 19:27:10,548:INFO:_master_model_container: 16
2024-09-23 19:27:10,549:INFO:_display_container: 3
2024-09-23 19:27:10,556:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:27:10,556:INFO:finalize_model() successfully completed......................................
2024-09-23 19:27:10,606:INFO:Initializing save_model()
2024-09-23 19:27:10,606:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/18/v6vmm0gx75nds4r551x2kdw40000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean')))...
                 TransformerWrapper(exclude=None, include=['Embarked'],
                                    transformer=OneHotEncoder(cols=['Embarked'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-09-23 19:27:10,606:INFO:Adding model into prep_pipe
2024-09-23 19:27:10,606:WARNING:Only Model saved as it was a pipeline.
2024-09-23 19:27:10,651:INFO:/Users/Tarak/Personal/mlops_assignment_2/mlops_assignment_2/scripts/../models/best_titanic_model.pkl saved in current working directory
2024-09-23 19:27:10,658:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight={}, criterion='entropy',
                                        max_depth=9, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0,
                                        min_samples_leaf=6,
                                        min_samples_split=10,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=230,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-09-23 19:27:10,658:INFO:save_model() successfully completed......................................
